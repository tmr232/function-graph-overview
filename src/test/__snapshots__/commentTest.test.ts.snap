// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`Python: issue-101-match-catchall.py!single_match_all_underscore: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.7999999999999998; id="node5"];
}"
`;

exports[`Python: issue-101-match-catchall.py!single_match_all_named: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.7999999999999998; id="node5"];
}"
`;

exports[`Python: issue-101-match-catchall.py!with_comment: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node4 -> node3 [class="consequence"; color="#008000"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node6 -> node5 [class="consequence"; color="#008000"];
    node4 -> node6 [class="alternative"; color="#ff0000"];
    node3 -> node7 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="regular"; color="#0000ff"];
    node6 -> node7 [class="alternative"; color="#ff0000"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: issue-101-match-catchall.py!stop_after_catchall: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node4 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node4"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node5"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node4 -> node3 [class="consequence"; color="#008000"];
    node4 -> node5 [class="alternative"; color="#ff0000"];
    node3 -> node7 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: issue-101-match-catchall.py!cases_and_catchall: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node4 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node4"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node7"];
    node4 -> node3 [class="consequence"; color="#008000"];
    node6 -> node5 [class="consequence"; color="#008000"];
    node4 -> node6 [class="alternative"; color="#ff0000"];
    node6 -> node7 [class="alternative"; color="#ff0000"];
    node3 -> node9 [class="regular"; color="#0000ff"];
    node5 -> node9 [class="regular"; color="#0000ff"];
    node7 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: issue-104-assert.py!assert_without_message: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node2 [class="alternative"; color="#ff0000"];
    node1 -> node4 [class="consequence"; color="#008000"];
}"
`;

exports[`Python: issue-104-assert.py!assert_with_message: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node2 [class="alternative"; color="#ff0000"];
    node1 -> node4 [class="consequence"; color="#008000"];
}"
`;

exports[`Python: issue-104-assert.py!multiple_asserts: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node4"];
    node5 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node5"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node7"];
    node8 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node8"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node11 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node11"];
    node13 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node13"];
    node1 -> node2 [class="alternative"; color="#ff0000"];
    node4 -> node5 [class="alternative"; color="#ff0000"];
    node7 -> node8 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="alternative"; color="#ff0000"];
    node1 -> node4 [class="consequence"; color="#008000"];
    node4 -> node7 [class="consequence"; color="#008000"];
    node7 -> node10 [class="consequence"; color="#008000"];
    node10 -> node13 [class="consequence"; color="#008000"];
}"
`;

exports[`C++: issue-106-co_yield.cpp!fibonacci_sequence: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node2"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node5"];
    node6 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node6"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node9 [shape="hexagon"; orientation=90; class="yield"; fillcolor="#00bfff"; color="#000000"; height=0.3; id="node9"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node11"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
    node14 [shape="hexagon"; orientation=90; class="yield"; fillcolor="#00bfff"; color="#000000"; height=0.3; id="node14"];
    node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node15"];
    node16 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node16"];
    node21 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.5; id="node21"];
    node22 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node22"];
    node24 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node24"];
    node25 [shape="hexagon"; orientation=90; class="yield"; fillcolor="#00bfff"; color="#000000"; height=0.3; id="node25"];
    node31 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node31"];
    node23 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node23"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node8 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="consequence"; color="#008000"];
    node10 -> node13 [class="alternative"; color="#ff0000"];
    node15 -> node16 [class="consequence"; color="#008000"];
    node24 -> node25 [class="regular"; color="#0000ff"];
    node21 -> node22 [class="regular"; color="#0000ff"];
    node22 -> node24 [class="consequence"; color="#008000"];
    node22 -> node23 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node8 -> node9 [class="regular"; color="#0000ff"];
    node13 -> node14 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
    node9 -> node10 [class="regular"; color="#0000ff"];
    node14 -> node15 [class="regular"; color="#0000ff"];
    node15 -> node21 [class="alternative"; color="#ff0000"];
    node22 -> node31 [class="alternative"; color="#ff0000"];
    node25 -> node23 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: issue-111-throw-finally.py!raise_and_finally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        node4 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node4"];
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node4"];
    node2 -> node3 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: issue-111-throw-finally.ts!throwAndFinally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        node4 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node4"];
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_3 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node4"];
    node2 -> node3 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: issue-85-continue-with-label.go!ContinueToLabel: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=1.2; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node12 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node12"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node4"];
    node2 -> node3 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node3 -> node12 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
}"
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!MultipleCatchClauses: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
        subgraph cluster_3 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
        }
        subgraph cluster_4 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
        }
        subgraph cluster_5 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node2 -> node4 [style="invis"; headport="e"; tailport="w"];
    node2 -> node5 [style="invis"; headport="e"; tailport="w"];
    node2 -> node6 [style="invis"; headport="e"; tailport="w"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node7 [class="regular"; color="#0000ff"];
    node4 -> node7 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="regular"; color="#0000ff"];
    node6 -> node7 [class="regular"; color="#0000ff"];
    node2 -> node7 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!MultipleCatchClausesWithComments: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
        subgraph cluster_3 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
        }
        subgraph cluster_4 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
        }
        subgraph cluster_5 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node2 -> node4 [style="invis"; headport="e"; tailport="w"];
    node2 -> node5 [style="invis"; headport="e"; tailport="w"];
    node2 -> node6 [style="invis"; headport="e"; tailport="w"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node7 [class="regular"; color="#0000ff"];
    node4 -> node7 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="regular"; color="#0000ff"];
    node6 -> node7 [class="regular"; color="#0000ff"];
    node2 -> node7 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!EarlyCatchAll: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="regular"; color="#0000ff"];
    node2 -> node5 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!EarlyCatchAllWithComment: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="regular"; color="#0000ff"];
    node2 -> node5 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: issue32-unbraced-if-else-if.cpp!f: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node2"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node6"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node6 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: issue65-try-finally.ts!tryCatch: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: issue65-try-finally.ts!tryFinaly: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_3 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node3 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: issue65-try-finally.ts!tryCatchFinally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
        subgraph cluster_3 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node4 -> node5 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: issue77-switch-empty-fallthrough-case.go!EmptyFallthroughCases: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: issue77-switch-empty-fallthrough-case.ts!EmptyFallthroughCases: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: issue77-switch-empty-fallthrough-case.ts!EmptyFallthroughToNonEmpty: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: labledStatements.go!LabelledStatementFlow: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node7 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node7"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node7 -> node2 [class="consequence"; color="#008000"];
    node7 -> node9 [class="alternative"; color="#ff0000"];
    node2 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: labledStatements.go!ContinueToLabel: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=1.2; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node12 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node12"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node4"];
    node2 -> node3 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node3 -> node12 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
}"
`;

exports[`Go: loops.go!Loops: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node11"];
    node1 -> node3 [class="consequence"; color="#008000"];
    node1 -> node2 [class="alternative"; color="#ff0000"];
    node4 -> node1 [class="consequence"; color="#008000"];
    node4 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node4 -> node5 [class="alternative"; color="#ff0000"];
    node3 -> node5 [class="regular"; color="#0000ff"];
    node6 -> node8 [class="consequence"; color="#008000"];
    node6 -> node7 [class="alternative"; color="#ff0000"];
    node9 -> node6 [class="consequence"; color="#008000"];
    node9 -> node7 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node5 -> node9 [class="regular"; color="#0000ff"];
    node0 -> node4 [class="regular"; color="#0000ff"];
    node9 -> node11 [class="alternative"; color="#ff0000"];
    node8 -> node11 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: loops.go!cStyleForLoops: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node10"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node14"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node17"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node18"];
    node20 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node20"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node19"];
    node26 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node26"];
    node27 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node27"];
    node32 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node32"];
    node38 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node38"];
    node33 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node33"];
    node35 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node35"];
    node37 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node37"];
    node45 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node45"];
    node41 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node41"];
    node34 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node34"];
    node42 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node42"];
    node44 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node44"];
    node52 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node52"];
    node47 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node47"];
    node49 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node49"];
    node58 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node58"];
    node48 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node48"];
    node55 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node55"];
    node60 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node60"];
    node61 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node61"];
    node4 -> node6 [class="consequence"; color="#008000"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="consequence"; color="#008000"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node12 -> node14 [class="consequence"; color="#008000"];
    node10 -> node11 [class="regular"; color="#0000ff"];
    node11 -> node12 [class="consequence"; color="#008000"];
    node11 -> node17 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node18 -> node20 [class="regular"; color="#0000ff"];
    node20 -> node19 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node26 -> node27 [class="regular"; color="#0000ff"];
    node27 -> node32 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node35 -> node37 [class="consequence"; color="#008000"];
    node38 -> node33 [class="regular"; color="#0000ff"];
    node33 -> node35 [class="consequence"; color="#008000"];
    node33 -> node34 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node42 -> node44 [class="consequence"; color="#008000"];
    node45 -> node41 [class="regular"; color="#0000ff"];
    node41 -> node42 [class="consequence"; color="#008000"];
    node41 -> node47 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node52 -> node49 [class="regular"; color="#0000ff"];
    node49 -> node48 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node58 -> node55 [class="regular"; color="#0000ff"];
    node55 -> node60 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node10 [class="alternative"; color="#ff0000"];
    node6 -> node10 [class="regular"; color="#0000ff"];
    node4 -> node3 [class="alternative"; color="#ff0000"];
    node12 -> node17 [class="alternative"; color="#ff0000"];
    node11 -> node18 [class="alternative"; color="#ff0000"];
    node14 -> node18 [class="regular"; color="#0000ff"];
    node20 -> node19 [class="alternative"; color="#ff0000"];
    node20 -> node26 [class="consequence"; color="#008000"];
    node27 -> node32 [class="alternative"; color="#ff0000"];
    node27 -> node38 [class="consequence"; color="#008000"];
    node33 -> node45 [class="alternative"; color="#ff0000"];
    node37 -> node45 [class="regular"; color="#0000ff"];
    node35 -> node34 [class="alternative"; color="#ff0000"];
    node41 -> node52 [class="alternative"; color="#ff0000"];
    node44 -> node52 [class="regular"; color="#0000ff"];
    node42 -> node47 [class="alternative"; color="#ff0000"];
    node49 -> node48 [class="alternative"; color="#ff0000"];
    node49 -> node58 [class="consequence"; color="#008000"];
    node55 -> node60 [class="alternative"; color="#ff0000"];
    node55 -> node61 [class="consequence"; color="#008000"];
}"
`;

exports[`Go: loops.go!allLoops: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node10"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node14"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node17"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node18"];
    node20 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node20"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node19"];
    node26 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node26"];
    node27 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node27"];
    node32 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node32"];
    node38 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node38"];
    node33 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node33"];
    node35 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node35"];
    node37 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node37"];
    node45 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node45"];
    node41 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node41"];
    node34 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node34"];
    node42 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node42"];
    node44 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node44"];
    node52 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node52"];
    node47 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node47"];
    node49 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node49"];
    node58 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node58"];
    node48 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node48"];
    node55 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node55"];
    node59 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node59"];
    node60 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node60"];
    node64 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node64"];
    node61 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node61"];
    node65 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node65"];
    node63 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node63"];
    node62 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node62"];
    node69 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node69"];
    node66 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node66"];
    node70 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node70"];
    node68 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node68"];
    node67 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node67"];
    node71 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node71"];
    node72 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node72"];
    node74 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node74"];
    node78 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node78"];
    node75 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node75"];
    node79 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node79"];
    node77 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node77"];
    node76 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node76"];
    node83 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node83"];
    node80 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node80"];
    node82 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node82"];
    node81 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node81"];
    node85 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node85"];
    node4 -> node6 [class="consequence"; color="#008000"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="consequence"; color="#008000"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node12 -> node14 [class="consequence"; color="#008000"];
    node10 -> node11 [class="regular"; color="#0000ff"];
    node11 -> node12 [class="consequence"; color="#008000"];
    node11 -> node17 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node18 -> node20 [class="regular"; color="#0000ff"];
    node20 -> node19 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node26 -> node27 [class="regular"; color="#0000ff"];
    node27 -> node32 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node35 -> node37 [class="consequence"; color="#008000"];
    node38 -> node33 [class="regular"; color="#0000ff"];
    node33 -> node35 [class="consequence"; color="#008000"];
    node33 -> node34 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node42 -> node44 [class="consequence"; color="#008000"];
    node45 -> node41 [class="regular"; color="#0000ff"];
    node41 -> node42 [class="consequence"; color="#008000"];
    node41 -> node47 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node52 -> node49 [class="regular"; color="#0000ff"];
    node49 -> node48 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node58 -> node55 [class="regular"; color="#0000ff"];
    node55 -> node60 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node61 -> node63 [class="consequence"; color="#008000"];
    node61 -> node62 [class="alternative"; color="#ff0000"];
    node64 -> node61 [class="consequence"; color="#008000"];
    node64 -> node62 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node64 -> node65 [class="alternative"; color="#ff0000"];
    node63 -> node65 [class="regular"; color="#0000ff"];
    node66 -> node68 [class="consequence"; color="#008000"];
    node66 -> node67 [class="alternative"; color="#ff0000"];
    node69 -> node66 [class="consequence"; color="#008000"];
    node69 -> node67 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node69 -> node70 [class="alternative"; color="#ff0000"];
    node68 -> node70 [class="regular"; color="#0000ff"];
    node71 -> node72 [class="alternative"; color="#ff0000"];
    node71 -> node72 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node75 -> node77 [class="consequence"; color="#008000"];
    node75 -> node76 [class="alternative"; color="#ff0000"];
    node78 -> node75 [class="consequence"; color="#008000"];
    node78 -> node76 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node78 -> node79 [class="alternative"; color="#ff0000"];
    node77 -> node79 [class="regular"; color="#0000ff"];
    node80 -> node82 [class="consequence"; color="#008000"];
    node80 -> node81 [class="alternative"; color="#ff0000"];
    node83 -> node80 [class="consequence"; color="#008000"];
    node83 -> node81 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node59 -> node64 [class="regular"; color="#0000ff"];
    node65 -> node69 [class="regular"; color="#0000ff"];
    node70 -> node71 [class="regular"; color="#0000ff"];
    node74 -> node78 [class="regular"; color="#0000ff"];
    node79 -> node83 [class="regular"; color="#0000ff"];
    node2 -> node10 [class="alternative"; color="#ff0000"];
    node6 -> node10 [class="regular"; color="#0000ff"];
    node4 -> node3 [class="alternative"; color="#ff0000"];
    node12 -> node17 [class="alternative"; color="#ff0000"];
    node11 -> node18 [class="alternative"; color="#ff0000"];
    node14 -> node18 [class="regular"; color="#0000ff"];
    node20 -> node19 [class="alternative"; color="#ff0000"];
    node20 -> node26 [class="consequence"; color="#008000"];
    node27 -> node32 [class="alternative"; color="#ff0000"];
    node27 -> node38 [class="consequence"; color="#008000"];
    node33 -> node45 [class="alternative"; color="#ff0000"];
    node37 -> node45 [class="regular"; color="#0000ff"];
    node35 -> node34 [class="alternative"; color="#ff0000"];
    node41 -> node52 [class="alternative"; color="#ff0000"];
    node44 -> node52 [class="regular"; color="#0000ff"];
    node42 -> node47 [class="alternative"; color="#ff0000"];
    node49 -> node48 [class="alternative"; color="#ff0000"];
    node49 -> node58 [class="consequence"; color="#008000"];
    node55 -> node60 [class="alternative"; color="#ff0000"];
    node55 -> node59 [class="consequence"; color="#008000"];
    node71 -> node74 [class="consequence"; color="#008000"];
    node83 -> node85 [class="alternative"; color="#ff0000"];
    node82 -> node85 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: loops.go!infiniteLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node1 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: loops.go!condLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: loops.go!cStyleLoop_ICU: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node8 [class="alternative"; color="#ff0000"];
    node2 -> node3 [class="consequence"; color="#008000"];
}"
`;

exports[`Go: loops.go!cStyleLoop_IC: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node6 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node6 [class="consequence"; color="#008000"];
    node2 -> node7 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: loops.go!cStyleLoop_IU: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`Go: loops.go!cStyleLoop_I: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node5"];
    node1 -> node5 [class="regular"; color="#0000ff"];
    node5 -> node5 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`Go: loops.go!cStyleLoop_CU: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node4 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node4"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node4 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
    node1 -> node2 [class="consequence"; color="#008000"];
}"
`;

exports[`Go: loops.go!cStyleLoop_C: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node3 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node3"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node5"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node6"];
    node3 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node5 [class="consequence"; color="#008000"];
    node1 -> node6 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: loops.go!cStyleLoop_U: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node3 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node3"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node1"];
    node3 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`Go: loops.go!cStyleLoop_: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node4"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node4 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`C: sample.c!trivial: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
}"
`;

exports[`C: sample.c!simpleIf: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node5 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C: sample.c!ifElse: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node2 -> node8 [class="regular"; color="#0000ff"];
    node4 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node8 [class="regular"; color="#0000ff"];
}"
`;

exports[`C: sample.c!forever: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node4"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node4 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`C: sample.c!forever2: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`C: sample.c!forLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node8 [class="alternative"; color="#ff0000"];
    node2 -> node3 [class="consequence"; color="#008000"];
}"
`;

exports[`C: sample.c!whileLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C: sample.c!doWhile: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node1 [class="consequence"; color="#008000"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C: sample.c!gotoA: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node6"];
    node2 -> node3 [class="consequence"; color="#008000"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node6 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C: sample.c!switch_1: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`C: sample.c!switch_2: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
    node2 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`C: sample.c!ManyIfs: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node10"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
    node16 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node16"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node17"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node18"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node19"];
    node20 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node20"];
    node23 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node23"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="consequence"; color="#008000"];
    node10 -> node12 [class="alternative"; color="#ff0000"];
    node12 -> node13 [class="consequence"; color="#008000"];
    node16 -> node17 [class="consequence"; color="#008000"];
    node16 -> node18 [class="alternative"; color="#ff0000"];
    node18 -> node19 [class="consequence"; color="#008000"];
    node18 -> node20 [class="alternative"; color="#ff0000"];
    node2 -> node5 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
    node6 -> node10 [class="regular"; color="#0000ff"];
    node7 -> node10 [class="regular"; color="#0000ff"];
    node11 -> node16 [class="regular"; color="#0000ff"];
    node13 -> node16 [class="regular"; color="#0000ff"];
    node12 -> node16 [class="alternative"; color="#ff0000"];
    node17 -> node23 [class="regular"; color="#0000ff"];
    node19 -> node23 [class="regular"; color="#0000ff"];
    node20 -> node23 [class="regular"; color="#0000ff"];
}"
`;

exports[`C: sample.c!IfWithoutBraces: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node5 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node5"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node7"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node12"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node8"];
    node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node14"];
    node15 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node15"];
    node5 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node7 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
    node1 -> node12 [class="consequence"; color="#008000"];
    node12 -> node8 [class="regular"; color="#0000ff"];
    node8 -> node14 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node8 -> node14 [class="alternative"; color="#ff0000"];
    node8 -> node15 [class="consequence"; color="#008000"];
}"
`;

exports[`C: sample.c!ForLoops: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node7 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node7"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node3"];
    node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node15"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node10"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node11"];
    node23 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node23"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node17"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node19"];
    node30 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node30"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node18"];
    node26 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node26"];
    node32 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node32"];
    node39 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node39"];
    node33 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node33"];
    node35 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node35"];
    node47 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node47"];
    node36 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node36"];
    node42 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node42"];
    node34 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node34"];
    node43 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node43"];
    node55 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node55"];
    node44 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node44"];
    node49 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node49"];
    node51 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node51"];
    node62 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node62"];
    node50 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node50"];
    node58 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node58"];
    node64 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node64"];
    node65 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node65"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node7 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node11 -> node12 [class="consequence"; color="#008000"];
    node15 -> node10 [class="regular"; color="#0000ff"];
    node10 -> node17 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node35 -> node36 [class="consequence"; color="#008000"];
    node39 -> node33 [class="regular"; color="#0000ff"];
    node33 -> node34 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node43 -> node44 [class="consequence"; color="#008000"];
    node47 -> node42 [class="regular"; color="#0000ff"];
    node42 -> node49 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node3 [class="consequence"; color="#008000"];
    node1 -> node15 [class="alternative"; color="#ff0000"];
    node4 -> node15 [class="regular"; color="#0000ff"];
    node3 -> node2 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="consequence"; color="#008000"];
    node10 -> node23 [class="alternative"; color="#ff0000"];
    node12 -> node23 [class="regular"; color="#0000ff"];
    node11 -> node17 [class="alternative"; color="#ff0000"];
    node23 -> node19 [class="regular"; color="#0000ff"];
    node19 -> node18 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node19 -> node18 [class="alternative"; color="#ff0000"];
    node19 -> node30 [class="consequence"; color="#008000"];
    node30 -> node26 [class="regular"; color="#0000ff"];
    node26 -> node32 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node26 -> node32 [class="alternative"; color="#ff0000"];
    node26 -> node39 [class="consequence"; color="#008000"];
    node33 -> node35 [class="consequence"; color="#008000"];
    node33 -> node47 [class="alternative"; color="#ff0000"];
    node36 -> node47 [class="regular"; color="#0000ff"];
    node35 -> node34 [class="alternative"; color="#ff0000"];
    node42 -> node43 [class="consequence"; color="#008000"];
    node42 -> node55 [class="alternative"; color="#ff0000"];
    node44 -> node55 [class="regular"; color="#0000ff"];
    node43 -> node49 [class="alternative"; color="#ff0000"];
    node55 -> node51 [class="regular"; color="#0000ff"];
    node51 -> node50 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node51 -> node50 [class="alternative"; color="#ff0000"];
    node51 -> node62 [class="consequence"; color="#008000"];
    node62 -> node58 [class="regular"; color="#0000ff"];
    node58 -> node64 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node58 -> node64 [class="alternative"; color="#ff0000"];
    node58 -> node65 [class="consequence"; color="#008000"];
}"
`;

exports[`C: sample.c!MoreSwitch: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node13 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node13"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node6 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node7 -> node8 [class="consequence"; color="#008000"];
    node10 -> node13 [class="regular"; color="#0000ff"];
    node2 -> node13 [class="regular"; color="#0000ff"];
    node4 -> node13 [class="regular"; color="#0000ff"];
    node8 -> node13 [class="regular"; color="#0000ff"];
    node7 -> node10 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C++: sample.cpp!trivial: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
}"
`;

exports[`C++: sample.cpp!simpleIf: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node5 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C++: sample.cpp!ifElse: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node2 -> node8 [class="regular"; color="#0000ff"];
    node4 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node8 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: sample.cpp!forever: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node4"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node4 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`C++: sample.cpp!forever2: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`C++: sample.cpp!forLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node8 [class="alternative"; color="#ff0000"];
    node2 -> node3 [class="consequence"; color="#008000"];
}"
`;

exports[`C++: sample.cpp!whileLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C++: sample.cpp!doWhile: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node1 [class="consequence"; color="#008000"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C++: sample.cpp!gotoA: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node6"];
    node2 -> node3 [class="consequence"; color="#008000"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node6 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C++: sample.cpp!switch_1: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: sample.cpp!switch_2: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
    node2 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: sample.cpp!ManyIfs: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node10"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
    node16 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node16"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node17"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node18"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node19"];
    node20 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node20"];
    node23 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node23"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="consequence"; color="#008000"];
    node10 -> node12 [class="alternative"; color="#ff0000"];
    node12 -> node13 [class="consequence"; color="#008000"];
    node16 -> node17 [class="consequence"; color="#008000"];
    node16 -> node18 [class="alternative"; color="#ff0000"];
    node18 -> node19 [class="consequence"; color="#008000"];
    node18 -> node20 [class="alternative"; color="#ff0000"];
    node2 -> node5 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
    node6 -> node10 [class="regular"; color="#0000ff"];
    node7 -> node10 [class="regular"; color="#0000ff"];
    node11 -> node16 [class="regular"; color="#0000ff"];
    node13 -> node16 [class="regular"; color="#0000ff"];
    node12 -> node16 [class="alternative"; color="#ff0000"];
    node17 -> node23 [class="regular"; color="#0000ff"];
    node19 -> node23 [class="regular"; color="#0000ff"];
    node20 -> node23 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: sample.cpp!IfWithoutBraces: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node5 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node5"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node7"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node12"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node8"];
    node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node14"];
    node15 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node15"];
    node5 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node7 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
    node1 -> node12 [class="consequence"; color="#008000"];
    node12 -> node8 [class="regular"; color="#0000ff"];
    node8 -> node14 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node8 -> node14 [class="alternative"; color="#ff0000"];
    node8 -> node15 [class="consequence"; color="#008000"];
}"
`;

exports[`C++: sample.cpp!ForLoops: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node7 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node7"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node3"];
    node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node15"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node10"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node11"];
    node23 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node23"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node17"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node19"];
    node30 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node30"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node18"];
    node26 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node26"];
    node32 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node32"];
    node39 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node39"];
    node33 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node33"];
    node35 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node35"];
    node47 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node47"];
    node36 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node36"];
    node42 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node42"];
    node34 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node34"];
    node43 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node43"];
    node55 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node55"];
    node44 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node44"];
    node49 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node49"];
    node51 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node51"];
    node62 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node62"];
    node50 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node50"];
    node58 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node58"];
    node64 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node64"];
    node65 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node65"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node7 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node11 -> node12 [class="consequence"; color="#008000"];
    node15 -> node10 [class="regular"; color="#0000ff"];
    node10 -> node17 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node35 -> node36 [class="consequence"; color="#008000"];
    node39 -> node33 [class="regular"; color="#0000ff"];
    node33 -> node34 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node43 -> node44 [class="consequence"; color="#008000"];
    node47 -> node42 [class="regular"; color="#0000ff"];
    node42 -> node49 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node3 [class="consequence"; color="#008000"];
    node1 -> node15 [class="alternative"; color="#ff0000"];
    node4 -> node15 [class="regular"; color="#0000ff"];
    node3 -> node2 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="consequence"; color="#008000"];
    node10 -> node23 [class="alternative"; color="#ff0000"];
    node12 -> node23 [class="regular"; color="#0000ff"];
    node11 -> node17 [class="alternative"; color="#ff0000"];
    node23 -> node19 [class="regular"; color="#0000ff"];
    node19 -> node18 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node19 -> node18 [class="alternative"; color="#ff0000"];
    node19 -> node30 [class="consequence"; color="#008000"];
    node30 -> node26 [class="regular"; color="#0000ff"];
    node26 -> node32 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node26 -> node32 [class="alternative"; color="#ff0000"];
    node26 -> node39 [class="consequence"; color="#008000"];
    node33 -> node35 [class="consequence"; color="#008000"];
    node33 -> node47 [class="alternative"; color="#ff0000"];
    node36 -> node47 [class="regular"; color="#0000ff"];
    node35 -> node34 [class="alternative"; color="#ff0000"];
    node42 -> node43 [class="consequence"; color="#008000"];
    node42 -> node55 [class="alternative"; color="#ff0000"];
    node44 -> node55 [class="regular"; color="#0000ff"];
    node43 -> node49 [class="alternative"; color="#ff0000"];
    node55 -> node51 [class="regular"; color="#0000ff"];
    node51 -> node50 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node51 -> node50 [class="alternative"; color="#ff0000"];
    node51 -> node62 [class="consequence"; color="#008000"];
    node62 -> node58 [class="regular"; color="#0000ff"];
    node58 -> node64 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node58 -> node64 [class="alternative"; color="#ff0000"];
    node58 -> node65 [class="consequence"; color="#008000"];
}"
`;

exports[`C++: sample.cpp!MoreSwitch: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node13 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node13"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node6 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node7 -> node8 [class="consequence"; color="#008000"];
    node10 -> node13 [class="regular"; color="#0000ff"];
    node2 -> node13 [class="regular"; color="#0000ff"];
    node4 -> node13 [class="regular"; color="#0000ff"];
    node8 -> node13 [class="regular"; color="#0000ff"];
    node7 -> node10 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C++: sample.cpp!Exception: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="regular"; color="#0000ff"];
}"
`;

exports[`C++: sample.cpp!Throw: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`C++: sample.cpp!ForRangeLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: sample.go!trivial: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
}"
`;

exports[`Go: sample.go!ifThen: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node3 [class="consequence"; color="#008000"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: sample.go!ManyIfStatements: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node5"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
    node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node14"];
    node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node15"];
    node16 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node16"];
    node1 -> node3 [class="consequence"; color="#008000"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node5 -> node7 [class="consequence"; color="#008000"];
    node8 -> node9 [class="consequence"; color="#008000"];
    node5 -> node8 [class="alternative"; color="#ff0000"];
    node10 -> node12 [class="consequence"; color="#008000"];
    node13 -> node14 [class="consequence"; color="#008000"];
    node13 -> node15 [class="alternative"; color="#ff0000"];
    node10 -> node13 [class="alternative"; color="#ff0000"];
    node3 -> node5 [class="regular"; color="#0000ff"];
    node4 -> node5 [class="regular"; color="#0000ff"];
    node7 -> node10 [class="regular"; color="#0000ff"];
    node9 -> node10 [class="regular"; color="#0000ff"];
    node8 -> node10 [class="alternative"; color="#ff0000"];
    node12 -> node16 [class="regular"; color="#0000ff"];
    node14 -> node16 [class="regular"; color="#0000ff"];
    node15 -> node16 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: sample.go!Switch: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node11"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node7 -> node8 [class="consequence"; color="#008000"];
    node2 -> node11 [class="regular"; color="#0000ff"];
    node4 -> node11 [class="regular"; color="#0000ff"];
    node6 -> node11 [class="regular"; color="#0000ff"];
    node8 -> node11 [class="regular"; color="#0000ff"];
    node7 -> node11 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: sample.go!switchAndLabelsAndGoto: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node11"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node13"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node15"];
    node16 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node16"];
    node17 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node17"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node7 -> node8 [class="consequence"; color="#008000"];
    node13 -> node15 [class="consequence"; color="#008000"];
    node13 -> node16 [class="alternative"; color="#ff0000"];
    node2 -> node11 [class="regular"; color="#0000ff"];
    node6 -> node11 [class="regular"; color="#0000ff"];
    node8 -> node11 [class="regular"; color="#0000ff"];
    node7 -> node11 [class="alternative"; color="#ff0000"];
    node3 -> node13 [class="consequence"; color="#008000"];
    node15 -> node17 [class="regular"; color="#0000ff"];
    node16 -> node17 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: sample.go!trivialReachability: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
}"
`;

exports[`Go: sample.go!hasFallthrough: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node7 [class="regular"; color="#0000ff"];
    node3 -> node7 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: sample.go!forever: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node1 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
}"
`;

exports[`Go: sample.go!forCond: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: sample.go!forCStyle: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node8 [class="alternative"; color="#ff0000"];
    node2 -> node3 [class="consequence"; color="#008000"];
}"
`;

exports[`Go: sample.go!forRange: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: sample.go!typeSwitch: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node2 -> node7 [class="regular"; color="#0000ff"];
    node4 -> node7 [class="regular"; color="#0000ff"];
    node3 -> node7 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Go: sample.go!Select: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=1.2; id="node2"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node9"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node6"];
    node2 -> node6 [class="alternative"; color="#ff0000"];
    node2 -> node9 [class="consequence"; color="#008000"];
}"
`;

exports[`Go: sample.go!Select2: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=1.2; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node11"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node6"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node8"];
    node2 -> node3 [class="consequence"; color="#008000"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
    node4 -> node6 [class="consequence"; color="#008000"];
    node4 -> node8 [class="alternative"; color="#ff0000"];
    node3 -> node11 [class="regular"; color="#0000ff"];
    node8 -> node11 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!trivial: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
}"
`;

exports[`Python: sample.py!If: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node6"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node6 [class="regular"; color="#0000ff"];
    node1 -> node6 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!IfElse: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node7"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node2 -> node7 [class="regular"; color="#0000ff"];
    node3 -> node7 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!IfElifElse: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node9"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node2 -> node9 [class="regular"; color="#0000ff"];
    node4 -> node9 [class="regular"; color="#0000ff"];
    node5 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!For: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!ForContinue: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node6 -> node5 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node6 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node6 [class="regular"; color="#0000ff"];
    node6 -> node1 [class="consequence"; color="#008000"];
    node6 -> node8 [class="alternative"; color="#ff0000"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!ForBreak: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node5 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node5 [class="regular"; color="#0000ff"];
    node5 -> node1 [class="consequence"; color="#008000"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node2 -> node7 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!ForElse: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node2"];
    node3 -> node1 [class="consequence"; color="#008000"];
    node3 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node3 -> node2 [class="alternative"; color="#ff0000"];
    node0 -> node3 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!ForElseBreak: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node6 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node6 -> node5 [class="alternative"; color="#ff0000"];
    node0 -> node6 [class="regular"; color="#0000ff"];
    node6 -> node1 [class="consequence"; color="#008000"];
    node5 -> node8 [class="regular"; color="#0000ff"];
    node2 -> node8 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!ForElseBreakReturn: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node5"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node8"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node6 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node6 -> node5 [class="alternative"; color="#ff0000"];
    node0 -> node6 [class="regular"; color="#0000ff"];
    node6 -> node1 [class="consequence"; color="#008000"];
    node1 -> node8 [class="consequence"; color="#008000"];
}"
`;

exports[`Python: sample.py!While: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!WhileContinue: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
    node2 -> node3 [class="consequence"; color="#008000"];
    node1 -> node6 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node8 [class="alternative"; color="#ff0000"];
    node2 -> node6 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!WhileBreak: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node2 -> node3 [class="consequence"; color="#008000"];
    node2 -> node5 [class="alternative"; color="#ff0000"];
    node1 -> node5 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
    node3 -> node7 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!WhileElse: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!WhileElseBreak: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
    node2 -> node3 [class="consequence"; color="#008000"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
    node1 -> node6 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node7 -> node9 [class="regular"; color="#0000ff"];
    node3 -> node9 [class="regular"; color="#0000ff"];
    node2 -> node6 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!Match: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node4 -> node3 [class="consequence"; color="#008000"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node6 -> node5 [class="consequence"; color="#008000"];
    node4 -> node6 [class="alternative"; color="#ff0000"];
    node3 -> node7 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="regular"; color="#0000ff"];
    node6 -> node7 [class="alternative"; color="#ff0000"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!MatchMultiPattern: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node3 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node3"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node5"];
    node4 -> node3 [class="consequence"; color="#008000"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node6 -> node5 [class="consequence"; color="#008000"];
    node4 -> node6 [class="alternative"; color="#ff0000"];
    node6 -> node7 [class="alternative"; color="#ff0000"];
    node1 -> node7 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!Return: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node2"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!WithCluster: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="with"; color="#ffffff"; bgcolor="#ffddff"
        node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node3"];
        node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
        node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node7"];
        node3 -> node4 [class="consequence"; color="#008000"];
        node4 -> node7 [class="regular"; color="#0000ff"];
        node3 -> node7 [class="alternative"; color="#ff0000"];
    }
    subgraph cluster_1 {
        penwidth=0; class="with"; color="#ffffff"; bgcolor="#ffddff"
        node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    }
    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node7"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node11"];
    node8 -> node9 [class="regular"; color="#0000ff"];
    node7 -> node8 [class="regular"; color="#0000ff"];
    node2 -> node3 [class="regular"; color="#0000ff"];
    node9 -> node11 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!WithNestedCluster: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="with"; color="#ffffff"; bgcolor="#ffddff"
        node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
        node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
        node2 -> node3 [class="consequence"; color="#008000"];
        node3 -> node6 [class="regular"; color="#0000ff"];
        node2 -> node6 [class="alternative"; color="#ff0000"];
    }
    subgraph cluster_1 {
        penwidth=0; class="with"; color="#ffffff"; bgcolor="#ffddff"
        node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node8"];
        node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
        node16 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node16"];
        node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node18"];
        subgraph cluster_2 {
            penwidth=6; class="with"; color="#ffffff"; bgcolor="#ffddff"
            node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node10"];
            node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
            node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
            node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
            node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node15"];
            node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node14"];
            node13 -> node12 [class="consequence"; color="#008000"];
            node12 -> node11 [class="regular"; color="#0000ff"];
            node10 -> node13 [class="alternative"; color="#ff0000"];
            node15 -> node14 [class="consequence"; color="#008000"];
            node14 -> node11 [class="regular"; color="#0000ff"];
            node13 -> node15 [class="alternative"; color="#ff0000"];
            node15 -> node11 [class="alternative"; color="#ff0000"];
            node10 -> node11 [class="alternative"; color="#ff0000"];
        }
        node8 -> node9 [class="consequence"; color="#008000"];
        node8 -> node16 [class="alternative"; color="#ff0000"];
    }
    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node8"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    node16 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node16"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node10"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node15"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node18"];
    node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node14"];
    node19 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node19"];
    node9 -> node10 [class="regular"; color="#0000ff"];
    node11 -> node18 [class="regular"; color="#0000ff"];
    node6 -> node7 [class="regular"; color="#0000ff"];
    node18 -> node19 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node7 -> node8 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!raise_exception: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node1"];
    node0 -> node1 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!raise_again: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node3"];
            node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
            node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
            node3 -> node4 [class="consequence"; color="#008000"];
            node4 -> node6 [class="regular"; color="#0000ff"];
            node3 -> node6 [class="alternative"; color="#ff0000"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [shape="triangle"; class="throw"; fillcolor="#ffdddd"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node11"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node6 -> node11 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!yield_value: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [shape="hexagon"; orientation=90; class="yield"; fillcolor="#00bfff"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: sample.py!try_except: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!try_except_finally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
        subgraph cluster_3 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node4 -> node5 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!try_many_except_finally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node7"];
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
        subgraph cluster_3 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
        }
        subgraph cluster_4 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
        }
        subgraph cluster_5 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
            node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node7"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node2 -> node4 [style="invis"; headport="e"; tailport="w"];
    node2 -> node5 [style="invis"; headport="e"; tailport="w"];
    node5 -> node6 [class="regular"; color="#0000ff"];
    node6 -> node7 [class="regular"; color="#0000ff"];
    node2 -> node8 [class="regular"; color="#0000ff"];
    node3 -> node8 [class="regular"; color="#0000ff"];
    node4 -> node8 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node8 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!try_except_else_finally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
        }
        subgraph cluster_2 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
        }
        subgraph cluster_3 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node6"];
    node2 -> node3 [style="invis"; headport="e"; tailport="w"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node4 -> node5 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node5 -> node6 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!massive_try_except_else_finally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node12"];
        node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
        node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node14"];
        node16 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node16"];
        node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node17"];
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
            subgraph cluster_2 {
                penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
                node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
                subgraph cluster_3 {
                    penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
                    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
                }
                subgraph cluster_4 {
                    penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
                    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
                }
                subgraph cluster_5 {
                    penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
                    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
                }
            }
        }
        subgraph cluster_6 {
            penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
            node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
            subgraph cluster_7 {
                penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
                node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node10"];
                subgraph cluster_8 {
                    penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
                    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
                }
                subgraph cluster_9 {
                    penwidth=0; class="except"; color="#ffffff"; bgcolor="#ffdddd"
                    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
                }
                subgraph cluster_10 {
                    penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
                    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
                }
            }
        }
        subgraph cluster_11 {
            penwidth=6; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
            subgraph cluster_12 {
                penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
                node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node18"];
            }
            subgraph cluster_13 {
                penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
                node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node19"];
            }
        }
        subgraph cluster_14 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node20 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node20"];
            subgraph cluster_15 {
                penwidth=0; class="with"; color="#ffffff"; bgcolor="#ffddff"
                node22 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node22"];
                node21 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node21"];
                node23 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node23"];
                node22 -> node21 [class="consequence"; color="#008000"];
                node22 -> node21 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
                node22 -> node23 [class="alternative"; color="#ff0000"];
            }
        }
        node12 -> node13 [class="consequence"; color="#008000"];
        node13 -> node16 [class="regular"; color="#0000ff"];
        node12 -> node14 [class="alternative"; color="#ff0000"];
        node14 -> node16 [class="regular"; color="#0000ff"];
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node10"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node12"];
    node20 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node20"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
    node14 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node14"];
    node22 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node22"];
    node16 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node16"];
    node21 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node21"];
    node23 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node23"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node18"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node19"];
    node24 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node24"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node17"];
    node3 -> node4 [style="invis"; headport="e"; tailport="w"];
    node3 -> node5 [class="regular"; color="#0000ff"];
    node5 -> node6 [class="regular"; color="#0000ff"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node6 -> node2 [class="regular"; color="#0000ff"];
    node8 -> node9 [style="invis"; headport="e"; tailport="w"];
    node8 -> node10 [class="regular"; color="#0000ff"];
    node10 -> node11 [class="regular"; color="#0000ff"];
    node9 -> node11 [class="regular"; color="#0000ff"];
    node11 -> node7 [class="regular"; color="#0000ff"];
    node3 -> node8 [style="invis"; headport="e"; tailport="w"];
    node18 -> node19 [class="regular"; color="#0000ff"];
    node19 -> node17 [class="regular"; color="#0000ff"];
    node16 -> node18 [class="regular"; color="#0000ff"];
    node20 -> node22 [class="regular"; color="#0000ff"];
    node17 -> node20 [class="regular"; color="#0000ff"];
    node7 -> node20 [class="regular"; color="#0000ff"];
    node0 -> node3 [class="regular"; color="#0000ff"];
    node2 -> node12 [class="regular"; color="#0000ff"];
    node23 -> node24 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!try_finally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node8"];
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
            node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
            node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
            node2 -> node3 [class="consequence"; color="#008000"];
            node2 -> node6 [class="alternative"; color="#ff0000"];
        }
        subgraph cluster_2 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
            node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node8"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    node10 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node10"];
    node3 -> node7 [class="regular"; color="#0000ff"];
    node7 -> node8 [class="regular"; color="#0000ff"];
    node6 -> node9 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node9 -> node10 [class="regular"; color="#0000ff"];
}"
`;

exports[`Python: sample.py!try_with_finally: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    subgraph cluster_0 {
        penwidth=0; class="tryComplex"; color="#ffffff"; bgcolor="#ddddff"
        node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node6"];
        subgraph cluster_1 {
            penwidth=0; class="try"; color="#ffffff"; bgcolor="#ddffdd"
            node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
            subgraph cluster_2 {
                penwidth=0; class="with"; color="#ffffff"; bgcolor="#ffddff"
                node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
            }
        }
        subgraph cluster_3 {
            penwidth=0; class="finally"; color="#ffffff"; bgcolor="#ffffdd"
            node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
        }
    }
    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node6"];
    node2 -> node3 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="regular"; color="#0000ff"];
    node5 -> node6 [class="regular"; color="#0000ff"];
    node0 -> node2 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!IfStatement: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node2 -> node8 [class="regular"; color="#0000ff"];
    node4 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node8 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!ForOfLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!ForOfLoopBreak: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
    node1 -> node4 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!ForOfLoopReturn: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node2"];
    node1 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.5; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!ForInLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node2 -> node1 [class="consequence"; color="#008000"];
    node2 -> node1 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!ForLoops: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node7 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.6; id="node7"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node3"];
    node15 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node15"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node10"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node11"];
    node23 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node23"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node17"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node19"];
    node30 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node30"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node18"];
    node26 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node26"];
    node32 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node32"];
    node33 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node33"];
    node34 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node34"];
    node36 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node36"];
    node37 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node37"];
    node43 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node43"];
    node44 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node44"];
    node35 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node35"];
    node45 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node45"];
    node46 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node46"];
    node52 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node52"];
    node51 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node51"];
    node54 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node54"];
    node53 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node53"];
    node61 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node61"];
    node62 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node62"];
    node68 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node68"];
    node69 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node69"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node7 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node11 -> node12 [class="consequence"; color="#008000"];
    node15 -> node10 [class="regular"; color="#0000ff"];
    node10 -> node17 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node36 -> node37 [class="consequence"; color="#008000"];
    node33 -> node34 [class="regular"; color="#0000ff"];
    node34 -> node35 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node45 -> node46 [class="consequence"; color="#008000"];
    node43 -> node44 [class="regular"; color="#0000ff"];
    node44 -> node51 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node1 -> node3 [class="consequence"; color="#008000"];
    node1 -> node15 [class="alternative"; color="#ff0000"];
    node4 -> node15 [class="regular"; color="#0000ff"];
    node3 -> node2 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="consequence"; color="#008000"];
    node10 -> node23 [class="alternative"; color="#ff0000"];
    node12 -> node23 [class="regular"; color="#0000ff"];
    node11 -> node17 [class="alternative"; color="#ff0000"];
    node23 -> node19 [class="regular"; color="#0000ff"];
    node19 -> node18 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node19 -> node18 [class="alternative"; color="#ff0000"];
    node19 -> node30 [class="consequence"; color="#008000"];
    node30 -> node26 [class="regular"; color="#0000ff"];
    node26 -> node32 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node26 -> node32 [class="alternative"; color="#ff0000"];
    node26 -> node33 [class="consequence"; color="#008000"];
    node34 -> node36 [class="consequence"; color="#008000"];
    node34 -> node43 [class="alternative"; color="#ff0000"];
    node37 -> node43 [class="regular"; color="#0000ff"];
    node36 -> node35 [class="alternative"; color="#ff0000"];
    node44 -> node45 [class="consequence"; color="#008000"];
    node44 -> node52 [class="alternative"; color="#ff0000"];
    node46 -> node52 [class="regular"; color="#0000ff"];
    node45 -> node51 [class="alternative"; color="#ff0000"];
    node52 -> node54 [class="regular"; color="#0000ff"];
    node54 -> node53 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node54 -> node53 [class="alternative"; color="#ff0000"];
    node54 -> node61 [class="consequence"; color="#008000"];
    node61 -> node62 [class="regular"; color="#0000ff"];
    node62 -> node68 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node62 -> node68 [class="alternative"; color="#ff0000"];
    node62 -> node69 [class="consequence"; color="#008000"];
}"
`;

exports[`TypeScript: sample.ts!ForLoopConditionalBreak: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node7 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node7"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
    node5 -> node4 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node5 [class="regular"; color="#0000ff"];
    node5 -> node1 [class="consequence"; color="#008000"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node2 -> node7 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!ForLoopConditionalContinue: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node9"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node11 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node11"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node6 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node8 [class="alternative"; color="#ff0000"];
    node9 -> node8 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node9 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node9 [class="regular"; color="#0000ff"];
    node9 -> node1 [class="consequence"; color="#008000"];
    node9 -> node11 [class="alternative"; color="#ff0000"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!MoreSwitch: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node13 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node13"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node8"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node6 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node7 -> node8 [class="consequence"; color="#008000"];
    node10 -> node13 [class="regular"; color="#0000ff"];
    node2 -> node13 [class="regular"; color="#0000ff"];
    node4 -> node13 [class="regular"; color="#0000ff"];
    node8 -> node13 [class="regular"; color="#0000ff"];
    node7 -> node10 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!trivial: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
}"
`;

exports[`TypeScript: sample.ts!simpleIf: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node5 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!ifElse: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node2 -> node8 [class="regular"; color="#0000ff"];
    node4 -> node8 [class="regular"; color="#0000ff"];
    node5 -> node8 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!forever: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node5"];
    node1 -> node5 [class="regular"; color="#0000ff"];
    node5 -> node5 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`TypeScript: sample.ts!forever2: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node2"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
}"
`;

exports[`TypeScript: sample.ts!forLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node8 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node8"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node3 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node8 [class="alternative"; color="#ff0000"];
    node2 -> node3 [class="consequence"; color="#008000"];
}"
`;

exports[`TypeScript: sample.ts!whileLoop: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node2 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!doWhile: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node0 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.5; id="node0"];
    node1 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node1"];
    node4 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node4"];
    node1 -> node1 [class="consequence"; color="#008000"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node0 -> node1 [class="regular"; color="#0000ff"];
    node1 -> node4 [class="alternative"; color="#ff0000"];
}"
`;

exports[`TypeScript: sample.ts!switch_1: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node4 [class="regular"; color="#0000ff"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!switch_2: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node5"];
    node9 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node9"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node1 -> node3 [class="alternative"; color="#ff0000"];
    node3 -> node4 [class="consequence"; color="#008000"];
    node4 -> node6 [class="regular"; color="#0000ff"];
    node3 -> node5 [class="alternative"; color="#ff0000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node9 [class="alternative"; color="#ff0000"];
    node6 -> node9 [class="regular"; color="#0000ff"];
    node2 -> node9 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!ManyIfs: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node5"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node6"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node10"];
    node11 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node11"];
    node12 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node12"];
    node13 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node13"];
    node16 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node16"];
    node17 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node17"];
    node18 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node18"];
    node19 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node19"];
    node20 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node20"];
    node23 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node23"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node5 -> node6 [class="consequence"; color="#008000"];
    node5 -> node7 [class="alternative"; color="#ff0000"];
    node10 -> node11 [class="consequence"; color="#008000"];
    node10 -> node12 [class="alternative"; color="#ff0000"];
    node12 -> node13 [class="consequence"; color="#008000"];
    node16 -> node17 [class="consequence"; color="#008000"];
    node16 -> node18 [class="alternative"; color="#ff0000"];
    node18 -> node19 [class="consequence"; color="#008000"];
    node18 -> node20 [class="alternative"; color="#ff0000"];
    node2 -> node5 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
    node6 -> node10 [class="regular"; color="#0000ff"];
    node7 -> node10 [class="regular"; color="#0000ff"];
    node11 -> node16 [class="regular"; color="#0000ff"];
    node13 -> node16 [class="regular"; color="#0000ff"];
    node12 -> node16 [class="alternative"; color="#ff0000"];
    node17 -> node23 [class="regular"; color="#0000ff"];
    node19 -> node23 [class="regular"; color="#0000ff"];
    node20 -> node23 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!IfWithoutBraces: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node2"];
    node8 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node8"];
    node9 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=1.2; id="node9"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node16 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node16"];
    node17 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.8999999999999999; id="node17"];
    node1 -> node2 [class="regular"; color="#0000ff"];
    node2 -> node8 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node2 -> node8 [class="alternative"; color="#ff0000"];
    node2 -> node9 [class="consequence"; color="#008000"];
    node9 -> node10 [class="regular"; color="#0000ff"];
    node10 -> node16 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node10 -> node16 [class="alternative"; color="#ff0000"];
    node10 -> node17 [class="consequence"; color="#008000"];
}"
`;

exports[`TypeScript: sample.ts!LabeledStatement: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node3 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=1.5; id="node3"];
    node4 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node4"];
    node6 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node6"];
    node14 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node14"];
    node7 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node7"];
    node10 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node10"];
    node5 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.6; id="node5"];
    node6 -> node7 [class="consequence"; color="#008000"];
    node3 -> node4 [class="regular"; color="#0000ff"];
    node4 -> node5 [class="regular"; color="#0000ff"; penwidth=2; dir="back"; headport="s"; tailport="n"];
    node4 -> node6 [class="consequence"; color="#008000"];
    node4 -> node14 [class="alternative"; color="#ff0000"];
    node6 -> node10 [class="alternative"; color="#ff0000"];
    node10 -> node5 [class="regular"; color="#0000ff"];
    node7 -> node5 [class="regular"; color="#0000ff"];
}"
`;

exports[`TypeScript: sample.ts!LabelledStatementFlow: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node8 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node8"];
    node10 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node10"];
    node3 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.8999999999999999; id="node3"];
    node8 -> node10 [class="alternative"; color="#ff0000"];
    node3 -> node10 [class="regular"; color="#0000ff"];
    node8 -> node3 [class="consequence"; color="#008000"];
}"
`;

exports[`TypeScript: sample.ts!TrivialUnreach: DOT Snapshot 1`] = `
"digraph "" {
    node [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"];
    edge [penwidth=1; color="#0000ff"; headport="n"; tailport="s"];
    bgcolor="#ffffff";

    node1 [shape="invhouse"; class="entry"; fillcolor="#48AB30"; color="#000000"; height=0.8999999999999999; id="node1"];
    node2 [label=""; style="filled"; shape="box"; class="default"; fillcolor="#d3d3d3"; color="#000000"; height=0.3; id="node2"];
    node5 [shape="house"; class="exit"; fillcolor="#AB3030"; color="#000000"; height=0.6; id="node5"];
    node1 -> node2 [class="consequence"; color="#008000"];
    node2 -> node5 [class="regular"; color="#0000ff"];
    node1 -> node5 [class="alternative"; color="#ff0000"];
}"
`;

exports[`Python: issue-101-match-catchall.py!single_match_all_underscore: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node5",
    },
    {
      "start": 27,
      "value": "node5",
    },
    {
      "start": 66,
      "value": "node5",
    },
    {
      "start": 72,
      "value": "node5",
    },
    {
      "start": 73,
      "value": "node5",
    },
    {
      "start": 83,
      "value": "node5",
    },
    {
      "start": 88,
      "value": "node5",
    },
    {
      "start": 89,
      "value": "node5",
    },
    {
      "start": 90,
      "value": "node5",
    },
    {
      "start": 91,
      "value": "node5",
    },
    {
      "start": 91,
      "value": "node5",
    },
    {
      "start": 95,
      "value": "node5",
    },
    {
      "start": 95,
      "value": "node5",
    },
    {
      "start": 95,
      "value": "node5",
    },
    {
      "start": 95,
      "value": "node5",
    },
    {
      "start": 95,
      "value": "node5",
    },
    {
      "start": 95,
      "value": "node5",
    },
  ],
}
`;

exports[`Python: issue-101-match-catchall.py!single_match_all_named: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node5",
    },
    {
      "start": 124,
      "value": "node5",
    },
    {
      "start": 158,
      "value": "node5",
    },
    {
      "start": 164,
      "value": "node5",
    },
    {
      "start": 165,
      "value": "node5",
    },
    {
      "start": 175,
      "value": "node5",
    },
    {
      "start": 180,
      "value": "node5",
    },
    {
      "start": 189,
      "value": "node5",
    },
    {
      "start": 190,
      "value": "node5",
    },
    {
      "start": 191,
      "value": "node5",
    },
    {
      "start": 191,
      "value": "node5",
    },
    {
      "start": 195,
      "value": "node5",
    },
    {
      "start": 195,
      "value": "node5",
    },
    {
      "start": 195,
      "value": "node5",
    },
    {
      "start": 195,
      "value": "node5",
    },
    {
      "start": 195,
      "value": "node5",
    },
    {
      "start": 195,
      "value": "node5",
    },
  ],
}
`;

exports[`Python: issue-101-match-catchall.py!with_comment: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 224,
      "value": "node1",
    },
    {
      "start": 248,
      "value": "node1",
    },
    {
      "start": 254,
      "value": "node1",
    },
    {
      "start": 255,
      "value": "node1",
    },
    {
      "start": 265,
      "value": "node4",
    },
    {
      "start": 270,
      "value": "node4",
    },
    {
      "start": 271,
      "value": "node4",
    },
    {
      "start": 272,
      "value": "node3",
    },
    {
      "start": 273,
      "value": "node4",
    },
    {
      "start": 273,
      "value": "node3",
    },
    {
      "start": 277,
      "value": "node3",
    },
    {
      "start": 277,
      "value": "node4",
    },
    {
      "start": 277,
      "value": "node1",
    },
    {
      "start": 305,
      "value": "node6",
    },
    {
      "start": 310,
      "value": "node6",
    },
    {
      "start": 311,
      "value": "node6",
    },
    {
      "start": 312,
      "value": "node5",
    },
    {
      "start": 313,
      "value": "node6",
    },
    {
      "start": 313,
      "value": "node5",
    },
    {
      "start": 317,
      "value": "node5",
    },
    {
      "start": 317,
      "value": "node6",
    },
    {
      "start": 317,
      "value": "node1",
    },
    {
      "start": 317,
      "value": "node1",
    },
    {
      "start": 317,
      "value": "node1",
    },
    {
      "start": 317,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: issue-101-match-catchall.py!stop_after_catchall: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node4",
    },
    {
      "start": 346,
      "value": "node4",
    },
    {
      "start": 377,
      "value": "node4",
    },
    {
      "start": 383,
      "value": "node4",
    },
    {
      "start": 384,
      "value": "node4",
    },
    {
      "start": 394,
      "value": "node4",
    },
    {
      "start": 399,
      "value": "node4",
    },
    {
      "start": 400,
      "value": "node4",
    },
    {
      "start": 401,
      "value": "node3",
    },
    {
      "start": 402,
      "value": "node4",
    },
    {
      "start": 402,
      "value": "node3",
    },
    {
      "start": 406,
      "value": "node3",
    },
    {
      "start": 406,
      "value": "node4",
    },
    {
      "start": 406,
      "value": "node4",
    },
    {
      "start": 415,
      "value": "node5",
    },
    {
      "start": 420,
      "value": "node5",
    },
    {
      "start": 421,
      "value": "node5",
    },
    {
      "start": 422,
      "value": "node5",
    },
    {
      "start": 423,
      "value": "node5",
    },
    {
      "start": 423,
      "value": "node5",
    },
    {
      "start": 427,
      "value": "node5",
    },
    {
      "start": 427,
      "value": "node5",
    },
    {
      "start": 427,
      "value": "node4",
    },
    {
      "start": 448,
      "value": "node4",
    },
    {
      "start": 448,
      "value": "node4",
    },
    {
      "start": 448,
      "value": "node4",
    },
  ],
}
`;

exports[`Python: issue-101-match-catchall.py!cases_and_catchall: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node4",
    },
    {
      "start": 477,
      "value": "node4",
    },
    {
      "start": 507,
      "value": "node4",
    },
    {
      "start": 513,
      "value": "node4",
    },
    {
      "start": 514,
      "value": "node4",
    },
    {
      "start": 524,
      "value": "node4",
    },
    {
      "start": 529,
      "value": "node4",
    },
    {
      "start": 530,
      "value": "node4",
    },
    {
      "start": 531,
      "value": "node3",
    },
    {
      "start": 532,
      "value": "node4",
    },
    {
      "start": 532,
      "value": "node3",
    },
    {
      "start": 536,
      "value": "node3",
    },
    {
      "start": 536,
      "value": "node4",
    },
    {
      "start": 536,
      "value": "node4",
    },
    {
      "start": 545,
      "value": "node6",
    },
    {
      "start": 550,
      "value": "node6",
    },
    {
      "start": 551,
      "value": "node6",
    },
    {
      "start": 552,
      "value": "node5",
    },
    {
      "start": 553,
      "value": "node6",
    },
    {
      "start": 553,
      "value": "node5",
    },
    {
      "start": 557,
      "value": "node5",
    },
    {
      "start": 557,
      "value": "node6",
    },
    {
      "start": 557,
      "value": "node4",
    },
    {
      "start": 566,
      "value": "node7",
    },
    {
      "start": 571,
      "value": "node7",
    },
    {
      "start": 572,
      "value": "node7",
    },
    {
      "start": 573,
      "value": "node7",
    },
    {
      "start": 574,
      "value": "node7",
    },
    {
      "start": 574,
      "value": "node7",
    },
    {
      "start": 578,
      "value": "node7",
    },
    {
      "start": 578,
      "value": "node7",
    },
    {
      "start": 578,
      "value": "node4",
    },
    {
      "start": 578,
      "value": "node4",
    },
    {
      "start": 578,
      "value": "node4",
    },
    {
      "start": 578,
      "value": "node4",
    },
  ],
}
`;

exports[`Python: issue-104-assert.py!assert_without_message: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 23,
      "value": "node1",
    },
    {
      "start": 65,
      "value": "Not found",
    },
    {
      "start": 65,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: issue-104-assert.py!assert_with_message: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 91,
      "value": "node1",
    },
    {
      "start": 130,
      "value": "Not found",
    },
    {
      "start": 130,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: issue-104-assert.py!multiple_asserts: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 156,
      "value": "node1",
    },
    {
      "start": 192,
      "value": "Not found",
    },
    {
      "start": 197,
      "value": "node1",
    },
    {
      "start": 205,
      "value": "Not found",
    },
    {
      "start": 210,
      "value": "node1",
    },
    {
      "start": 218,
      "value": "Not found",
    },
    {
      "start": 223,
      "value": "node1",
    },
    {
      "start": 231,
      "value": "Not found",
    },
    {
      "start": 231,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: issue-106-co_yield.cpp!fibonacci_sequence: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 26,
      "value": "node1",
    },
    {
      "start": 159,
      "value": "node1",
    },
    {
      "start": 162,
      "value": "node1",
    },
    {
      "start": 170,
      "value": "node1",
    },
    {
      "start": 170,
      "value": "node2",
    },
    {
      "start": 179,
      "value": "node1",
    },
    {
      "start": 179,
      "value": "node2",
    },
    {
      "start": 189,
      "value": "node1",
    },
    {
      "start": 189,
      "value": "node5",
    },
    {
      "start": 195,
      "value": "node1",
    },
    {
      "start": 195,
      "value": "node5",
    },
    {
      "start": 198,
      "value": "node5",
    },
    {
      "start": 206,
      "value": "node5",
    },
    {
      "start": 206,
      "value": "node6",
    },
    {
      "start": 215,
      "value": "node5",
    },
    {
      "start": 215,
      "value": "node6",
    },
    {
      "start": 296,
      "value": "node5",
    },
    {
      "start": 296,
      "value": "node9",
    },
    {
      "start": 302,
      "value": "node1",
    },
    {
      "start": 302,
      "value": "node9",
    },
    {
      "start": 313,
      "value": "node10",
    },
    {
      "start": 319,
      "value": "node1",
    },
    {
      "start": 319,
      "value": "node10",
    },
    {
      "start": 322,
      "value": "node10",
    },
    {
      "start": 330,
      "value": "node10",
    },
    {
      "start": 330,
      "value": "node11",
    },
    {
      "start": 339,
      "value": "node10",
    },
    {
      "start": 339,
      "value": "node11",
    },
    {
      "start": 349,
      "value": "node10",
    },
    {
      "start": 349,
      "value": "node14",
    },
    {
      "start": 355,
      "value": "node1",
    },
    {
      "start": 355,
      "value": "node14",
    },
    {
      "start": 366,
      "value": "node15",
    },
    {
      "start": 372,
      "value": "node1",
    },
    {
      "start": 372,
      "value": "node15",
    },
    {
      "start": 375,
      "value": "node15",
    },
    {
      "start": 383,
      "value": "node15",
    },
    {
      "start": 383,
      "value": "node16",
    },
    {
      "start": 392,
      "value": "node15",
    },
    {
      "start": 392,
      "value": "node16",
    },
    {
      "start": 402,
      "value": "node15",
    },
    {
      "start": 402,
      "value": "node21",
    },
    {
      "start": 408,
      "value": "node1",
    },
    {
      "start": 408,
      "value": "node21",
    },
    {
      "start": 428,
      "value": "node21",
    },
    {
      "start": 433,
      "value": "node1",
    },
    {
      "start": 433,
      "value": "node21",
    },
    {
      "start": 453,
      "value": "node21",
    },
    {
      "start": 459,
      "value": "node1",
    },
    {
      "start": 459,
      "value": "node21",
    },
    {
      "start": 464,
      "value": "node21",
    },
    {
      "start": 479,
      "value": "node21",
    },
    {
      "start": 479,
      "value": "node21",
    },
    {
      "start": 480,
      "value": "node22",
    },
    {
      "start": 485,
      "value": "node22",
    },
    {
      "start": 486,
      "value": "node22",
    },
    {
      "start": 486,
      "value": "node21",
    },
    {
      "start": 487,
      "value": "node23",
    },
    {
      "start": 490,
      "value": "node23",
    },
    {
      "start": 491,
      "value": "node21",
    },
    {
      "start": 491,
      "value": "node24",
    },
    {
      "start": 496,
      "value": "node21",
    },
    {
      "start": 496,
      "value": "node24",
    },
    {
      "start": 506,
      "value": "node24",
    },
    {
      "start": 530,
      "value": "node25",
    },
    {
      "start": 539,
      "value": "node24",
    },
    {
      "start": 539,
      "value": "node25",
    },
    {
      "start": 550,
      "value": "node23",
    },
    {
      "start": 559,
      "value": "node23",
    },
    {
      "start": 565,
      "value": "node24",
    },
    {
      "start": 565,
      "value": "node23",
    },
    {
      "start": 574,
      "value": "node23",
    },
    {
      "start": 580,
      "value": "node24",
    },
    {
      "start": 586,
      "value": "node21",
    },
    {
      "start": 586,
      "value": "node21",
    },
    {
      "start": 588,
      "value": "node1",
    },
    {
      "start": 588,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: issue-111-throw-finally.py!raise_and_finally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 23,
      "value": "node0",
    },
    {
      "start": 52,
      "value": "node4",
    },
    {
      "start": 65,
      "value": "node4",
    },
    {
      "start": 85,
      "value": "node4",
    },
    {
      "start": 85,
      "value": "node4",
    },
    {
      "start": 90,
      "value": "node5",
    },
    {
      "start": 107,
      "value": "node5",
    },
    {
      "start": 122,
      "value": "node5",
    },
    {
      "start": 122,
      "value": "node5",
    },
    {
      "start": 122,
      "value": "node5",
    },
    {
      "start": 122,
      "value": "node5",
    },
    {
      "start": 122,
      "value": "node4",
    },
    {
      "start": 122,
      "value": "node0",
    },
    {
      "start": 122,
      "value": "node4",
    },
    {
      "start": 122,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: issue-111-throw-finally.ts!throwAndFinally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 26,
      "value": "node0",
    },
    {
      "start": 57,
      "value": "node4",
    },
    {
      "start": 61,
      "value": "node4",
    },
    {
      "start": 67,
      "value": "node4",
    },
    {
      "start": 84,
      "value": "node4",
    },
    {
      "start": 88,
      "value": "node4",
    },
    {
      "start": 89,
      "value": "node5",
    },
    {
      "start": 97,
      "value": "node5",
    },
    {
      "start": 103,
      "value": "node5",
    },
    {
      "start": 124,
      "value": "node5",
    },
    {
      "start": 124,
      "value": "node5",
    },
    {
      "start": 128,
      "value": "node5",
    },
    {
      "start": 128,
      "value": "node5",
    },
    {
      "start": 128,
      "value": "node4",
    },
    {
      "start": 128,
      "value": "node4",
    },
    {
      "start": 130,
      "value": "node0",
    },
    {
      "start": 130,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: issue-85-continue-with-label.go!ContinueToLabel: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 36,
      "value": "node2",
    },
    {
      "start": 61,
      "value": "node2",
    },
    {
      "start": 69,
      "value": "node2",
    },
    {
      "start": 73,
      "value": "node2",
    },
    {
      "start": 79,
      "value": "node2",
    },
    {
      "start": 80,
      "value": "node2",
    },
    {
      "start": 81,
      "value": "node3",
    },
    {
      "start": 86,
      "value": "node3",
    },
    {
      "start": 87,
      "value": "node3",
    },
    {
      "start": 87,
      "value": "node2",
    },
    {
      "start": 88,
      "value": "node4",
    },
    {
      "start": 91,
      "value": "node2",
    },
    {
      "start": 92,
      "value": "node4",
    },
    {
      "start": 115,
      "value": "node4",
    },
    {
      "start": 129,
      "value": "Not found",
    },
    {
      "start": 132,
      "value": "node4",
    },
    {
      "start": 136,
      "value": "node4",
    },
    {
      "start": 161,
      "value": "node4",
    },
    {
      "start": 175,
      "value": "node4",
    },
    {
      "start": 179,
      "value": "node8",
    },
    {
      "start": 182,
      "value": "node4",
    },
    {
      "start": 182,
      "value": "node8",
    },
    {
      "start": 203,
      "value": "node4",
    },
    {
      "start": 206,
      "value": "node2",
    },
    {
      "start": 206,
      "value": "node2",
    },
    {
      "start": 206,
      "value": "node2",
    },
    {
      "start": 208,
      "value": "node2",
    },
    {
      "start": 208,
      "value": "node2",
    },
  ],
}
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!MultipleCatchClauses: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 25,
      "value": "node0",
    },
    {
      "start": 59,
      "value": "node2",
    },
    {
      "start": 67,
      "value": "node2",
    },
    {
      "start": 77,
      "value": "node2",
    },
    {
      "start": 81,
      "value": "node2",
    },
    {
      "start": 87,
      "value": "node2",
    },
    {
      "start": 92,
      "value": "node3",
    },
    {
      "start": 133,
      "value": "node3",
    },
    {
      "start": 135,
      "value": "node3",
    },
    {
      "start": 135,
      "value": "node3",
    },
    {
      "start": 140,
      "value": "node2",
    },
    {
      "start": 140,
      "value": "node4",
    },
    {
      "start": 180,
      "value": "node4",
    },
    {
      "start": 182,
      "value": "node4",
    },
    {
      "start": 182,
      "value": "node4",
    },
    {
      "start": 187,
      "value": "node2",
    },
    {
      "start": 187,
      "value": "node5",
    },
    {
      "start": 223,
      "value": "node5",
    },
    {
      "start": 225,
      "value": "node5",
    },
    {
      "start": 225,
      "value": "node5",
    },
    {
      "start": 230,
      "value": "node2",
    },
    {
      "start": 230,
      "value": "node6",
    },
    {
      "start": 246,
      "value": "node6",
    },
    {
      "start": 248,
      "value": "node6",
    },
    {
      "start": 248,
      "value": "node2",
    },
    {
      "start": 248,
      "value": "node2",
    },
    {
      "start": 250,
      "value": "node0",
    },
    {
      "start": 250,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!MultipleCatchClausesWithComments: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 277,
      "value": "node0",
    },
    {
      "start": 323,
      "value": "node2",
    },
    {
      "start": 331,
      "value": "node2",
    },
    {
      "start": 341,
      "value": "node2",
    },
    {
      "start": 345,
      "value": "node2",
    },
    {
      "start": 351,
      "value": "node2",
    },
    {
      "start": 356,
      "value": "node3",
    },
    {
      "start": 397,
      "value": "node3",
    },
    {
      "start": 399,
      "value": "node3",
    },
    {
      "start": 399,
      "value": "node2",
    },
    {
      "start": 399,
      "value": "node3",
    },
    {
      "start": 472,
      "value": "node4",
    },
    {
      "start": 512,
      "value": "node4",
    },
    {
      "start": 514,
      "value": "node4",
    },
    {
      "start": 514,
      "value": "node2",
    },
    {
      "start": 514,
      "value": "node4",
    },
    {
      "start": 589,
      "value": "node5",
    },
    {
      "start": 625,
      "value": "node5",
    },
    {
      "start": 627,
      "value": "node5",
    },
    {
      "start": 627,
      "value": "node2",
    },
    {
      "start": 627,
      "value": "node5",
    },
    {
      "start": 698,
      "value": "node6",
    },
    {
      "start": 714,
      "value": "node6",
    },
    {
      "start": 716,
      "value": "node6",
    },
    {
      "start": 716,
      "value": "node2",
    },
    {
      "start": 716,
      "value": "node0",
    },
    {
      "start": 794,
      "value": "Not found",
    },
    {
      "start": 796,
      "value": "node0",
    },
    {
      "start": 796,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!EarlyCatchAll: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 824,
      "value": "node0",
    },
    {
      "start": 851,
      "value": "node2",
    },
    {
      "start": 859,
      "value": "node2",
    },
    {
      "start": 869,
      "value": "node2",
    },
    {
      "start": 873,
      "value": "node2",
    },
    {
      "start": 879,
      "value": "node2",
    },
    {
      "start": 884,
      "value": "node3",
    },
    {
      "start": 900,
      "value": "node3",
    },
    {
      "start": 902,
      "value": "node3",
    },
    {
      "start": 902,
      "value": "node3",
    },
    {
      "start": 907,
      "value": "node2",
    },
    {
      "start": 907,
      "value": "node4",
    },
    {
      "start": 943,
      "value": "node4",
    },
    {
      "start": 945,
      "value": "node4",
    },
    {
      "start": 945,
      "value": "node2",
    },
    {
      "start": 945,
      "value": "node2",
    },
    {
      "start": 947,
      "value": "node0",
    },
    {
      "start": 947,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: issue145-multiple-catch-clause-cpp.cpp!EarlyCatchAllWithComment: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 974,
      "value": "node0",
    },
    {
      "start": 1012,
      "value": "node2",
    },
    {
      "start": 1020,
      "value": "node2",
    },
    {
      "start": 1030,
      "value": "node2",
    },
    {
      "start": 1034,
      "value": "node2",
    },
    {
      "start": 1040,
      "value": "node2",
    },
    {
      "start": 1045,
      "value": "node3",
    },
    {
      "start": 1082,
      "value": "node3",
    },
    {
      "start": 1084,
      "value": "node3",
    },
    {
      "start": 1084,
      "value": "node3",
    },
    {
      "start": 1089,
      "value": "node2",
    },
    {
      "start": 1089,
      "value": "node4",
    },
    {
      "start": 1125,
      "value": "node4",
    },
    {
      "start": 1127,
      "value": "node4",
    },
    {
      "start": 1127,
      "value": "node2",
    },
    {
      "start": 1127,
      "value": "node2",
    },
    {
      "start": 1129,
      "value": "node0",
    },
    {
      "start": 1129,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: issue32-unbraced-if-else-if.cpp!f: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 19,
      "value": "node1",
    },
    {
      "start": 34,
      "value": "node1",
    },
    {
      "start": 37,
      "value": "node1",
    },
    {
      "start": 40,
      "value": "node1",
    },
    {
      "start": 40,
      "value": "node2",
    },
    {
      "start": 49,
      "value": "node2",
    },
    {
      "start": 56,
      "value": "node6",
    },
    {
      "start": 61,
      "value": "node1",
    },
    {
      "start": 61,
      "value": "node6",
    },
    {
      "start": 66,
      "value": "node6",
    },
    {
      "start": 68,
      "value": "node6",
    },
    {
      "start": 68,
      "value": "node1",
    },
    {
      "start": 68,
      "value": "node1",
    },
    {
      "start": 70,
      "value": "node1",
    },
    {
      "start": 70,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: issue65-try-finally.ts!tryCatch: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 16,
      "value": "node0",
    },
    {
      "start": 40,
      "value": "node2",
    },
    {
      "start": 44,
      "value": "node2",
    },
    {
      "start": 50,
      "value": "node2",
    },
    {
      "start": 54,
      "value": "node2",
    },
    {
      "start": 58,
      "value": "node2",
    },
    {
      "start": 59,
      "value": "node3",
    },
    {
      "start": 65,
      "value": "node3",
    },
    {
      "start": 71,
      "value": "node3",
    },
    {
      "start": 75,
      "value": "node3",
    },
    {
      "start": 79,
      "value": "node3",
    },
    {
      "start": 79,
      "value": "node2",
    },
    {
      "start": 79,
      "value": "node2",
    },
    {
      "start": 81,
      "value": "node0",
    },
    {
      "start": 81,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: issue65-try-finally.ts!tryFinaly: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 99,
      "value": "node0",
    },
    {
      "start": 124,
      "value": "node2",
    },
    {
      "start": 128,
      "value": "node2",
    },
    {
      "start": 134,
      "value": "node2",
    },
    {
      "start": 138,
      "value": "node2",
    },
    {
      "start": 142,
      "value": "node2",
    },
    {
      "start": 143,
      "value": "node3",
    },
    {
      "start": 151,
      "value": "node3",
    },
    {
      "start": 157,
      "value": "node3",
    },
    {
      "start": 161,
      "value": "node3",
    },
    {
      "start": 165,
      "value": "node3",
    },
    {
      "start": 165,
      "value": "node2",
    },
    {
      "start": 165,
      "value": "node2",
    },
    {
      "start": 167,
      "value": "node0",
    },
    {
      "start": 167,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: issue65-try-finally.ts!tryCatchFinally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 185,
      "value": "node0",
    },
    {
      "start": 216,
      "value": "node2",
    },
    {
      "start": 220,
      "value": "node2",
    },
    {
      "start": 226,
      "value": "node2",
    },
    {
      "start": 230,
      "value": "node2",
    },
    {
      "start": 234,
      "value": "node2",
    },
    {
      "start": 235,
      "value": "node3",
    },
    {
      "start": 241,
      "value": "node3",
    },
    {
      "start": 247,
      "value": "node3",
    },
    {
      "start": 251,
      "value": "node3",
    },
    {
      "start": 255,
      "value": "node3",
    },
    {
      "start": 255,
      "value": "node2",
    },
    {
      "start": 256,
      "value": "node4",
    },
    {
      "start": 264,
      "value": "node4",
    },
    {
      "start": 270,
      "value": "node4",
    },
    {
      "start": 274,
      "value": "node4",
    },
    {
      "start": 278,
      "value": "node4",
    },
    {
      "start": 278,
      "value": "node2",
    },
    {
      "start": 278,
      "value": "node2",
    },
    {
      "start": 280,
      "value": "node0",
    },
    {
      "start": 280,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: issue77-switch-empty-fallthrough-case.go!EmptyFallthroughCases: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 39,
      "value": "node1",
    },
    {
      "start": 72,
      "value": "node1",
    },
    {
      "start": 82,
      "value": "node1",
    },
    {
      "start": 87,
      "value": "node1",
    },
    {
      "start": 87,
      "value": "node1",
    },
    {
      "start": 94,
      "value": "node2",
    },
    {
      "start": 103,
      "value": "node1",
    },
    {
      "start": 103,
      "value": "node2",
    },
    {
      "start": 114,
      "value": "node1",
    },
    {
      "start": 115,
      "value": "node3",
    },
    {
      "start": 119,
      "value": "node1",
    },
    {
      "start": 119,
      "value": "node3",
    },
    {
      "start": 126,
      "value": "node4",
    },
    {
      "start": 135,
      "value": "node3",
    },
    {
      "start": 135,
      "value": "node4",
    },
    {
      "start": 146,
      "value": "node3",
    },
    {
      "start": 147,
      "value": "node5",
    },
    {
      "start": 151,
      "value": "node1",
    },
    {
      "start": 151,
      "value": "node5",
    },
    {
      "start": 158,
      "value": "node5",
    },
    {
      "start": 162,
      "value": "node1",
    },
    {
      "start": 162,
      "value": "node1",
    },
    {
      "start": 164,
      "value": "node1",
    },
    {
      "start": 164,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: issue77-switch-empty-fallthrough-case.ts!EmptyFallthroughCases: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 39,
      "value": "node1",
    },
    {
      "start": 76,
      "value": "node1",
    },
    {
      "start": 88,
      "value": "node1",
    },
    {
      "start": 93,
      "value": "node1",
    },
    {
      "start": 93,
      "value": "node1",
    },
    {
      "start": 100,
      "value": "node3",
    },
    {
      "start": 105,
      "value": "node1",
    },
    {
      "start": 105,
      "value": "node3",
    },
    {
      "start": 112,
      "value": "node5",
    },
    {
      "start": 117,
      "value": "node1",
    },
    {
      "start": 117,
      "value": "node5",
    },
    {
      "start": 124,
      "value": "node5",
    },
    {
      "start": 128,
      "value": "node1",
    },
    {
      "start": 128,
      "value": "node1",
    },
    {
      "start": 130,
      "value": "node1",
    },
    {
      "start": 130,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: issue77-switch-empty-fallthrough-case.ts!EmptyFallthroughToNonEmpty: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 171,
      "value": "node1",
    },
    {
      "start": 213,
      "value": "node1",
    },
    {
      "start": 225,
      "value": "node1",
    },
    {
      "start": 230,
      "value": "node1",
    },
    {
      "start": 230,
      "value": "node1",
    },
    {
      "start": 237,
      "value": "node3",
    },
    {
      "start": 242,
      "value": "node1",
    },
    {
      "start": 242,
      "value": "node3",
    },
    {
      "start": 249,
      "value": "node5",
    },
    {
      "start": 254,
      "value": "node1",
    },
    {
      "start": 254,
      "value": "node5",
    },
    {
      "start": 261,
      "value": "node6",
    },
    {
      "start": 268,
      "value": "node5",
    },
    {
      "start": 268,
      "value": "node6",
    },
    {
      "start": 283,
      "value": "node5",
    },
    {
      "start": 283,
      "value": "node5",
    },
    {
      "start": 287,
      "value": "node1",
    },
    {
      "start": 287,
      "value": "node1",
    },
    {
      "start": 289,
      "value": "node1",
    },
    {
      "start": 289,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: labledStatements.go!LabelledStatementFlow: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node7",
    },
    {
      "start": 72,
      "value": "node7",
    },
    {
      "start": 105,
      "value": "node7",
    },
    {
      "start": 112,
      "value": "node7",
    },
    {
      "start": 130,
      "value": "node2",
    },
    {
      "start": 131,
      "value": "node2",
    },
    {
      "start": 130,
      "value": "node2",
    },
    {
      "start": 166,
      "value": "node2",
    },
    {
      "start": 173,
      "value": "node2",
    },
    {
      "start": 202,
      "value": "node2",
    },
    {
      "start": 213,
      "value": "node2",
    },
    {
      "start": 219,
      "value": "node2",
    },
    {
      "start": 219,
      "value": "node6",
    },
    {
      "start": 244,
      "value": "node2",
    },
    {
      "start": 244,
      "value": "node6",
    },
    {
      "start": 273,
      "value": "node2",
    },
    {
      "start": 277,
      "value": "node7",
    },
    {
      "start": 277,
      "value": "node7",
    },
    {
      "start": 277,
      "value": "node7",
    },
    {
      "start": 279,
      "value": "node7",
    },
    {
      "start": 279,
      "value": "node7",
    },
  ],
}
`;

exports[`Go: labledStatements.go!ContinueToLabel: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 317,
      "value": "node2",
    },
    {
      "start": 342,
      "value": "node2",
    },
    {
      "start": 350,
      "value": "node2",
    },
    {
      "start": 354,
      "value": "node2",
    },
    {
      "start": 360,
      "value": "node2",
    },
    {
      "start": 361,
      "value": "node2",
    },
    {
      "start": 362,
      "value": "node3",
    },
    {
      "start": 367,
      "value": "node3",
    },
    {
      "start": 368,
      "value": "node3",
    },
    {
      "start": 368,
      "value": "node2",
    },
    {
      "start": 369,
      "value": "node4",
    },
    {
      "start": 372,
      "value": "node2",
    },
    {
      "start": 373,
      "value": "node4",
    },
    {
      "start": 396,
      "value": "node4",
    },
    {
      "start": 410,
      "value": "Not found",
    },
    {
      "start": 413,
      "value": "node4",
    },
    {
      "start": 417,
      "value": "node4",
    },
    {
      "start": 442,
      "value": "node4",
    },
    {
      "start": 456,
      "value": "node4",
    },
    {
      "start": 460,
      "value": "node8",
    },
    {
      "start": 463,
      "value": "node4",
    },
    {
      "start": 463,
      "value": "node8",
    },
    {
      "start": 484,
      "value": "node4",
    },
    {
      "start": 487,
      "value": "node2",
    },
    {
      "start": 487,
      "value": "node2",
    },
    {
      "start": 487,
      "value": "node2",
    },
    {
      "start": 489,
      "value": "node2",
    },
    {
      "start": 489,
      "value": "node2",
    },
  ],
}
`;

exports[`Go: loops.go!Loops: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 6,
      "value": "node0",
    },
    {
      "start": 25,
      "value": "node4",
    },
    {
      "start": 43,
      "value": "node1",
    },
    {
      "start": 44,
      "value": "node1",
    },
    {
      "start": 43,
      "value": "node1",
    },
    {
      "start": 45,
      "value": "node1",
    },
    {
      "start": 51,
      "value": "node3",
    },
    {
      "start": 52,
      "value": "node3",
    },
    {
      "start": 57,
      "value": "node3",
    },
    {
      "start": 58,
      "value": "node3",
    },
    {
      "start": 58,
      "value": "node1",
    },
    {
      "start": 58,
      "value": "node1",
    },
    {
      "start": 59,
      "value": "node4",
    },
    {
      "start": 59,
      "value": "node9",
    },
    {
      "start": 64,
      "value": "node0",
    },
    {
      "start": 64,
      "value": "node9",
    },
    {
      "start": 85,
      "value": "node6",
    },
    {
      "start": 86,
      "value": "node6",
    },
    {
      "start": 85,
      "value": "node6",
    },
    {
      "start": 87,
      "value": "node6",
    },
    {
      "start": 93,
      "value": "node8",
    },
    {
      "start": 94,
      "value": "node8",
    },
    {
      "start": 99,
      "value": "node8",
    },
    {
      "start": 100,
      "value": "node8",
    },
    {
      "start": 100,
      "value": "node6",
    },
    {
      "start": 100,
      "value": "node6",
    },
    {
      "start": 101,
      "value": "node9",
    },
    {
      "start": 101,
      "value": "node9",
    },
    {
      "start": 103,
      "value": "node0",
    },
    {
      "start": 103,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleForLoops: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 111,
      "value": "node1",
    },
    {
      "start": 139,
      "value": "node1",
    },
    {
      "start": 143,
      "value": "node1",
    },
    {
      "start": 147,
      "value": "node1",
    },
    {
      "start": 148,
      "value": "node1",
    },
    {
      "start": 149,
      "value": "node2",
    },
    {
      "start": 150,
      "value": "node2",
    },
    {
      "start": 151,
      "value": "node2",
    },
    {
      "start": 151,
      "value": "node1",
    },
    {
      "start": 152,
      "value": "node3",
    },
    {
      "start": 155,
      "value": "node1",
    },
    {
      "start": 156,
      "value": "node4",
    },
    {
      "start": 158,
      "value": "node4",
    },
    {
      "start": 165,
      "value": "node6",
    },
    {
      "start": 166,
      "value": "node6",
    },
    {
      "start": 171,
      "value": "node6",
    },
    {
      "start": 172,
      "value": "node6",
    },
    {
      "start": 172,
      "value": "node4",
    },
    {
      "start": 172,
      "value": "node4",
    },
    {
      "start": 173,
      "value": "node1",
    },
    {
      "start": 173,
      "value": "node10",
    },
    {
      "start": 178,
      "value": "node1",
    },
    {
      "start": 178,
      "value": "node10",
    },
    {
      "start": 182,
      "value": "node10",
    },
    {
      "start": 186,
      "value": "node10",
    },
    {
      "start": 187,
      "value": "node10",
    },
    {
      "start": 188,
      "value": "node11",
    },
    {
      "start": 189,
      "value": "node11",
    },
    {
      "start": 190,
      "value": "node11",
    },
    {
      "start": 190,
      "value": "node10",
    },
    {
      "start": 195,
      "value": "node12",
    },
    {
      "start": 197,
      "value": "node12",
    },
    {
      "start": 204,
      "value": "node14",
    },
    {
      "start": 205,
      "value": "node14",
    },
    {
      "start": 210,
      "value": "node14",
    },
    {
      "start": 211,
      "value": "node14",
    },
    {
      "start": 211,
      "value": "node12",
    },
    {
      "start": 211,
      "value": "node12",
    },
    {
      "start": 212,
      "value": "node10",
    },
    {
      "start": 212,
      "value": "node18",
    },
    {
      "start": 217,
      "value": "node1",
    },
    {
      "start": 217,
      "value": "node18",
    },
    {
      "start": 221,
      "value": "node18",
    },
    {
      "start": 225,
      "value": "node18",
    },
    {
      "start": 226,
      "value": "node18",
    },
    {
      "start": 229,
      "value": "node18",
    },
    {
      "start": 230,
      "value": "node19",
    },
    {
      "start": 233,
      "value": "node18",
    },
    {
      "start": 234,
      "value": "node20",
    },
    {
      "start": 236,
      "value": "node20",
    },
    {
      "start": 243,
      "value": "node26",
    },
    {
      "start": 244,
      "value": "node26",
    },
    {
      "start": 249,
      "value": "node26",
    },
    {
      "start": 250,
      "value": "node26",
    },
    {
      "start": 250,
      "value": "node20",
    },
    {
      "start": 250,
      "value": "node20",
    },
    {
      "start": 251,
      "value": "node18",
    },
    {
      "start": 251,
      "value": "node26",
    },
    {
      "start": 256,
      "value": "node1",
    },
    {
      "start": 256,
      "value": "node26",
    },
    {
      "start": 260,
      "value": "node26",
    },
    {
      "start": 264,
      "value": "node26",
    },
    {
      "start": 265,
      "value": "node26",
    },
    {
      "start": 268,
      "value": "node26",
    },
    {
      "start": 273,
      "value": "node27",
    },
    {
      "start": 275,
      "value": "node27",
    },
    {
      "start": 282,
      "value": "node38",
    },
    {
      "start": 283,
      "value": "node38",
    },
    {
      "start": 288,
      "value": "node38",
    },
    {
      "start": 289,
      "value": "node38",
    },
    {
      "start": 289,
      "value": "node27",
    },
    {
      "start": 289,
      "value": "node27",
    },
    {
      "start": 290,
      "value": "node26",
    },
    {
      "start": 290,
      "value": "node38",
    },
    {
      "start": 295,
      "value": "node1",
    },
    {
      "start": 295,
      "value": "node38",
    },
    {
      "start": 305,
      "value": "node33",
    },
    {
      "start": 306,
      "value": "node33",
    },
    {
      "start": 307,
      "value": "node33",
    },
    {
      "start": 307,
      "value": "node38",
    },
    {
      "start": 308,
      "value": "node34",
    },
    {
      "start": 311,
      "value": "node38",
    },
    {
      "start": 312,
      "value": "node35",
    },
    {
      "start": 314,
      "value": "node35",
    },
    {
      "start": 321,
      "value": "node37",
    },
    {
      "start": 322,
      "value": "node37",
    },
    {
      "start": 327,
      "value": "node37",
    },
    {
      "start": 328,
      "value": "node37",
    },
    {
      "start": 328,
      "value": "node35",
    },
    {
      "start": 328,
      "value": "node35",
    },
    {
      "start": 329,
      "value": "node38",
    },
    {
      "start": 329,
      "value": "node45",
    },
    {
      "start": 334,
      "value": "node1",
    },
    {
      "start": 334,
      "value": "node45",
    },
    {
      "start": 344,
      "value": "node41",
    },
    {
      "start": 345,
      "value": "node41",
    },
    {
      "start": 346,
      "value": "node41",
    },
    {
      "start": 346,
      "value": "node45",
    },
    {
      "start": 351,
      "value": "node42",
    },
    {
      "start": 353,
      "value": "node42",
    },
    {
      "start": 360,
      "value": "node44",
    },
    {
      "start": 361,
      "value": "node44",
    },
    {
      "start": 366,
      "value": "node44",
    },
    {
      "start": 367,
      "value": "node44",
    },
    {
      "start": 367,
      "value": "node42",
    },
    {
      "start": 367,
      "value": "node42",
    },
    {
      "start": 368,
      "value": "node45",
    },
    {
      "start": 368,
      "value": "node52",
    },
    {
      "start": 373,
      "value": "node1",
    },
    {
      "start": 373,
      "value": "node52",
    },
    {
      "start": 386,
      "value": "node48",
    },
    {
      "start": 389,
      "value": "node52",
    },
    {
      "start": 390,
      "value": "node49",
    },
    {
      "start": 392,
      "value": "node49",
    },
    {
      "start": 399,
      "value": "node58",
    },
    {
      "start": 400,
      "value": "node58",
    },
    {
      "start": 405,
      "value": "node58",
    },
    {
      "start": 406,
      "value": "node58",
    },
    {
      "start": 406,
      "value": "node49",
    },
    {
      "start": 406,
      "value": "node49",
    },
    {
      "start": 407,
      "value": "node52",
    },
    {
      "start": 407,
      "value": "node58",
    },
    {
      "start": 412,
      "value": "node1",
    },
    {
      "start": 412,
      "value": "node58",
    },
    {
      "start": 429,
      "value": "node55",
    },
    {
      "start": 431,
      "value": "node55",
    },
    {
      "start": 438,
      "value": "node61",
    },
    {
      "start": 439,
      "value": "node61",
    },
    {
      "start": 444,
      "value": "node61",
    },
    {
      "start": 445,
      "value": "node61",
    },
    {
      "start": 445,
      "value": "node55",
    },
    {
      "start": 445,
      "value": "node55",
    },
    {
      "start": 446,
      "value": "node58",
    },
    {
      "start": 446,
      "value": "node58",
    },
    {
      "start": 448,
      "value": "node1",
    },
    {
      "start": 448,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: loops.go!allLoops: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 454,
      "value": "node1",
    },
    {
      "start": 476,
      "value": "node1",
    },
    {
      "start": 480,
      "value": "node1",
    },
    {
      "start": 484,
      "value": "node1",
    },
    {
      "start": 485,
      "value": "node1",
    },
    {
      "start": 486,
      "value": "node2",
    },
    {
      "start": 487,
      "value": "node2",
    },
    {
      "start": 488,
      "value": "node2",
    },
    {
      "start": 488,
      "value": "node1",
    },
    {
      "start": 489,
      "value": "node3",
    },
    {
      "start": 492,
      "value": "node1",
    },
    {
      "start": 493,
      "value": "node4",
    },
    {
      "start": 495,
      "value": "node4",
    },
    {
      "start": 502,
      "value": "node6",
    },
    {
      "start": 503,
      "value": "node6",
    },
    {
      "start": 508,
      "value": "node6",
    },
    {
      "start": 509,
      "value": "node6",
    },
    {
      "start": 509,
      "value": "node4",
    },
    {
      "start": 509,
      "value": "node4",
    },
    {
      "start": 510,
      "value": "node1",
    },
    {
      "start": 510,
      "value": "node10",
    },
    {
      "start": 515,
      "value": "node1",
    },
    {
      "start": 515,
      "value": "node10",
    },
    {
      "start": 519,
      "value": "node10",
    },
    {
      "start": 523,
      "value": "node10",
    },
    {
      "start": 524,
      "value": "node10",
    },
    {
      "start": 525,
      "value": "node11",
    },
    {
      "start": 526,
      "value": "node11",
    },
    {
      "start": 527,
      "value": "node11",
    },
    {
      "start": 527,
      "value": "node10",
    },
    {
      "start": 532,
      "value": "node12",
    },
    {
      "start": 534,
      "value": "node12",
    },
    {
      "start": 541,
      "value": "node14",
    },
    {
      "start": 542,
      "value": "node14",
    },
    {
      "start": 547,
      "value": "node14",
    },
    {
      "start": 548,
      "value": "node14",
    },
    {
      "start": 548,
      "value": "node12",
    },
    {
      "start": 548,
      "value": "node12",
    },
    {
      "start": 549,
      "value": "node10",
    },
    {
      "start": 549,
      "value": "node18",
    },
    {
      "start": 554,
      "value": "node1",
    },
    {
      "start": 554,
      "value": "node18",
    },
    {
      "start": 558,
      "value": "node18",
    },
    {
      "start": 562,
      "value": "node18",
    },
    {
      "start": 563,
      "value": "node18",
    },
    {
      "start": 566,
      "value": "node18",
    },
    {
      "start": 567,
      "value": "node19",
    },
    {
      "start": 570,
      "value": "node18",
    },
    {
      "start": 571,
      "value": "node20",
    },
    {
      "start": 573,
      "value": "node20",
    },
    {
      "start": 580,
      "value": "node26",
    },
    {
      "start": 581,
      "value": "node26",
    },
    {
      "start": 586,
      "value": "node26",
    },
    {
      "start": 587,
      "value": "node26",
    },
    {
      "start": 587,
      "value": "node20",
    },
    {
      "start": 587,
      "value": "node20",
    },
    {
      "start": 588,
      "value": "node18",
    },
    {
      "start": 588,
      "value": "node26",
    },
    {
      "start": 593,
      "value": "node1",
    },
    {
      "start": 593,
      "value": "node26",
    },
    {
      "start": 597,
      "value": "node26",
    },
    {
      "start": 601,
      "value": "node26",
    },
    {
      "start": 602,
      "value": "node26",
    },
    {
      "start": 605,
      "value": "node26",
    },
    {
      "start": 610,
      "value": "node27",
    },
    {
      "start": 612,
      "value": "node27",
    },
    {
      "start": 619,
      "value": "node38",
    },
    {
      "start": 620,
      "value": "node38",
    },
    {
      "start": 625,
      "value": "node38",
    },
    {
      "start": 626,
      "value": "node38",
    },
    {
      "start": 626,
      "value": "node27",
    },
    {
      "start": 626,
      "value": "node27",
    },
    {
      "start": 627,
      "value": "node26",
    },
    {
      "start": 627,
      "value": "node38",
    },
    {
      "start": 632,
      "value": "node1",
    },
    {
      "start": 632,
      "value": "node38",
    },
    {
      "start": 642,
      "value": "node33",
    },
    {
      "start": 643,
      "value": "node33",
    },
    {
      "start": 644,
      "value": "node33",
    },
    {
      "start": 644,
      "value": "node38",
    },
    {
      "start": 645,
      "value": "node34",
    },
    {
      "start": 648,
      "value": "node38",
    },
    {
      "start": 649,
      "value": "node35",
    },
    {
      "start": 651,
      "value": "node35",
    },
    {
      "start": 658,
      "value": "node37",
    },
    {
      "start": 659,
      "value": "node37",
    },
    {
      "start": 664,
      "value": "node37",
    },
    {
      "start": 665,
      "value": "node37",
    },
    {
      "start": 665,
      "value": "node35",
    },
    {
      "start": 665,
      "value": "node35",
    },
    {
      "start": 666,
      "value": "node38",
    },
    {
      "start": 666,
      "value": "node45",
    },
    {
      "start": 671,
      "value": "node1",
    },
    {
      "start": 671,
      "value": "node45",
    },
    {
      "start": 681,
      "value": "node41",
    },
    {
      "start": 682,
      "value": "node41",
    },
    {
      "start": 683,
      "value": "node41",
    },
    {
      "start": 683,
      "value": "node45",
    },
    {
      "start": 688,
      "value": "node42",
    },
    {
      "start": 690,
      "value": "node42",
    },
    {
      "start": 697,
      "value": "node44",
    },
    {
      "start": 698,
      "value": "node44",
    },
    {
      "start": 703,
      "value": "node44",
    },
    {
      "start": 704,
      "value": "node44",
    },
    {
      "start": 704,
      "value": "node42",
    },
    {
      "start": 704,
      "value": "node42",
    },
    {
      "start": 705,
      "value": "node45",
    },
    {
      "start": 705,
      "value": "node52",
    },
    {
      "start": 710,
      "value": "node1",
    },
    {
      "start": 710,
      "value": "node52",
    },
    {
      "start": 723,
      "value": "node48",
    },
    {
      "start": 726,
      "value": "node52",
    },
    {
      "start": 727,
      "value": "node49",
    },
    {
      "start": 729,
      "value": "node49",
    },
    {
      "start": 736,
      "value": "node58",
    },
    {
      "start": 737,
      "value": "node58",
    },
    {
      "start": 742,
      "value": "node58",
    },
    {
      "start": 743,
      "value": "node58",
    },
    {
      "start": 743,
      "value": "node49",
    },
    {
      "start": 743,
      "value": "node49",
    },
    {
      "start": 744,
      "value": "node52",
    },
    {
      "start": 744,
      "value": "node58",
    },
    {
      "start": 749,
      "value": "node1",
    },
    {
      "start": 749,
      "value": "node58",
    },
    {
      "start": 766,
      "value": "node55",
    },
    {
      "start": 768,
      "value": "node55",
    },
    {
      "start": 775,
      "value": "node59",
    },
    {
      "start": 776,
      "value": "node59",
    },
    {
      "start": 781,
      "value": "node59",
    },
    {
      "start": 782,
      "value": "node59",
    },
    {
      "start": 782,
      "value": "node55",
    },
    {
      "start": 782,
      "value": "node55",
    },
    {
      "start": 783,
      "value": "node58",
    },
    {
      "start": 783,
      "value": "node64",
    },
    {
      "start": 788,
      "value": "node1",
    },
    {
      "start": 788,
      "value": "node64",
    },
    {
      "start": 805,
      "value": "node61",
    },
    {
      "start": 806,
      "value": "node61",
    },
    {
      "start": 805,
      "value": "node61",
    },
    {
      "start": 813,
      "value": "node63",
    },
    {
      "start": 814,
      "value": "node63",
    },
    {
      "start": 819,
      "value": "node63",
    },
    {
      "start": 820,
      "value": "node63",
    },
    {
      "start": 820,
      "value": "node61",
    },
    {
      "start": 820,
      "value": "node61",
    },
    {
      "start": 821,
      "value": "node64",
    },
    {
      "start": 821,
      "value": "node69",
    },
    {
      "start": 826,
      "value": "node1",
    },
    {
      "start": 826,
      "value": "node69",
    },
    {
      "start": 846,
      "value": "node66",
    },
    {
      "start": 847,
      "value": "node66",
    },
    {
      "start": 846,
      "value": "node66",
    },
    {
      "start": 854,
      "value": "node68",
    },
    {
      "start": 855,
      "value": "node68",
    },
    {
      "start": 860,
      "value": "node68",
    },
    {
      "start": 861,
      "value": "node68",
    },
    {
      "start": 861,
      "value": "node66",
    },
    {
      "start": 861,
      "value": "node66",
    },
    {
      "start": 862,
      "value": "node69",
    },
    {
      "start": 862,
      "value": "Not found",
    },
    {
      "start": 867,
      "value": "node1",
    },
    {
      "start": 871,
      "value": "node71",
    },
    {
      "start": 873,
      "value": "node71",
    },
    {
      "start": 879,
      "value": "node74",
    },
    {
      "start": 880,
      "value": "node74",
    },
    {
      "start": 885,
      "value": "node74",
    },
    {
      "start": 886,
      "value": "node74",
    },
    {
      "start": 886,
      "value": "node71",
    },
    {
      "start": 886,
      "value": "node71",
    },
    {
      "start": 887,
      "value": "node78",
    },
    {
      "start": 892,
      "value": "node1",
    },
    {
      "start": 892,
      "value": "node78",
    },
    {
      "start": 903,
      "value": "node75",
    },
    {
      "start": 904,
      "value": "node75",
    },
    {
      "start": 903,
      "value": "node75",
    },
    {
      "start": 910,
      "value": "node77",
    },
    {
      "start": 911,
      "value": "node77",
    },
    {
      "start": 916,
      "value": "node77",
    },
    {
      "start": 917,
      "value": "node77",
    },
    {
      "start": 917,
      "value": "node75",
    },
    {
      "start": 917,
      "value": "node75",
    },
    {
      "start": 918,
      "value": "node78",
    },
    {
      "start": 918,
      "value": "node83",
    },
    {
      "start": 923,
      "value": "node1",
    },
    {
      "start": 923,
      "value": "node83",
    },
    {
      "start": 931,
      "value": "node80",
    },
    {
      "start": 932,
      "value": "node80",
    },
    {
      "start": 931,
      "value": "node80",
    },
    {
      "start": 938,
      "value": "node82",
    },
    {
      "start": 939,
      "value": "node82",
    },
    {
      "start": 944,
      "value": "node82",
    },
    {
      "start": 945,
      "value": "node82",
    },
    {
      "start": 945,
      "value": "node80",
    },
    {
      "start": 945,
      "value": "node80",
    },
    {
      "start": 946,
      "value": "node83",
    },
    {
      "start": 946,
      "value": "node83",
    },
    {
      "start": 952,
      "value": "node1",
    },
    {
      "start": 952,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: loops.go!infiniteLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 969,
      "value": "node0",
    },
    {
      "start": 999,
      "value": "node1",
    },
    {
      "start": 1001,
      "value": "Not found",
    },
    {
      "start": 1003,
      "value": "node0",
    },
    {
      "start": 1003,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: loops.go!condLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 1020,
      "value": "node0",
    },
    {
      "start": 1042,
      "value": "node2",
    },
    {
      "start": 1053,
      "value": "node1",
    },
    {
      "start": 1054,
      "value": "node1",
    },
    {
      "start": 1053,
      "value": "node1",
    },
    {
      "start": 1055,
      "value": "node2",
    },
    {
      "start": 1055,
      "value": "node2",
    },
    {
      "start": 1057,
      "value": "node0",
    },
    {
      "start": 1057,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_ICU: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1074,
      "value": "node1",
    },
    {
      "start": 1102,
      "value": "node1",
    },
    {
      "start": 1106,
      "value": "node1",
    },
    {
      "start": 1110,
      "value": "node1",
    },
    {
      "start": 1111,
      "value": "node1",
    },
    {
      "start": 1112,
      "value": "node2",
    },
    {
      "start": 1113,
      "value": "node2",
    },
    {
      "start": 1114,
      "value": "node2",
    },
    {
      "start": 1114,
      "value": "node1",
    },
    {
      "start": 1115,
      "value": "node3",
    },
    {
      "start": 1118,
      "value": "node1",
    },
    {
      "start": 1119,
      "value": "node3",
    },
    {
      "start": 1121,
      "value": "node1",
    },
    {
      "start": 1121,
      "value": "node1",
    },
    {
      "start": 1123,
      "value": "node1",
    },
    {
      "start": 1123,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_IC: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1139,
      "value": "node1",
    },
    {
      "start": 1166,
      "value": "node1",
    },
    {
      "start": 1170,
      "value": "node1",
    },
    {
      "start": 1174,
      "value": "node1",
    },
    {
      "start": 1175,
      "value": "node1",
    },
    {
      "start": 1176,
      "value": "node2",
    },
    {
      "start": 1177,
      "value": "node2",
    },
    {
      "start": 1178,
      "value": "node2",
    },
    {
      "start": 1178,
      "value": "node1",
    },
    {
      "start": 1183,
      "value": "node6",
    },
    {
      "start": 1185,
      "value": "node1",
    },
    {
      "start": 1185,
      "value": "node1",
    },
    {
      "start": 1187,
      "value": "node1",
    },
    {
      "start": 1187,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_IU: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1203,
      "value": "node1",
    },
    {
      "start": 1230,
      "value": "node1",
    },
    {
      "start": 1234,
      "value": "node1",
    },
    {
      "start": 1238,
      "value": "node1",
    },
    {
      "start": 1239,
      "value": "node1",
    },
    {
      "start": 1242,
      "value": "node1",
    },
    {
      "start": 1243,
      "value": "node2",
    },
    {
      "start": 1246,
      "value": "node1",
    },
    {
      "start": 1247,
      "value": "node2",
    },
    {
      "start": 1249,
      "value": "node1",
    },
    {
      "start": 1249,
      "value": "node1",
    },
    {
      "start": 1251,
      "value": "node1",
    },
    {
      "start": 1251,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_I: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1267,
      "value": "node1",
    },
    {
      "start": 1293,
      "value": "node1",
    },
    {
      "start": 1297,
      "value": "node1",
    },
    {
      "start": 1301,
      "value": "node1",
    },
    {
      "start": 1302,
      "value": "node1",
    },
    {
      "start": 1305,
      "value": "node1",
    },
    {
      "start": 1310,
      "value": "node5",
    },
    {
      "start": 1312,
      "value": "node1",
    },
    {
      "start": 1312,
      "value": "node1",
    },
    {
      "start": 1314,
      "value": "node1",
    },
    {
      "start": 1314,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_CU: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node4",
    },
    {
      "start": 1330,
      "value": "node4",
    },
    {
      "start": 1357,
      "value": "node4",
    },
    {
      "start": 1367,
      "value": "node1",
    },
    {
      "start": 1368,
      "value": "node1",
    },
    {
      "start": 1369,
      "value": "node1",
    },
    {
      "start": 1369,
      "value": "node4",
    },
    {
      "start": 1370,
      "value": "node2",
    },
    {
      "start": 1373,
      "value": "node4",
    },
    {
      "start": 1374,
      "value": "node2",
    },
    {
      "start": 1376,
      "value": "node4",
    },
    {
      "start": 1376,
      "value": "node4",
    },
    {
      "start": 1378,
      "value": "node4",
    },
    {
      "start": 1378,
      "value": "node4",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_C: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node3",
    },
    {
      "start": 1394,
      "value": "node3",
    },
    {
      "start": 1420,
      "value": "node3",
    },
    {
      "start": 1430,
      "value": "node1",
    },
    {
      "start": 1431,
      "value": "node1",
    },
    {
      "start": 1432,
      "value": "node1",
    },
    {
      "start": 1432,
      "value": "node3",
    },
    {
      "start": 1437,
      "value": "node5",
    },
    {
      "start": 1439,
      "value": "node3",
    },
    {
      "start": 1439,
      "value": "node3",
    },
    {
      "start": 1441,
      "value": "node3",
    },
    {
      "start": 1441,
      "value": "node3",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_U: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node3",
    },
    {
      "start": 1457,
      "value": "node3",
    },
    {
      "start": 1483,
      "value": "node3",
    },
    {
      "start": 1496,
      "value": "node1",
    },
    {
      "start": 1499,
      "value": "node3",
    },
    {
      "start": 1500,
      "value": "node1",
    },
    {
      "start": 1502,
      "value": "node3",
    },
    {
      "start": 1502,
      "value": "node3",
    },
    {
      "start": 1504,
      "value": "node3",
    },
    {
      "start": 1504,
      "value": "node3",
    },
  ],
}
`;

exports[`Go: loops.go!cStyleLoop_: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 1520,
      "value": "node2",
    },
    {
      "start": 1545,
      "value": "node2",
    },
    {
      "start": 1562,
      "value": "node4",
    },
    {
      "start": 1564,
      "value": "node2",
    },
    {
      "start": 1564,
      "value": "node2",
    },
    {
      "start": 1566,
      "value": "node2",
    },
    {
      "start": 1566,
      "value": "node2",
    },
  ],
}
`;

exports[`C: sample.c!trivial: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 15,
      "value": "node2",
    },
    {
      "start": 32,
      "value": "node2",
    },
  ],
}
`;

exports[`C: sample.c!simpleIf: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 49,
      "value": "node1",
    },
    {
      "start": 71,
      "value": "node1",
    },
    {
      "start": 74,
      "value": "node1",
    },
    {
      "start": 77,
      "value": "node2",
    },
    {
      "start": 78,
      "value": "node1",
    },
    {
      "start": 78,
      "value": "node2",
    },
    {
      "start": 85,
      "value": "node1",
    },
    {
      "start": 85,
      "value": "node1",
    },
    {
      "start": 87,
      "value": "node1",
    },
    {
      "start": 87,
      "value": "node1",
    },
  ],
}
`;

exports[`C: sample.c!ifElse: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 114,
      "value": "node1",
    },
    {
      "start": 134,
      "value": "node1",
    },
    {
      "start": 137,
      "value": "node1",
    },
    {
      "start": 140,
      "value": "node2",
    },
    {
      "start": 141,
      "value": "node1",
    },
    {
      "start": 141,
      "value": "node2",
    },
    {
      "start": 148,
      "value": "node3",
    },
    {
      "start": 154,
      "value": "node1",
    },
    {
      "start": 154,
      "value": "node3",
    },
    {
      "start": 157,
      "value": "node3",
    },
    {
      "start": 160,
      "value": "node4",
    },
    {
      "start": 161,
      "value": "node3",
    },
    {
      "start": 161,
      "value": "node4",
    },
    {
      "start": 168,
      "value": "node5",
    },
    {
      "start": 169,
      "value": "node3",
    },
    {
      "start": 169,
      "value": "node5",
    },
    {
      "start": 174,
      "value": "node5",
    },
    {
      "start": 181,
      "value": "node5",
    },
    {
      "start": 181,
      "value": "node3",
    },
    {
      "start": 181,
      "value": "node1",
    },
    {
      "start": 181,
      "value": "node1",
    },
    {
      "start": 183,
      "value": "node1",
    },
    {
      "start": 183,
      "value": "node1",
    },
  ],
}
`;

exports[`C: sample.c!forever: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 210,
      "value": "node2",
    },
    {
      "start": 231,
      "value": "node2",
    },
    {
      "start": 239,
      "value": "node4",
    },
    {
      "start": 240,
      "value": "node2",
    },
    {
      "start": 240,
      "value": "node4",
    },
    {
      "start": 247,
      "value": "node2",
    },
    {
      "start": 247,
      "value": "node2",
    },
    {
      "start": 249,
      "value": "node2",
    },
    {
      "start": 249,
      "value": "node2",
    },
  ],
}
`;

exports[`C: sample.c!forever2: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 276,
      "value": "node1",
    },
    {
      "start": 298,
      "value": "node1",
    },
    {
      "start": 303,
      "value": "node1",
    },
    {
      "start": 313,
      "value": "node1",
    },
    {
      "start": 313,
      "value": "node1",
    },
    {
      "start": 314,
      "value": "node1",
    },
    {
      "start": 315,
      "value": "node2",
    },
    {
      "start": 318,
      "value": "node2",
    },
    {
      "start": 319,
      "value": "node2",
    },
    {
      "start": 320,
      "value": "node1",
    },
    {
      "start": 320,
      "value": "node2",
    },
    {
      "start": 327,
      "value": "node1",
    },
    {
      "start": 327,
      "value": "node1",
    },
    {
      "start": 329,
      "value": "node1",
    },
    {
      "start": 329,
      "value": "node1",
    },
  ],
}
`;

exports[`C: sample.c!forLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 388,
      "value": "node1",
    },
    {
      "start": 409,
      "value": "node1",
    },
    {
      "start": 414,
      "value": "node1",
    },
    {
      "start": 424,
      "value": "node1",
    },
    {
      "start": 424,
      "value": "node1",
    },
    {
      "start": 425,
      "value": "node2",
    },
    {
      "start": 431,
      "value": "node2",
    },
    {
      "start": 432,
      "value": "node2",
    },
    {
      "start": 432,
      "value": "node1",
    },
    {
      "start": 433,
      "value": "node3",
    },
    {
      "start": 436,
      "value": "node3",
    },
    {
      "start": 437,
      "value": "node3",
    },
    {
      "start": 438,
      "value": "node1",
    },
    {
      "start": 438,
      "value": "node3",
    },
    {
      "start": 481,
      "value": "node1",
    },
    {
      "start": 481,
      "value": "node1",
    },
    {
      "start": 483,
      "value": "node1",
    },
    {
      "start": 483,
      "value": "node1",
    },
  ],
}
`;

exports[`C: sample.c!whileLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 510,
      "value": "node0",
    },
    {
      "start": 533,
      "value": "node1",
    },
    {
      "start": 539,
      "value": "node1",
    },
    {
      "start": 544,
      "value": "node1",
    },
    {
      "start": 544,
      "value": "node1",
    },
    {
      "start": 545,
      "value": "node2",
    },
    {
      "start": 552,
      "value": "node2",
    },
    {
      "start": 552,
      "value": "node1",
    },
    {
      "start": 552,
      "value": "node1",
    },
    {
      "start": 554,
      "value": "node0",
    },
    {
      "start": 554,
      "value": "node0",
    },
  ],
}
`;

exports[`C: sample.c!doWhile: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 581,
      "value": "node0",
    },
    {
      "start": 602,
      "value": "node1",
    },
    {
      "start": 605,
      "value": "node1",
    },
    {
      "start": 612,
      "value": "node1",
    },
    {
      "start": 612,
      "value": "node1",
    },
    {
      "start": 619,
      "value": "node1",
    },
    {
      "start": 624,
      "value": "node1",
    },
    {
      "start": 624,
      "value": "node1",
    },
    {
      "start": 625,
      "value": "node1",
    },
    {
      "start": 627,
      "value": "node0",
    },
    {
      "start": 627,
      "value": "node0",
    },
  ],
}
`;

exports[`C: sample.c!gotoA: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 654,
      "value": "node0",
    },
    {
      "start": 669,
      "value": "node2",
    },
    {
      "start": 680,
      "value": "node2",
    },
    {
      "start": 683,
      "value": "node2",
    },
    {
      "start": 686,
      "value": "node3",
    },
    {
      "start": 687,
      "value": "node2",
    },
    {
      "start": 687,
      "value": "node3",
    },
    {
      "start": 697,
      "value": "node3",
    },
    {
      "start": 708,
      "value": "node3",
    },
    {
      "start": 714,
      "value": "node2",
    },
    {
      "start": 714,
      "value": "node2",
    },
    {
      "start": 714,
      "value": "node2",
    },
    {
      "start": 716,
      "value": "node0",
    },
    {
      "start": 716,
      "value": "node0",
    },
  ],
}
`;

exports[`C: sample.c!switch_1: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 765,
      "value": "node1",
    },
    {
      "start": 787,
      "value": "node1",
    },
    {
      "start": 799,
      "value": "node1",
    },
    {
      "start": 804,
      "value": "node1",
    },
    {
      "start": 804,
      "value": "node1",
    },
    {
      "start": 811,
      "value": "Not found",
    },
    {
      "start": 820,
      "value": "node1",
    },
    {
      "start": 838,
      "value": "node2",
    },
    {
      "start": 852,
      "value": "node1",
    },
    {
      "start": 852,
      "value": "node3",
    },
    {
      "start": 857,
      "value": "node1",
    },
    {
      "start": 857,
      "value": "node3",
    },
    {
      "start": 864,
      "value": "node5",
    },
    {
      "start": 869,
      "value": "node1",
    },
    {
      "start": 869,
      "value": "node5",
    },
    {
      "start": 876,
      "value": "Not found",
    },
    {
      "start": 885,
      "value": "node5",
    },
    {
      "start": 903,
      "value": "node6",
    },
    {
      "start": 917,
      "value": "node5",
    },
    {
      "start": 917,
      "value": "node5",
    },
    {
      "start": 923,
      "value": "node1",
    },
    {
      "start": 923,
      "value": "node1",
    },
    {
      "start": 925,
      "value": "node1",
    },
    {
      "start": 925,
      "value": "node1",
    },
  ],
}
`;

exports[`C: sample.c!switch_2: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 952,
      "value": "node1",
    },
    {
      "start": 974,
      "value": "node1",
    },
    {
      "start": 986,
      "value": "node1",
    },
    {
      "start": 991,
      "value": "node1",
    },
    {
      "start": 991,
      "value": "node1",
    },
    {
      "start": 998,
      "value": "node2",
    },
    {
      "start": 1007,
      "value": "node2",
    },
    {
      "start": 1013,
      "value": "node1",
    },
    {
      "start": 1013,
      "value": "node3",
    },
    {
      "start": 1018,
      "value": "node1",
    },
    {
      "start": 1018,
      "value": "node3",
    },
    {
      "start": 1025,
      "value": "node5",
    },
    {
      "start": 1030,
      "value": "node1",
    },
    {
      "start": 1030,
      "value": "node5",
    },
    {
      "start": 1037,
      "value": "node5",
    },
    {
      "start": 1043,
      "value": "node1",
    },
    {
      "start": 1043,
      "value": "node1",
    },
    {
      "start": 1045,
      "value": "node1",
    },
    {
      "start": 1045,
      "value": "node1",
    },
  ],
}
`;

exports[`C: sample.c!ManyIfs: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1073,
      "value": "node1",
    },
    {
      "start": 1094,
      "value": "node1",
    },
    {
      "start": 1097,
      "value": "node1",
    },
    {
      "start": 1100,
      "value": "node2",
    },
    {
      "start": 1101,
      "value": "node1",
    },
    {
      "start": 1101,
      "value": "node2",
    },
    {
      "start": 1108,
      "value": "node1",
    },
    {
      "start": 1108,
      "value": "node5",
    },
    {
      "start": 1114,
      "value": "node1",
    },
    {
      "start": 1114,
      "value": "node5",
    },
    {
      "start": 1117,
      "value": "node5",
    },
    {
      "start": 1120,
      "value": "node6",
    },
    {
      "start": 1121,
      "value": "node5",
    },
    {
      "start": 1121,
      "value": "node6",
    },
    {
      "start": 1128,
      "value": "node7",
    },
    {
      "start": 1129,
      "value": "node5",
    },
    {
      "start": 1129,
      "value": "node7",
    },
    {
      "start": 1134,
      "value": "node7",
    },
    {
      "start": 1141,
      "value": "node7",
    },
    {
      "start": 1141,
      "value": "node5",
    },
    {
      "start": 1141,
      "value": "node10",
    },
    {
      "start": 1147,
      "value": "node1",
    },
    {
      "start": 1147,
      "value": "node10",
    },
    {
      "start": 1150,
      "value": "node10",
    },
    {
      "start": 1153,
      "value": "node11",
    },
    {
      "start": 1154,
      "value": "node10",
    },
    {
      "start": 1154,
      "value": "node11",
    },
    {
      "start": 1161,
      "value": "node12",
    },
    {
      "start": 1167,
      "value": "node10",
    },
    {
      "start": 1167,
      "value": "node12",
    },
    {
      "start": 1170,
      "value": "node12",
    },
    {
      "start": 1173,
      "value": "node13",
    },
    {
      "start": 1174,
      "value": "node12",
    },
    {
      "start": 1174,
      "value": "node13",
    },
    {
      "start": 1181,
      "value": "node12",
    },
    {
      "start": 1181,
      "value": "node10",
    },
    {
      "start": 1181,
      "value": "node16",
    },
    {
      "start": 1187,
      "value": "node1",
    },
    {
      "start": 1187,
      "value": "node16",
    },
    {
      "start": 1190,
      "value": "node16",
    },
    {
      "start": 1193,
      "value": "node17",
    },
    {
      "start": 1194,
      "value": "node16",
    },
    {
      "start": 1194,
      "value": "node17",
    },
    {
      "start": 1201,
      "value": "node18",
    },
    {
      "start": 1207,
      "value": "node16",
    },
    {
      "start": 1207,
      "value": "node18",
    },
    {
      "start": 1210,
      "value": "node18",
    },
    {
      "start": 1213,
      "value": "node19",
    },
    {
      "start": 1214,
      "value": "node18",
    },
    {
      "start": 1214,
      "value": "node19",
    },
    {
      "start": 1222,
      "value": "node20",
    },
    {
      "start": 1223,
      "value": "node18",
    },
    {
      "start": 1223,
      "value": "node20",
    },
    {
      "start": 1228,
      "value": "node20",
    },
    {
      "start": 1235,
      "value": "node20",
    },
    {
      "start": 1235,
      "value": "node18",
    },
    {
      "start": 1235,
      "value": "node16",
    },
    {
      "start": 1235,
      "value": "node16",
    },
    {
      "start": 1237,
      "value": "node1",
    },
    {
      "start": 1237,
      "value": "node1",
    },
  ],
}
`;

exports[`C: sample.c!IfWithoutBraces: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node5",
    },
    {
      "start": 1254,
      "value": "node5",
    },
    {
      "start": 1428,
      "value": "node5",
    },
    {
      "start": 1436,
      "value": "node1",
    },
    {
      "start": 1437,
      "value": "node5",
    },
    {
      "start": 1437,
      "value": "node1",
    },
    {
      "start": 1447,
      "value": "node1",
    },
    {
      "start": 1450,
      "value": "node1",
    },
    {
      "start": 1453,
      "value": "node1",
    },
    {
      "start": 1453,
      "value": "node12",
    },
    {
      "start": 1466,
      "value": "node12",
    },
    {
      "start": 1472,
      "value": "node1",
    },
    {
      "start": 1472,
      "value": "node1",
    },
    {
      "start": 1478,
      "value": "node5",
    },
    {
      "start": 1478,
      "value": "node12",
    },
    {
      "start": 1484,
      "value": "node5",
    },
    {
      "start": 1484,
      "value": "node12",
    },
    {
      "start": 1492,
      "value": "node8",
    },
    {
      "start": 1493,
      "value": "node12",
    },
    {
      "start": 1493,
      "value": "node8",
    },
    {
      "start": 1503,
      "value": "node8",
    },
    {
      "start": 1506,
      "value": "node8",
    },
    {
      "start": 1509,
      "value": "node15",
    },
    {
      "start": 1510,
      "value": "node8",
    },
    {
      "start": 1510,
      "value": "node15",
    },
    {
      "start": 1524,
      "value": "node15",
    },
    {
      "start": 1530,
      "value": "node15",
    },
    {
      "start": 1540,
      "value": "node8",
    },
    {
      "start": 1540,
      "value": "node8",
    },
    {
      "start": 1546,
      "value": "node12",
    },
    {
      "start": 1546,
      "value": "node12",
    },
    {
      "start": 1548,
      "value": "node5",
    },
    {
      "start": 1548,
      "value": "node5",
    },
  ],
}
`;

exports[`C: sample.c!ForLoops: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node7",
    },
    {
      "start": 1566,
      "value": "node7",
    },
    {
      "start": 1612,
      "value": "node7",
    },
    {
      "start": 1620,
      "value": "node1",
    },
    {
      "start": 1621,
      "value": "node1",
    },
    {
      "start": 1622,
      "value": "node1",
    },
    {
      "start": 1622,
      "value": "node7",
    },
    {
      "start": 1623,
      "value": "node2",
    },
    {
      "start": 1624,
      "value": "node2",
    },
    {
      "start": 1625,
      "value": "node3",
    },
    {
      "start": 1626,
      "value": "node7",
    },
    {
      "start": 1626,
      "value": "node3",
    },
    {
      "start": 1628,
      "value": "node3",
    },
    {
      "start": 1631,
      "value": "node3",
    },
    {
      "start": 1634,
      "value": "node4",
    },
    {
      "start": 1635,
      "value": "node3",
    },
    {
      "start": 1635,
      "value": "node4",
    },
    {
      "start": 1641,
      "value": "node3",
    },
    {
      "start": 1641,
      "value": "node3",
    },
    {
      "start": 1642,
      "value": "node7",
    },
    {
      "start": 1642,
      "value": "node15",
    },
    {
      "start": 1647,
      "value": "node7",
    },
    {
      "start": 1647,
      "value": "node15",
    },
    {
      "start": 1655,
      "value": "node10",
    },
    {
      "start": 1656,
      "value": "node15",
    },
    {
      "start": 1656,
      "value": "node10",
    },
    {
      "start": 1657,
      "value": "node10",
    },
    {
      "start": 1657,
      "value": "node10",
    },
    {
      "start": 1660,
      "value": "node11",
    },
    {
      "start": 1661,
      "value": "node15",
    },
    {
      "start": 1661,
      "value": "node11",
    },
    {
      "start": 1663,
      "value": "node11",
    },
    {
      "start": 1666,
      "value": "node11",
    },
    {
      "start": 1669,
      "value": "node12",
    },
    {
      "start": 1670,
      "value": "node11",
    },
    {
      "start": 1670,
      "value": "node12",
    },
    {
      "start": 1676,
      "value": "node11",
    },
    {
      "start": 1676,
      "value": "node11",
    },
    {
      "start": 1677,
      "value": "node15",
    },
    {
      "start": 1677,
      "value": "node23",
    },
    {
      "start": 1682,
      "value": "node7",
    },
    {
      "start": 1682,
      "value": "node23",
    },
    {
      "start": 1693,
      "value": "node18",
    },
    {
      "start": 1694,
      "value": "node18",
    },
    {
      "start": 1695,
      "value": "node19",
    },
    {
      "start": 1696,
      "value": "node23",
    },
    {
      "start": 1696,
      "value": "node19",
    },
    {
      "start": 1698,
      "value": "node19",
    },
    {
      "start": 1701,
      "value": "node19",
    },
    {
      "start": 1704,
      "value": "node30",
    },
    {
      "start": 1705,
      "value": "node19",
    },
    {
      "start": 1705,
      "value": "node30",
    },
    {
      "start": 1711,
      "value": "node19",
    },
    {
      "start": 1711,
      "value": "node19",
    },
    {
      "start": 1712,
      "value": "node23",
    },
    {
      "start": 1712,
      "value": "node30",
    },
    {
      "start": 1717,
      "value": "node7",
    },
    {
      "start": 1717,
      "value": "node30",
    },
    {
      "start": 1730,
      "value": "node26",
    },
    {
      "start": 1731,
      "value": "node30",
    },
    {
      "start": 1731,
      "value": "node26",
    },
    {
      "start": 1733,
      "value": "node26",
    },
    {
      "start": 1736,
      "value": "node26",
    },
    {
      "start": 1739,
      "value": "node39",
    },
    {
      "start": 1740,
      "value": "node26",
    },
    {
      "start": 1740,
      "value": "node39",
    },
    {
      "start": 1746,
      "value": "node26",
    },
    {
      "start": 1746,
      "value": "node26",
    },
    {
      "start": 1747,
      "value": "node30",
    },
    {
      "start": 1747,
      "value": "node39",
    },
    {
      "start": 1752,
      "value": "node7",
    },
    {
      "start": 1752,
      "value": "node39",
    },
    {
      "start": 1760,
      "value": "node33",
    },
    {
      "start": 1761,
      "value": "node33",
    },
    {
      "start": 1762,
      "value": "node33",
    },
    {
      "start": 1762,
      "value": "node39",
    },
    {
      "start": 1763,
      "value": "node34",
    },
    {
      "start": 1764,
      "value": "node34",
    },
    {
      "start": 1765,
      "value": "node35",
    },
    {
      "start": 1766,
      "value": "node39",
    },
    {
      "start": 1766,
      "value": "node35",
    },
    {
      "start": 1768,
      "value": "node35",
    },
    {
      "start": 1771,
      "value": "node35",
    },
    {
      "start": 1774,
      "value": "node36",
    },
    {
      "start": 1775,
      "value": "node35",
    },
    {
      "start": 1775,
      "value": "node36",
    },
    {
      "start": 1781,
      "value": "node35",
    },
    {
      "start": 1781,
      "value": "node35",
    },
    {
      "start": 1782,
      "value": "node39",
    },
    {
      "start": 1782,
      "value": "node47",
    },
    {
      "start": 1787,
      "value": "node7",
    },
    {
      "start": 1787,
      "value": "node47",
    },
    {
      "start": 1795,
      "value": "node42",
    },
    {
      "start": 1796,
      "value": "node47",
    },
    {
      "start": 1796,
      "value": "node42",
    },
    {
      "start": 1797,
      "value": "node42",
    },
    {
      "start": 1797,
      "value": "node42",
    },
    {
      "start": 1800,
      "value": "node43",
    },
    {
      "start": 1801,
      "value": "node47",
    },
    {
      "start": 1801,
      "value": "node43",
    },
    {
      "start": 1803,
      "value": "node43",
    },
    {
      "start": 1806,
      "value": "node43",
    },
    {
      "start": 1809,
      "value": "node44",
    },
    {
      "start": 1810,
      "value": "node43",
    },
    {
      "start": 1810,
      "value": "node44",
    },
    {
      "start": 1816,
      "value": "node43",
    },
    {
      "start": 1816,
      "value": "node43",
    },
    {
      "start": 1817,
      "value": "node47",
    },
    {
      "start": 1817,
      "value": "node55",
    },
    {
      "start": 1822,
      "value": "node7",
    },
    {
      "start": 1822,
      "value": "node55",
    },
    {
      "start": 1833,
      "value": "node50",
    },
    {
      "start": 1834,
      "value": "node50",
    },
    {
      "start": 1835,
      "value": "node51",
    },
    {
      "start": 1836,
      "value": "node55",
    },
    {
      "start": 1836,
      "value": "node51",
    },
    {
      "start": 1838,
      "value": "node51",
    },
    {
      "start": 1841,
      "value": "node51",
    },
    {
      "start": 1844,
      "value": "node62",
    },
    {
      "start": 1845,
      "value": "node51",
    },
    {
      "start": 1845,
      "value": "node62",
    },
    {
      "start": 1851,
      "value": "node51",
    },
    {
      "start": 1851,
      "value": "node51",
    },
    {
      "start": 1852,
      "value": "node55",
    },
    {
      "start": 1852,
      "value": "node62",
    },
    {
      "start": 1857,
      "value": "node7",
    },
    {
      "start": 1857,
      "value": "node62",
    },
    {
      "start": 1870,
      "value": "node58",
    },
    {
      "start": 1871,
      "value": "node62",
    },
    {
      "start": 1871,
      "value": "node58",
    },
    {
      "start": 1873,
      "value": "node58",
    },
    {
      "start": 1876,
      "value": "node58",
    },
    {
      "start": 1879,
      "value": "node65",
    },
    {
      "start": 1880,
      "value": "node58",
    },
    {
      "start": 1880,
      "value": "node65",
    },
    {
      "start": 1886,
      "value": "node58",
    },
    {
      "start": 1886,
      "value": "node58",
    },
    {
      "start": 1887,
      "value": "node62",
    },
    {
      "start": 1887,
      "value": "node7",
    },
    {
      "start": 1909,
      "value": "Not found",
    },
    {
      "start": 1911,
      "value": "node7",
    },
    {
      "start": 1911,
      "value": "node7",
    },
  ],
}
`;

exports[`C: sample.c!MoreSwitch: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1928,
      "value": "node1",
    },
    {
      "start": 2030,
      "value": "node1",
    },
    {
      "start": 2042,
      "value": "node1",
    },
    {
      "start": 2051,
      "value": "node1",
    },
    {
      "start": 2051,
      "value": "node1",
    },
    {
      "start": 2058,
      "value": "node2",
    },
    {
      "start": 2059,
      "value": "node1",
    },
    {
      "start": 2059,
      "value": "node2",
    },
    {
      "start": 2065,
      "value": "node1",
    },
    {
      "start": 2065,
      "value": "node3",
    },
    {
      "start": 2074,
      "value": "node1",
    },
    {
      "start": 2074,
      "value": "node3",
    },
    {
      "start": 2081,
      "value": "node4",
    },
    {
      "start": 2082,
      "value": "node3",
    },
    {
      "start": 2082,
      "value": "node4",
    },
    {
      "start": 2088,
      "value": "node3",
    },
    {
      "start": 2088,
      "value": "node5",
    },
    {
      "start": 2097,
      "value": "node1",
    },
    {
      "start": 2097,
      "value": "node5",
    },
    {
      "start": 2104,
      "value": "node6",
    },
    {
      "start": 2105,
      "value": "node5",
    },
    {
      "start": 2105,
      "value": "node6",
    },
    {
      "start": 2109,
      "value": "node5",
    },
    {
      "start": 2109,
      "value": "node7",
    },
    {
      "start": 2118,
      "value": "node1",
    },
    {
      "start": 2118,
      "value": "node7",
    },
    {
      "start": 2125,
      "value": "node8",
    },
    {
      "start": 2126,
      "value": "node7",
    },
    {
      "start": 2126,
      "value": "node8",
    },
    {
      "start": 2132,
      "value": "node7",
    },
    {
      "start": 2132,
      "value": "node10",
    },
    {
      "start": 2141,
      "value": "node1",
    },
    {
      "start": 2141,
      "value": "node10",
    },
    {
      "start": 2149,
      "value": "node10",
    },
    {
      "start": 2150,
      "value": "node10",
    },
    {
      "start": 2150,
      "value": "node10",
    },
    {
      "start": 2154,
      "value": "node10",
    },
    {
      "start": 2154,
      "value": "node10",
    },
    {
      "start": 2160,
      "value": "node1",
    },
    {
      "start": 2160,
      "value": "node1",
    },
    {
      "start": 2162,
      "value": "node1",
    },
    {
      "start": 2162,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!trivial: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 15,
      "value": "node2",
    },
    {
      "start": 32,
      "value": "node2",
    },
  ],
}
`;

exports[`C++: sample.cpp!simpleIf: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 49,
      "value": "node1",
    },
    {
      "start": 71,
      "value": "node1",
    },
    {
      "start": 74,
      "value": "node1",
    },
    {
      "start": 77,
      "value": "node2",
    },
    {
      "start": 78,
      "value": "node1",
    },
    {
      "start": 78,
      "value": "node2",
    },
    {
      "start": 85,
      "value": "node1",
    },
    {
      "start": 85,
      "value": "node1",
    },
    {
      "start": 87,
      "value": "node1",
    },
    {
      "start": 87,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!ifElse: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 114,
      "value": "node1",
    },
    {
      "start": 134,
      "value": "node1",
    },
    {
      "start": 137,
      "value": "node1",
    },
    {
      "start": 140,
      "value": "node2",
    },
    {
      "start": 141,
      "value": "node1",
    },
    {
      "start": 141,
      "value": "node2",
    },
    {
      "start": 148,
      "value": "node3",
    },
    {
      "start": 154,
      "value": "node1",
    },
    {
      "start": 154,
      "value": "node3",
    },
    {
      "start": 157,
      "value": "node3",
    },
    {
      "start": 160,
      "value": "node4",
    },
    {
      "start": 161,
      "value": "node3",
    },
    {
      "start": 161,
      "value": "node4",
    },
    {
      "start": 168,
      "value": "node5",
    },
    {
      "start": 169,
      "value": "node3",
    },
    {
      "start": 169,
      "value": "node5",
    },
    {
      "start": 174,
      "value": "node5",
    },
    {
      "start": 181,
      "value": "node5",
    },
    {
      "start": 181,
      "value": "node3",
    },
    {
      "start": 181,
      "value": "node1",
    },
    {
      "start": 181,
      "value": "node1",
    },
    {
      "start": 183,
      "value": "node1",
    },
    {
      "start": 183,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!forever: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 210,
      "value": "node2",
    },
    {
      "start": 231,
      "value": "node2",
    },
    {
      "start": 239,
      "value": "node4",
    },
    {
      "start": 240,
      "value": "node2",
    },
    {
      "start": 240,
      "value": "node4",
    },
    {
      "start": 247,
      "value": "node2",
    },
    {
      "start": 247,
      "value": "node2",
    },
    {
      "start": 249,
      "value": "node2",
    },
    {
      "start": 249,
      "value": "node2",
    },
  ],
}
`;

exports[`C++: sample.cpp!forever2: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 276,
      "value": "node1",
    },
    {
      "start": 298,
      "value": "node1",
    },
    {
      "start": 303,
      "value": "node1",
    },
    {
      "start": 313,
      "value": "node1",
    },
    {
      "start": 313,
      "value": "node1",
    },
    {
      "start": 314,
      "value": "node1",
    },
    {
      "start": 315,
      "value": "node2",
    },
    {
      "start": 318,
      "value": "node2",
    },
    {
      "start": 319,
      "value": "node2",
    },
    {
      "start": 320,
      "value": "node1",
    },
    {
      "start": 320,
      "value": "node2",
    },
    {
      "start": 327,
      "value": "node1",
    },
    {
      "start": 327,
      "value": "node1",
    },
    {
      "start": 329,
      "value": "node1",
    },
    {
      "start": 329,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!forLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 388,
      "value": "node1",
    },
    {
      "start": 409,
      "value": "node1",
    },
    {
      "start": 414,
      "value": "node1",
    },
    {
      "start": 424,
      "value": "node1",
    },
    {
      "start": 424,
      "value": "node1",
    },
    {
      "start": 425,
      "value": "node2",
    },
    {
      "start": 431,
      "value": "node2",
    },
    {
      "start": 432,
      "value": "node2",
    },
    {
      "start": 432,
      "value": "node1",
    },
    {
      "start": 433,
      "value": "node3",
    },
    {
      "start": 436,
      "value": "node3",
    },
    {
      "start": 437,
      "value": "node3",
    },
    {
      "start": 438,
      "value": "node1",
    },
    {
      "start": 438,
      "value": "node3",
    },
    {
      "start": 481,
      "value": "node1",
    },
    {
      "start": 481,
      "value": "node1",
    },
    {
      "start": 483,
      "value": "node1",
    },
    {
      "start": 483,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!whileLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 510,
      "value": "node0",
    },
    {
      "start": 533,
      "value": "node1",
    },
    {
      "start": 539,
      "value": "node1",
    },
    {
      "start": 544,
      "value": "node1",
    },
    {
      "start": 544,
      "value": "node1",
    },
    {
      "start": 545,
      "value": "node2",
    },
    {
      "start": 552,
      "value": "node2",
    },
    {
      "start": 552,
      "value": "node1",
    },
    {
      "start": 552,
      "value": "node1",
    },
    {
      "start": 554,
      "value": "node0",
    },
    {
      "start": 554,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: sample.cpp!doWhile: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 581,
      "value": "node0",
    },
    {
      "start": 602,
      "value": "node1",
    },
    {
      "start": 605,
      "value": "node1",
    },
    {
      "start": 612,
      "value": "node1",
    },
    {
      "start": 612,
      "value": "node1",
    },
    {
      "start": 619,
      "value": "node1",
    },
    {
      "start": 624,
      "value": "node1",
    },
    {
      "start": 624,
      "value": "node1",
    },
    {
      "start": 625,
      "value": "node1",
    },
    {
      "start": 627,
      "value": "node0",
    },
    {
      "start": 627,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: sample.cpp!gotoA: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 654,
      "value": "node0",
    },
    {
      "start": 669,
      "value": "node2",
    },
    {
      "start": 680,
      "value": "node2",
    },
    {
      "start": 683,
      "value": "node2",
    },
    {
      "start": 686,
      "value": "node3",
    },
    {
      "start": 687,
      "value": "node2",
    },
    {
      "start": 687,
      "value": "node3",
    },
    {
      "start": 697,
      "value": "node3",
    },
    {
      "start": 708,
      "value": "node3",
    },
    {
      "start": 714,
      "value": "node2",
    },
    {
      "start": 714,
      "value": "node2",
    },
    {
      "start": 714,
      "value": "node2",
    },
    {
      "start": 716,
      "value": "node0",
    },
    {
      "start": 716,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: sample.cpp!switch_1: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 765,
      "value": "node1",
    },
    {
      "start": 787,
      "value": "node1",
    },
    {
      "start": 799,
      "value": "node1",
    },
    {
      "start": 804,
      "value": "node1",
    },
    {
      "start": 804,
      "value": "node1",
    },
    {
      "start": 811,
      "value": "Not found",
    },
    {
      "start": 820,
      "value": "node1",
    },
    {
      "start": 838,
      "value": "node2",
    },
    {
      "start": 852,
      "value": "node1",
    },
    {
      "start": 852,
      "value": "node3",
    },
    {
      "start": 857,
      "value": "node1",
    },
    {
      "start": 857,
      "value": "node3",
    },
    {
      "start": 864,
      "value": "node5",
    },
    {
      "start": 869,
      "value": "node1",
    },
    {
      "start": 869,
      "value": "node5",
    },
    {
      "start": 876,
      "value": "Not found",
    },
    {
      "start": 885,
      "value": "node5",
    },
    {
      "start": 903,
      "value": "node6",
    },
    {
      "start": 917,
      "value": "node5",
    },
    {
      "start": 917,
      "value": "node5",
    },
    {
      "start": 923,
      "value": "node1",
    },
    {
      "start": 923,
      "value": "node1",
    },
    {
      "start": 925,
      "value": "node1",
    },
    {
      "start": 925,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!switch_2: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 952,
      "value": "node1",
    },
    {
      "start": 974,
      "value": "node1",
    },
    {
      "start": 986,
      "value": "node1",
    },
    {
      "start": 991,
      "value": "node1",
    },
    {
      "start": 991,
      "value": "node1",
    },
    {
      "start": 998,
      "value": "node2",
    },
    {
      "start": 1007,
      "value": "node2",
    },
    {
      "start": 1013,
      "value": "node1",
    },
    {
      "start": 1013,
      "value": "node3",
    },
    {
      "start": 1018,
      "value": "node1",
    },
    {
      "start": 1018,
      "value": "node3",
    },
    {
      "start": 1025,
      "value": "node5",
    },
    {
      "start": 1030,
      "value": "node1",
    },
    {
      "start": 1030,
      "value": "node5",
    },
    {
      "start": 1037,
      "value": "node5",
    },
    {
      "start": 1043,
      "value": "node1",
    },
    {
      "start": 1043,
      "value": "node1",
    },
    {
      "start": 1045,
      "value": "node1",
    },
    {
      "start": 1045,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!ManyIfs: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1073,
      "value": "node1",
    },
    {
      "start": 1094,
      "value": "node1",
    },
    {
      "start": 1097,
      "value": "node1",
    },
    {
      "start": 1100,
      "value": "node2",
    },
    {
      "start": 1101,
      "value": "node1",
    },
    {
      "start": 1101,
      "value": "node2",
    },
    {
      "start": 1108,
      "value": "node1",
    },
    {
      "start": 1108,
      "value": "node5",
    },
    {
      "start": 1114,
      "value": "node1",
    },
    {
      "start": 1114,
      "value": "node5",
    },
    {
      "start": 1117,
      "value": "node5",
    },
    {
      "start": 1120,
      "value": "node6",
    },
    {
      "start": 1121,
      "value": "node5",
    },
    {
      "start": 1121,
      "value": "node6",
    },
    {
      "start": 1128,
      "value": "node7",
    },
    {
      "start": 1129,
      "value": "node5",
    },
    {
      "start": 1129,
      "value": "node7",
    },
    {
      "start": 1134,
      "value": "node7",
    },
    {
      "start": 1141,
      "value": "node7",
    },
    {
      "start": 1141,
      "value": "node5",
    },
    {
      "start": 1141,
      "value": "node10",
    },
    {
      "start": 1147,
      "value": "node1",
    },
    {
      "start": 1147,
      "value": "node10",
    },
    {
      "start": 1150,
      "value": "node10",
    },
    {
      "start": 1153,
      "value": "node11",
    },
    {
      "start": 1154,
      "value": "node10",
    },
    {
      "start": 1154,
      "value": "node11",
    },
    {
      "start": 1161,
      "value": "node12",
    },
    {
      "start": 1167,
      "value": "node10",
    },
    {
      "start": 1167,
      "value": "node12",
    },
    {
      "start": 1170,
      "value": "node12",
    },
    {
      "start": 1173,
      "value": "node13",
    },
    {
      "start": 1174,
      "value": "node12",
    },
    {
      "start": 1174,
      "value": "node13",
    },
    {
      "start": 1181,
      "value": "node12",
    },
    {
      "start": 1181,
      "value": "node10",
    },
    {
      "start": 1181,
      "value": "node16",
    },
    {
      "start": 1187,
      "value": "node1",
    },
    {
      "start": 1187,
      "value": "node16",
    },
    {
      "start": 1190,
      "value": "node16",
    },
    {
      "start": 1193,
      "value": "node17",
    },
    {
      "start": 1194,
      "value": "node16",
    },
    {
      "start": 1194,
      "value": "node17",
    },
    {
      "start": 1201,
      "value": "node18",
    },
    {
      "start": 1207,
      "value": "node16",
    },
    {
      "start": 1207,
      "value": "node18",
    },
    {
      "start": 1210,
      "value": "node18",
    },
    {
      "start": 1213,
      "value": "node19",
    },
    {
      "start": 1214,
      "value": "node18",
    },
    {
      "start": 1214,
      "value": "node19",
    },
    {
      "start": 1222,
      "value": "node20",
    },
    {
      "start": 1223,
      "value": "node18",
    },
    {
      "start": 1223,
      "value": "node20",
    },
    {
      "start": 1228,
      "value": "node20",
    },
    {
      "start": 1235,
      "value": "node20",
    },
    {
      "start": 1235,
      "value": "node18",
    },
    {
      "start": 1235,
      "value": "node16",
    },
    {
      "start": 1235,
      "value": "node16",
    },
    {
      "start": 1237,
      "value": "node1",
    },
    {
      "start": 1237,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!IfWithoutBraces: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node5",
    },
    {
      "start": 1254,
      "value": "node5",
    },
    {
      "start": 1428,
      "value": "node5",
    },
    {
      "start": 1436,
      "value": "node1",
    },
    {
      "start": 1437,
      "value": "node5",
    },
    {
      "start": 1437,
      "value": "node1",
    },
    {
      "start": 1447,
      "value": "node1",
    },
    {
      "start": 1450,
      "value": "node1",
    },
    {
      "start": 1453,
      "value": "node1",
    },
    {
      "start": 1453,
      "value": "node12",
    },
    {
      "start": 1466,
      "value": "node12",
    },
    {
      "start": 1472,
      "value": "node1",
    },
    {
      "start": 1472,
      "value": "node1",
    },
    {
      "start": 1478,
      "value": "node5",
    },
    {
      "start": 1478,
      "value": "node12",
    },
    {
      "start": 1484,
      "value": "node5",
    },
    {
      "start": 1484,
      "value": "node12",
    },
    {
      "start": 1492,
      "value": "node8",
    },
    {
      "start": 1493,
      "value": "node12",
    },
    {
      "start": 1493,
      "value": "node8",
    },
    {
      "start": 1503,
      "value": "node8",
    },
    {
      "start": 1506,
      "value": "node8",
    },
    {
      "start": 1509,
      "value": "node15",
    },
    {
      "start": 1510,
      "value": "node8",
    },
    {
      "start": 1510,
      "value": "node15",
    },
    {
      "start": 1524,
      "value": "node15",
    },
    {
      "start": 1530,
      "value": "node15",
    },
    {
      "start": 1540,
      "value": "node8",
    },
    {
      "start": 1540,
      "value": "node8",
    },
    {
      "start": 1546,
      "value": "node12",
    },
    {
      "start": 1546,
      "value": "node12",
    },
    {
      "start": 1548,
      "value": "node5",
    },
    {
      "start": 1548,
      "value": "node5",
    },
  ],
}
`;

exports[`C++: sample.cpp!ForLoops: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node7",
    },
    {
      "start": 1566,
      "value": "node7",
    },
    {
      "start": 1612,
      "value": "node7",
    },
    {
      "start": 1620,
      "value": "node1",
    },
    {
      "start": 1621,
      "value": "node1",
    },
    {
      "start": 1622,
      "value": "node1",
    },
    {
      "start": 1622,
      "value": "node7",
    },
    {
      "start": 1623,
      "value": "node2",
    },
    {
      "start": 1624,
      "value": "node2",
    },
    {
      "start": 1625,
      "value": "node3",
    },
    {
      "start": 1626,
      "value": "node7",
    },
    {
      "start": 1626,
      "value": "node3",
    },
    {
      "start": 1628,
      "value": "node3",
    },
    {
      "start": 1631,
      "value": "node3",
    },
    {
      "start": 1634,
      "value": "node4",
    },
    {
      "start": 1635,
      "value": "node3",
    },
    {
      "start": 1635,
      "value": "node4",
    },
    {
      "start": 1641,
      "value": "node3",
    },
    {
      "start": 1641,
      "value": "node3",
    },
    {
      "start": 1642,
      "value": "node7",
    },
    {
      "start": 1642,
      "value": "node15",
    },
    {
      "start": 1647,
      "value": "node7",
    },
    {
      "start": 1647,
      "value": "node15",
    },
    {
      "start": 1655,
      "value": "node10",
    },
    {
      "start": 1656,
      "value": "node15",
    },
    {
      "start": 1656,
      "value": "node10",
    },
    {
      "start": 1657,
      "value": "node10",
    },
    {
      "start": 1657,
      "value": "node10",
    },
    {
      "start": 1660,
      "value": "node11",
    },
    {
      "start": 1661,
      "value": "node15",
    },
    {
      "start": 1661,
      "value": "node11",
    },
    {
      "start": 1663,
      "value": "node11",
    },
    {
      "start": 1666,
      "value": "node11",
    },
    {
      "start": 1669,
      "value": "node12",
    },
    {
      "start": 1670,
      "value": "node11",
    },
    {
      "start": 1670,
      "value": "node12",
    },
    {
      "start": 1676,
      "value": "node11",
    },
    {
      "start": 1676,
      "value": "node11",
    },
    {
      "start": 1677,
      "value": "node15",
    },
    {
      "start": 1677,
      "value": "node23",
    },
    {
      "start": 1682,
      "value": "node7",
    },
    {
      "start": 1682,
      "value": "node23",
    },
    {
      "start": 1693,
      "value": "node18",
    },
    {
      "start": 1694,
      "value": "node18",
    },
    {
      "start": 1695,
      "value": "node19",
    },
    {
      "start": 1696,
      "value": "node23",
    },
    {
      "start": 1696,
      "value": "node19",
    },
    {
      "start": 1698,
      "value": "node19",
    },
    {
      "start": 1701,
      "value": "node19",
    },
    {
      "start": 1704,
      "value": "node30",
    },
    {
      "start": 1705,
      "value": "node19",
    },
    {
      "start": 1705,
      "value": "node30",
    },
    {
      "start": 1711,
      "value": "node19",
    },
    {
      "start": 1711,
      "value": "node19",
    },
    {
      "start": 1712,
      "value": "node23",
    },
    {
      "start": 1712,
      "value": "node30",
    },
    {
      "start": 1717,
      "value": "node7",
    },
    {
      "start": 1717,
      "value": "node30",
    },
    {
      "start": 1730,
      "value": "node26",
    },
    {
      "start": 1731,
      "value": "node30",
    },
    {
      "start": 1731,
      "value": "node26",
    },
    {
      "start": 1733,
      "value": "node26",
    },
    {
      "start": 1736,
      "value": "node26",
    },
    {
      "start": 1739,
      "value": "node39",
    },
    {
      "start": 1740,
      "value": "node26",
    },
    {
      "start": 1740,
      "value": "node39",
    },
    {
      "start": 1746,
      "value": "node26",
    },
    {
      "start": 1746,
      "value": "node26",
    },
    {
      "start": 1747,
      "value": "node30",
    },
    {
      "start": 1747,
      "value": "node39",
    },
    {
      "start": 1752,
      "value": "node7",
    },
    {
      "start": 1752,
      "value": "node39",
    },
    {
      "start": 1760,
      "value": "node33",
    },
    {
      "start": 1761,
      "value": "node33",
    },
    {
      "start": 1762,
      "value": "node33",
    },
    {
      "start": 1762,
      "value": "node39",
    },
    {
      "start": 1763,
      "value": "node34",
    },
    {
      "start": 1764,
      "value": "node34",
    },
    {
      "start": 1765,
      "value": "node35",
    },
    {
      "start": 1766,
      "value": "node39",
    },
    {
      "start": 1766,
      "value": "node35",
    },
    {
      "start": 1768,
      "value": "node35",
    },
    {
      "start": 1771,
      "value": "node35",
    },
    {
      "start": 1774,
      "value": "node36",
    },
    {
      "start": 1775,
      "value": "node35",
    },
    {
      "start": 1775,
      "value": "node36",
    },
    {
      "start": 1781,
      "value": "node35",
    },
    {
      "start": 1781,
      "value": "node35",
    },
    {
      "start": 1782,
      "value": "node39",
    },
    {
      "start": 1782,
      "value": "node47",
    },
    {
      "start": 1787,
      "value": "node7",
    },
    {
      "start": 1787,
      "value": "node47",
    },
    {
      "start": 1795,
      "value": "node42",
    },
    {
      "start": 1796,
      "value": "node47",
    },
    {
      "start": 1796,
      "value": "node42",
    },
    {
      "start": 1797,
      "value": "node42",
    },
    {
      "start": 1797,
      "value": "node42",
    },
    {
      "start": 1800,
      "value": "node43",
    },
    {
      "start": 1801,
      "value": "node47",
    },
    {
      "start": 1801,
      "value": "node43",
    },
    {
      "start": 1803,
      "value": "node43",
    },
    {
      "start": 1806,
      "value": "node43",
    },
    {
      "start": 1809,
      "value": "node44",
    },
    {
      "start": 1810,
      "value": "node43",
    },
    {
      "start": 1810,
      "value": "node44",
    },
    {
      "start": 1816,
      "value": "node43",
    },
    {
      "start": 1816,
      "value": "node43",
    },
    {
      "start": 1817,
      "value": "node47",
    },
    {
      "start": 1817,
      "value": "node55",
    },
    {
      "start": 1822,
      "value": "node7",
    },
    {
      "start": 1822,
      "value": "node55",
    },
    {
      "start": 1833,
      "value": "node50",
    },
    {
      "start": 1834,
      "value": "node50",
    },
    {
      "start": 1835,
      "value": "node51",
    },
    {
      "start": 1836,
      "value": "node55",
    },
    {
      "start": 1836,
      "value": "node51",
    },
    {
      "start": 1838,
      "value": "node51",
    },
    {
      "start": 1841,
      "value": "node51",
    },
    {
      "start": 1844,
      "value": "node62",
    },
    {
      "start": 1845,
      "value": "node51",
    },
    {
      "start": 1845,
      "value": "node62",
    },
    {
      "start": 1851,
      "value": "node51",
    },
    {
      "start": 1851,
      "value": "node51",
    },
    {
      "start": 1852,
      "value": "node55",
    },
    {
      "start": 1852,
      "value": "node62",
    },
    {
      "start": 1857,
      "value": "node7",
    },
    {
      "start": 1857,
      "value": "node62",
    },
    {
      "start": 1870,
      "value": "node58",
    },
    {
      "start": 1871,
      "value": "node62",
    },
    {
      "start": 1871,
      "value": "node58",
    },
    {
      "start": 1873,
      "value": "node58",
    },
    {
      "start": 1876,
      "value": "node58",
    },
    {
      "start": 1879,
      "value": "node65",
    },
    {
      "start": 1880,
      "value": "node58",
    },
    {
      "start": 1880,
      "value": "node65",
    },
    {
      "start": 1886,
      "value": "node58",
    },
    {
      "start": 1886,
      "value": "node58",
    },
    {
      "start": 1887,
      "value": "node62",
    },
    {
      "start": 1887,
      "value": "node7",
    },
    {
      "start": 1909,
      "value": "Not found",
    },
    {
      "start": 1911,
      "value": "node7",
    },
    {
      "start": 1911,
      "value": "node7",
    },
  ],
}
`;

exports[`C++: sample.cpp!MoreSwitch: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1928,
      "value": "node1",
    },
    {
      "start": 2030,
      "value": "node1",
    },
    {
      "start": 2042,
      "value": "node1",
    },
    {
      "start": 2051,
      "value": "node1",
    },
    {
      "start": 2051,
      "value": "node1",
    },
    {
      "start": 2058,
      "value": "node2",
    },
    {
      "start": 2059,
      "value": "node1",
    },
    {
      "start": 2059,
      "value": "node2",
    },
    {
      "start": 2065,
      "value": "node1",
    },
    {
      "start": 2065,
      "value": "node3",
    },
    {
      "start": 2074,
      "value": "node1",
    },
    {
      "start": 2074,
      "value": "node3",
    },
    {
      "start": 2081,
      "value": "node4",
    },
    {
      "start": 2082,
      "value": "node3",
    },
    {
      "start": 2082,
      "value": "node4",
    },
    {
      "start": 2088,
      "value": "node3",
    },
    {
      "start": 2088,
      "value": "node5",
    },
    {
      "start": 2097,
      "value": "node1",
    },
    {
      "start": 2097,
      "value": "node5",
    },
    {
      "start": 2104,
      "value": "node6",
    },
    {
      "start": 2105,
      "value": "node5",
    },
    {
      "start": 2105,
      "value": "node6",
    },
    {
      "start": 2109,
      "value": "node5",
    },
    {
      "start": 2109,
      "value": "node7",
    },
    {
      "start": 2118,
      "value": "node1",
    },
    {
      "start": 2118,
      "value": "node7",
    },
    {
      "start": 2125,
      "value": "node8",
    },
    {
      "start": 2126,
      "value": "node7",
    },
    {
      "start": 2126,
      "value": "node8",
    },
    {
      "start": 2132,
      "value": "node7",
    },
    {
      "start": 2132,
      "value": "node10",
    },
    {
      "start": 2141,
      "value": "node1",
    },
    {
      "start": 2141,
      "value": "node10",
    },
    {
      "start": 2149,
      "value": "node10",
    },
    {
      "start": 2150,
      "value": "node10",
    },
    {
      "start": 2150,
      "value": "node10",
    },
    {
      "start": 2154,
      "value": "node10",
    },
    {
      "start": 2154,
      "value": "node10",
    },
    {
      "start": 2160,
      "value": "node1",
    },
    {
      "start": 2160,
      "value": "node1",
    },
    {
      "start": 2162,
      "value": "node1",
    },
    {
      "start": 2162,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!Exception: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2189,
      "value": "node0",
    },
    {
      "start": 2212,
      "value": "node2",
    },
    {
      "start": 2216,
      "value": "node2",
    },
    {
      "start": 2223,
      "value": "node2",
    },
    {
      "start": 2228,
      "value": "node3",
    },
    {
      "start": 2240,
      "value": "node3",
    },
    {
      "start": 2247,
      "value": "node3",
    },
    {
      "start": 2247,
      "value": "node2",
    },
    {
      "start": 2247,
      "value": "node2",
    },
    {
      "start": 2249,
      "value": "node0",
    },
    {
      "start": 2249,
      "value": "node0",
    },
  ],
}
`;

exports[`C++: sample.cpp!Throw: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 2266,
      "value": "node1",
    },
    {
      "start": 2285,
      "value": "node1",
    },
    {
      "start": 2288,
      "value": "node1",
    },
    {
      "start": 2291,
      "value": "node2",
    },
    {
      "start": 2292,
      "value": "node1",
    },
    {
      "start": 2292,
      "value": "node2",
    },
    {
      "start": 2302,
      "value": "node2",
    },
    {
      "start": 2312,
      "value": "node2",
    },
    {
      "start": 2318,
      "value": "node1",
    },
    {
      "start": 2318,
      "value": "node1",
    },
    {
      "start": 2320,
      "value": "node1",
    },
    {
      "start": 2320,
      "value": "node1",
    },
  ],
}
`;

exports[`C++: sample.cpp!ForRangeLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2337,
      "value": "node0",
    },
    {
      "start": 2363,
      "value": "node2",
    },
    {
      "start": 2384,
      "value": "node1",
    },
    {
      "start": 2385,
      "value": "node2",
    },
    {
      "start": 2385,
      "value": "node1",
    },
    {
      "start": 2392,
      "value": "node2",
    },
    {
      "start": 2392,
      "value": "node2",
    },
    {
      "start": 2394,
      "value": "node0",
    },
    {
      "start": 2394,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: sample.go!trivial: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 43,
      "value": "node2",
    },
    {
      "start": 61,
      "value": "node2",
    },
  ],
}
`;

exports[`Go: sample.go!ifThen: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 78,
      "value": "node1",
    },
    {
      "start": 95,
      "value": "node1",
    },
    {
      "start": 100,
      "value": "node3",
    },
    {
      "start": 105,
      "value": "node3",
    },
    {
      "start": 105,
      "value": "node1",
    },
    {
      "start": 105,
      "value": "node1",
    },
    {
      "start": 107,
      "value": "node1",
    },
    {
      "start": 107,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: sample.go!ManyIfStatements: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 135,
      "value": "node1",
    },
    {
      "start": 162,
      "value": "node1",
    },
    {
      "start": 167,
      "value": "node3",
    },
    {
      "start": 171,
      "value": "node3",
    },
    {
      "start": 171,
      "value": "node1",
    },
    {
      "start": 171,
      "value": "node4",
    },
    {
      "start": 177,
      "value": "node4",
    },
    {
      "start": 181,
      "value": "node1",
    },
    {
      "start": 181,
      "value": "node5",
    },
    {
      "start": 184,
      "value": "node1",
    },
    {
      "start": 184,
      "value": "node5",
    },
    {
      "start": 189,
      "value": "node7",
    },
    {
      "start": 193,
      "value": "node7",
    },
    {
      "start": 193,
      "value": "node5",
    },
    {
      "start": 193,
      "value": "node8",
    },
    {
      "start": 199,
      "value": "node5",
    },
    {
      "start": 199,
      "value": "node8",
    },
    {
      "start": 204,
      "value": "node9",
    },
    {
      "start": 208,
      "value": "node9",
    },
    {
      "start": 208,
      "value": "node8",
    },
    {
      "start": 208,
      "value": "node5",
    },
    {
      "start": 208,
      "value": "node10",
    },
    {
      "start": 211,
      "value": "node1",
    },
    {
      "start": 211,
      "value": "node10",
    },
    {
      "start": 216,
      "value": "node12",
    },
    {
      "start": 220,
      "value": "node12",
    },
    {
      "start": 220,
      "value": "node10",
    },
    {
      "start": 220,
      "value": "node13",
    },
    {
      "start": 226,
      "value": "node10",
    },
    {
      "start": 226,
      "value": "node13",
    },
    {
      "start": 231,
      "value": "node14",
    },
    {
      "start": 235,
      "value": "node14",
    },
    {
      "start": 235,
      "value": "node13",
    },
    {
      "start": 235,
      "value": "node15",
    },
    {
      "start": 241,
      "value": "node15",
    },
    {
      "start": 245,
      "value": "node13",
    },
    {
      "start": 245,
      "value": "node10",
    },
    {
      "start": 245,
      "value": "node10",
    },
    {
      "start": 247,
      "value": "node1",
    },
    {
      "start": 247,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: sample.go!Switch: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 264,
      "value": "node1",
    },
    {
      "start": 281,
      "value": "node1",
    },
    {
      "start": 291,
      "value": "node1",
    },
    {
      "start": 293,
      "value": "node1",
    },
    {
      "start": 293,
      "value": "node1",
    },
    {
      "start": 300,
      "value": "node3",
    },
    {
      "start": 302,
      "value": "node1",
    },
    {
      "start": 302,
      "value": "node3",
    },
    {
      "start": 309,
      "value": "node5",
    },
    {
      "start": 311,
      "value": "node1",
    },
    {
      "start": 311,
      "value": "node5",
    },
    {
      "start": 318,
      "value": "node7",
    },
    {
      "start": 320,
      "value": "node1",
    },
    {
      "start": 320,
      "value": "node7",
    },
    {
      "start": 327,
      "value": "node7",
    },
    {
      "start": 330,
      "value": "node1",
    },
    {
      "start": 330,
      "value": "node1",
    },
    {
      "start": 332,
      "value": "node1",
    },
    {
      "start": 332,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: sample.go!switchAndLabelsAndGoto: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 350,
      "value": "node1",
    },
    {
      "start": 383,
      "value": "node1",
    },
    {
      "start": 393,
      "value": "node1",
    },
    {
      "start": 395,
      "value": "node1",
    },
    {
      "start": 395,
      "value": "node1",
    },
    {
      "start": 402,
      "value": "node3",
    },
    {
      "start": 404,
      "value": "node1",
    },
    {
      "start": 404,
      "value": "node3",
    },
    {
      "start": 411,
      "value": "node13",
    },
    {
      "start": 414,
      "value": "node3",
    },
    {
      "start": 414,
      "value": "node13",
    },
    {
      "start": 424,
      "value": "node3",
    },
    {
      "start": 425,
      "value": "node5",
    },
    {
      "start": 426,
      "value": "node1",
    },
    {
      "start": 426,
      "value": "node5",
    },
    {
      "start": 433,
      "value": "node7",
    },
    {
      "start": 435,
      "value": "node1",
    },
    {
      "start": 435,
      "value": "node7",
    },
    {
      "start": 442,
      "value": "node7",
    },
    {
      "start": 445,
      "value": "node1",
    },
    {
      "start": 445,
      "value": "node11",
    },
    {
      "start": 447,
      "value": "node1",
    },
    {
      "start": 447,
      "value": "node11",
    },
    {
      "start": 453,
      "value": "node13",
    },
    {
      "start": 455,
      "value": "node1",
    },
    {
      "start": 455,
      "value": "node13",
    },
    {
      "start": 463,
      "value": "node13",
    },
    {
      "start": 468,
      "value": "node15",
    },
    {
      "start": 472,
      "value": "node15",
    },
    {
      "start": 475,
      "value": "node15",
    },
    {
      "start": 478,
      "value": "node15",
    },
    {
      "start": 478,
      "value": "node16",
    },
    {
      "start": 484,
      "value": "node13",
    },
    {
      "start": 484,
      "value": "node16",
    },
    {
      "start": 488,
      "value": "node16",
    },
    {
      "start": 491,
      "value": "node16",
    },
    {
      "start": 494,
      "value": "node13",
    },
    {
      "start": 494,
      "value": "node13",
    },
    {
      "start": 494,
      "value": "node13",
    },
    {
      "start": 496,
      "value": "node1",
    },
    {
      "start": 496,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: sample.go!trivialReachability: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 539,
      "value": "node2",
    },
    {
      "start": 589,
      "value": "Not found",
    },
    {
      "start": 591,
      "value": "node2",
    },
    {
      "start": 591,
      "value": "node2",
    },
  ],
}
`;

exports[`Go: sample.go!hasFallthrough: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 624,
      "value": "node1",
    },
    {
      "start": 649,
      "value": "node1",
    },
    {
      "start": 659,
      "value": "node1",
    },
    {
      "start": 661,
      "value": "node1",
    },
    {
      "start": 661,
      "value": "node1",
    },
    {
      "start": 668,
      "value": "Not found",
    },
    {
      "start": 671,
      "value": "node1",
    },
    {
      "start": 683,
      "value": "node2",
    },
    {
      "start": 694,
      "value": "node1",
    },
    {
      "start": 695,
      "value": "node3",
    },
    {
      "start": 696,
      "value": "node1",
    },
    {
      "start": 696,
      "value": "node3",
    },
    {
      "start": 703,
      "value": "Not found",
    },
    {
      "start": 706,
      "value": "node3",
    },
    {
      "start": 718,
      "value": "node4",
    },
    {
      "start": 731,
      "value": "node3",
    },
    {
      "start": 732,
      "value": "node3",
    },
    {
      "start": 734,
      "value": "node1",
    },
    {
      "start": 734,
      "value": "node1",
    },
    {
      "start": 736,
      "value": "node1",
    },
    {
      "start": 736,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: sample.go!forever: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 753,
      "value": "node0",
    },
    {
      "start": 775,
      "value": "node1",
    },
    {
      "start": 779,
      "value": "Not found",
    },
    {
      "start": 781,
      "value": "node0",
    },
    {
      "start": 781,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: sample.go!forCond: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 798,
      "value": "node0",
    },
    {
      "start": 816,
      "value": "node2",
    },
    {
      "start": 827,
      "value": "node1",
    },
    {
      "start": 828,
      "value": "node1",
    },
    {
      "start": 827,
      "value": "node1",
    },
    {
      "start": 831,
      "value": "node2",
    },
    {
      "start": 831,
      "value": "node2",
    },
    {
      "start": 833,
      "value": "node0",
    },
    {
      "start": 833,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: sample.go!forCStyle: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 850,
      "value": "node1",
    },
    {
      "start": 870,
      "value": "node1",
    },
    {
      "start": 874,
      "value": "node1",
    },
    {
      "start": 880,
      "value": "node1",
    },
    {
      "start": 881,
      "value": "node1",
    },
    {
      "start": 882,
      "value": "node2",
    },
    {
      "start": 887,
      "value": "node2",
    },
    {
      "start": 888,
      "value": "node2",
    },
    {
      "start": 888,
      "value": "node1",
    },
    {
      "start": 889,
      "value": "node3",
    },
    {
      "start": 895,
      "value": "node1",
    },
    {
      "start": 896,
      "value": "node3",
    },
    {
      "start": 900,
      "value": "node1",
    },
    {
      "start": 900,
      "value": "node1",
    },
    {
      "start": 902,
      "value": "node1",
    },
    {
      "start": 902,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: sample.go!forRange: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 919,
      "value": "node0",
    },
    {
      "start": 938,
      "value": "node2",
    },
    {
      "start": 955,
      "value": "node1",
    },
    {
      "start": 956,
      "value": "node1",
    },
    {
      "start": 955,
      "value": "node1",
    },
    {
      "start": 959,
      "value": "node2",
    },
    {
      "start": 959,
      "value": "node2",
    },
    {
      "start": 961,
      "value": "node0",
    },
    {
      "start": 961,
      "value": "node0",
    },
  ],
}
`;

exports[`Go: sample.go!typeSwitch: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 978,
      "value": "node1",
    },
    {
      "start": 999,
      "value": "node1",
    },
    {
      "start": 1016,
      "value": "node1",
    },
    {
      "start": 1018,
      "value": "node1",
    },
    {
      "start": 1018,
      "value": "node1",
    },
    {
      "start": 1027,
      "value": "node3",
    },
    {
      "start": 1029,
      "value": "node1",
    },
    {
      "start": 1029,
      "value": "node3",
    },
    {
      "start": 1039,
      "value": "node3",
    },
    {
      "start": 1042,
      "value": "node1",
    },
    {
      "start": 1042,
      "value": "node1",
    },
    {
      "start": 1044,
      "value": "node1",
    },
    {
      "start": 1044,
      "value": "node1",
    },
  ],
}
`;

exports[`Go: sample.go!Select: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 1071,
      "value": "node2",
    },
    {
      "start": 1104,
      "value": "node2",
    },
    {
      "start": 1116,
      "value": "node2",
    },
    {
      "start": 1118,
      "value": "node2",
    },
    {
      "start": 1118,
      "value": "node2",
    },
    {
      "start": 1126,
      "value": "node2",
    },
    {
      "start": 1128,
      "value": "node2",
    },
    {
      "start": 1128,
      "value": "node2",
    },
    {
      "start": 1140,
      "value": "node9",
    },
    {
      "start": 1143,
      "value": "node2",
    },
    {
      "start": 1143,
      "value": "node9",
    },
    {
      "start": 1156,
      "value": "node2",
    },
    {
      "start": 1157,
      "value": "node6",
    },
    {
      "start": 1158,
      "value": "node2",
    },
    {
      "start": 1158,
      "value": "node6",
    },
    {
      "start": 1170,
      "value": "node6",
    },
    {
      "start": 1173,
      "value": "node6",
    },
    {
      "start": 1173,
      "value": "node6",
    },
    {
      "start": 1192,
      "value": "node6",
    },
    {
      "start": 1195,
      "value": "node6",
    },
    {
      "start": 1195,
      "value": "node6",
    },
    {
      "start": 1201,
      "value": "node6",
    },
    {
      "start": 1202,
      "value": "node6",
    },
    {
      "start": 1204,
      "value": "node2",
    },
    {
      "start": 1204,
      "value": "node2",
    },
    {
      "start": 1206,
      "value": "node2",
    },
    {
      "start": 1206,
      "value": "node2",
    },
  ],
}
`;

exports[`Go: sample.go!Select2: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 1233,
      "value": "node2",
    },
    {
      "start": 1267,
      "value": "node2",
    },
    {
      "start": 1279,
      "value": "node2",
    },
    {
      "start": 1281,
      "value": "node2",
    },
    {
      "start": 1281,
      "value": "node2",
    },
    {
      "start": 1289,
      "value": "node2",
    },
    {
      "start": 1291,
      "value": "node2",
    },
    {
      "start": 1291,
      "value": "node2",
    },
    {
      "start": 1303,
      "value": "node3",
    },
    {
      "start": 1306,
      "value": "node2",
    },
    {
      "start": 1306,
      "value": "node3",
    },
    {
      "start": 1319,
      "value": "node2",
    },
    {
      "start": 1320,
      "value": "node4",
    },
    {
      "start": 1321,
      "value": "node2",
    },
    {
      "start": 1321,
      "value": "node4",
    },
    {
      "start": 1333,
      "value": "node6",
    },
    {
      "start": 1336,
      "value": "node4",
    },
    {
      "start": 1336,
      "value": "node6",
    },
    {
      "start": 1355,
      "value": "node6",
    },
    {
      "start": 1358,
      "value": "node4",
    },
    {
      "start": 1358,
      "value": "node6",
    },
    {
      "start": 1364,
      "value": "node4",
    },
    {
      "start": 1365,
      "value": "node8",
    },
    {
      "start": 1366,
      "value": "node2",
    },
    {
      "start": 1366,
      "value": "node8",
    },
    {
      "start": 1375,
      "value": "node8",
    },
    {
      "start": 1378,
      "value": "node8",
    },
    {
      "start": 1378,
      "value": "node8",
    },
    {
      "start": 1381,
      "value": "node8",
    },
    {
      "start": 1382,
      "value": "node8",
    },
    {
      "start": 1384,
      "value": "node2",
    },
    {
      "start": 1384,
      "value": "node2",
    },
    {
      "start": 1386,
      "value": "node2",
    },
    {
      "start": 1386,
      "value": "node2",
    },
  ],
}
`;

exports[`Python: sample.py!trivial: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 23,
      "value": "node2",
    },
    {
      "start": 42,
      "value": "node2",
    },
    {
      "start": 46,
      "value": "node2",
    },
    {
      "start": 46,
      "value": "node2",
    },
    {
      "start": 46,
      "value": "node2",
    },
  ],
}
`;

exports[`Python: sample.py!If: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 59,
      "value": "node1",
    },
    {
      "start": 73,
      "value": "node1",
    },
    {
      "start": 76,
      "value": "node1",
    },
    {
      "start": 77,
      "value": "node1",
    },
    {
      "start": 78,
      "value": "node2",
    },
    {
      "start": 87,
      "value": "node2",
    },
    {
      "start": 91,
      "value": "node2",
    },
    {
      "start": 91,
      "value": "node2",
    },
    {
      "start": 91,
      "value": "node1",
    },
    {
      "start": 91,
      "value": "node6",
    },
    {
      "start": 96,
      "value": "node6",
    },
    {
      "start": 100,
      "value": "node1",
    },
    {
      "start": 100,
      "value": "node6",
    },
    {
      "start": 100,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: sample.py!IfElse: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 113,
      "value": "node1",
    },
    {
      "start": 131,
      "value": "node1",
    },
    {
      "start": 134,
      "value": "node1",
    },
    {
      "start": 135,
      "value": "node1",
    },
    {
      "start": 136,
      "value": "node2",
    },
    {
      "start": 145,
      "value": "node2",
    },
    {
      "start": 148,
      "value": "node2",
    },
    {
      "start": 148,
      "value": "node2",
    },
    {
      "start": 148,
      "value": "node1",
    },
    {
      "start": 148,
      "value": "node3",
    },
    {
      "start": 153,
      "value": "node1",
    },
    {
      "start": 153,
      "value": "node3",
    },
    {
      "start": 158,
      "value": "node3",
    },
    {
      "start": 167,
      "value": "node3",
    },
    {
      "start": 170,
      "value": "node3",
    },
    {
      "start": 170,
      "value": "node3",
    },
    {
      "start": 170,
      "value": "node1",
    },
    {
      "start": 170,
      "value": "node7",
    },
    {
      "start": 175,
      "value": "node7",
    },
    {
      "start": 178,
      "value": "node1",
    },
    {
      "start": 178,
      "value": "node7",
    },
    {
      "start": 178,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: sample.py!IfElifElse: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 191,
      "value": "node1",
    },
    {
      "start": 213,
      "value": "node1",
    },
    {
      "start": 216,
      "value": "node1",
    },
    {
      "start": 217,
      "value": "node1",
    },
    {
      "start": 218,
      "value": "node2",
    },
    {
      "start": 227,
      "value": "node2",
    },
    {
      "start": 230,
      "value": "node2",
    },
    {
      "start": 230,
      "value": "node2",
    },
    {
      "start": 230,
      "value": "node1",
    },
    {
      "start": 230,
      "value": "node3",
    },
    {
      "start": 235,
      "value": "node1",
    },
    {
      "start": 235,
      "value": "node3",
    },
    {
      "start": 240,
      "value": "node3",
    },
    {
      "start": 241,
      "value": "node3",
    },
    {
      "start": 242,
      "value": "node4",
    },
    {
      "start": 251,
      "value": "node4",
    },
    {
      "start": 254,
      "value": "node4",
    },
    {
      "start": 254,
      "value": "node3",
    },
    {
      "start": 254,
      "value": "node5",
    },
    {
      "start": 259,
      "value": "node1",
    },
    {
      "start": 259,
      "value": "node5",
    },
    {
      "start": 264,
      "value": "node5",
    },
    {
      "start": 273,
      "value": "node5",
    },
    {
      "start": 276,
      "value": "node5",
    },
    {
      "start": 276,
      "value": "node5",
    },
    {
      "start": 276,
      "value": "node1",
    },
    {
      "start": 276,
      "value": "node9",
    },
    {
      "start": 281,
      "value": "node9",
    },
    {
      "start": 284,
      "value": "node1",
    },
    {
      "start": 284,
      "value": "node9",
    },
    {
      "start": 284,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: sample.py!For: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 309,
      "value": "node0",
    },
    {
      "start": 324,
      "value": "node2",
    },
    {
      "start": 335,
      "value": "node1",
    },
    {
      "start": 344,
      "value": "node1",
    },
    {
      "start": 348,
      "value": "node1",
    },
    {
      "start": 348,
      "value": "node2",
    },
    {
      "start": 348,
      "value": "node0",
    },
    {
      "start": 348,
      "value": "node2",
    },
    {
      "start": 348,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!ForContinue: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 361,
      "value": "node0",
    },
    {
      "start": 384,
      "value": "node6",
    },
    {
      "start": 395,
      "value": "node1",
    },
    {
      "start": 404,
      "value": "node6",
    },
    {
      "start": 404,
      "value": "node1",
    },
    {
      "start": 407,
      "value": "node1",
    },
    {
      "start": 408,
      "value": "node1",
    },
    {
      "start": 409,
      "value": "node2",
    },
    {
      "start": 422,
      "value": "node2",
    },
    {
      "start": 430,
      "value": "node2",
    },
    {
      "start": 430,
      "value": "node2",
    },
    {
      "start": 430,
      "value": "node1",
    },
    {
      "start": 430,
      "value": "node5",
    },
    {
      "start": 439,
      "value": "node5",
    },
    {
      "start": 443,
      "value": "node1",
    },
    {
      "start": 443,
      "value": "node6",
    },
    {
      "start": 443,
      "value": "node0",
    },
    {
      "start": 443,
      "value": "node6",
    },
    {
      "start": 443,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!ForBreak: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 456,
      "value": "node0",
    },
    {
      "start": 476,
      "value": "node5",
    },
    {
      "start": 487,
      "value": "node1",
    },
    {
      "start": 496,
      "value": "node5",
    },
    {
      "start": 496,
      "value": "node1",
    },
    {
      "start": 499,
      "value": "node1",
    },
    {
      "start": 500,
      "value": "node1",
    },
    {
      "start": 501,
      "value": "node2",
    },
    {
      "start": 514,
      "value": "node2",
    },
    {
      "start": 519,
      "value": "node2",
    },
    {
      "start": 519,
      "value": "node2",
    },
    {
      "start": 519,
      "value": "node1",
    },
    {
      "start": 519,
      "value": "node1",
    },
    {
      "start": 519,
      "value": "node5",
    },
    {
      "start": 519,
      "value": "node0",
    },
    {
      "start": 519,
      "value": "node5",
    },
    {
      "start": 519,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!ForElse: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 532,
      "value": "node0",
    },
    {
      "start": 551,
      "value": "node3",
    },
    {
      "start": 562,
      "value": "node1",
    },
    {
      "start": 571,
      "value": "node1",
    },
    {
      "start": 575,
      "value": "node1",
    },
    {
      "start": 575,
      "value": "node3",
    },
    {
      "start": 594,
      "value": "node2",
    },
    {
      "start": 602,
      "value": "node2",
    },
    {
      "start": 602,
      "value": "node3",
    },
    {
      "start": 602,
      "value": "node0",
    },
    {
      "start": 602,
      "value": "node3",
    },
    {
      "start": 602,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!ForElseBreak: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 615,
      "value": "node0",
    },
    {
      "start": 639,
      "value": "node6",
    },
    {
      "start": 650,
      "value": "node1",
    },
    {
      "start": 659,
      "value": "node6",
    },
    {
      "start": 659,
      "value": "node1",
    },
    {
      "start": 662,
      "value": "node1",
    },
    {
      "start": 663,
      "value": "node1",
    },
    {
      "start": 664,
      "value": "node2",
    },
    {
      "start": 677,
      "value": "node2",
    },
    {
      "start": 682,
      "value": "node2",
    },
    {
      "start": 682,
      "value": "node2",
    },
    {
      "start": 682,
      "value": "node1",
    },
    {
      "start": 682,
      "value": "node1",
    },
    {
      "start": 682,
      "value": "node6",
    },
    {
      "start": 701,
      "value": "node5",
    },
    {
      "start": 705,
      "value": "node5",
    },
    {
      "start": 705,
      "value": "node6",
    },
    {
      "start": 705,
      "value": "node0",
    },
    {
      "start": 705,
      "value": "node6",
    },
    {
      "start": 705,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!ForElseBreakReturn: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 718,
      "value": "node0",
    },
    {
      "start": 748,
      "value": "node6",
    },
    {
      "start": 759,
      "value": "node1",
    },
    {
      "start": 768,
      "value": "node6",
    },
    {
      "start": 768,
      "value": "node1",
    },
    {
      "start": 771,
      "value": "node1",
    },
    {
      "start": 772,
      "value": "node1",
    },
    {
      "start": 773,
      "value": "node8",
    },
    {
      "start": 786,
      "value": "node8",
    },
    {
      "start": 791,
      "value": "node8",
    },
    {
      "start": 791,
      "value": "node8",
    },
    {
      "start": 791,
      "value": "node1",
    },
    {
      "start": 791,
      "value": "node1",
    },
    {
      "start": 791,
      "value": "node6",
    },
    {
      "start": 810,
      "value": "node5",
    },
    {
      "start": 816,
      "value": "node5",
    },
    {
      "start": 816,
      "value": "node6",
    },
    {
      "start": 816,
      "value": "node0",
    },
    {
      "start": 816,
      "value": "node6",
    },
    {
      "start": 816,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!While: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 829,
      "value": "node0",
    },
    {
      "start": 852,
      "value": "node1",
    },
    {
      "start": 853,
      "value": "node0",
    },
    {
      "start": 854,
      "value": "node2",
    },
    {
      "start": 863,
      "value": "node2",
    },
    {
      "start": 867,
      "value": "node2",
    },
    {
      "start": 867,
      "value": "node0",
    },
    {
      "start": 867,
      "value": "Not found",
    },
    {
      "start": 867,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!WhileContinue: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 880,
      "value": "node0",
    },
    {
      "start": 911,
      "value": "node1",
    },
    {
      "start": 912,
      "value": "node0",
    },
    {
      "start": 913,
      "value": "node2",
    },
    {
      "start": 922,
      "value": "node0",
    },
    {
      "start": 922,
      "value": "node2",
    },
    {
      "start": 925,
      "value": "node2",
    },
    {
      "start": 926,
      "value": "node2",
    },
    {
      "start": 927,
      "value": "node3",
    },
    {
      "start": 940,
      "value": "node3",
    },
    {
      "start": 948,
      "value": "node3",
    },
    {
      "start": 948,
      "value": "node3",
    },
    {
      "start": 948,
      "value": "node2",
    },
    {
      "start": 948,
      "value": "node6",
    },
    {
      "start": 957,
      "value": "node6",
    },
    {
      "start": 961,
      "value": "node2",
    },
    {
      "start": 961,
      "value": "node0",
    },
    {
      "start": 961,
      "value": "Not found",
    },
    {
      "start": 961,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!WhileBreak: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 974,
      "value": "node0",
    },
    {
      "start": 1002,
      "value": "node1",
    },
    {
      "start": 1003,
      "value": "node0",
    },
    {
      "start": 1004,
      "value": "node2",
    },
    {
      "start": 1013,
      "value": "node0",
    },
    {
      "start": 1013,
      "value": "node2",
    },
    {
      "start": 1016,
      "value": "node2",
    },
    {
      "start": 1017,
      "value": "node2",
    },
    {
      "start": 1018,
      "value": "node3",
    },
    {
      "start": 1031,
      "value": "node3",
    },
    {
      "start": 1036,
      "value": "node3",
    },
    {
      "start": 1036,
      "value": "node3",
    },
    {
      "start": 1036,
      "value": "node2",
    },
    {
      "start": 1036,
      "value": "node2",
    },
    {
      "start": 1036,
      "value": "node0",
    },
    {
      "start": 1036,
      "value": "Not found",
    },
    {
      "start": 1036,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!WhileElse: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 1057,
      "value": "node0",
    },
    {
      "start": 1084,
      "value": "node1",
    },
    {
      "start": 1085,
      "value": "node0",
    },
    {
      "start": 1086,
      "value": "node2",
    },
    {
      "start": 1095,
      "value": "node2",
    },
    {
      "start": 1099,
      "value": "node2",
    },
    {
      "start": 1099,
      "value": "node0",
    },
    {
      "start": 1118,
      "value": "node5",
    },
    {
      "start": 1122,
      "value": "node5",
    },
    {
      "start": 1122,
      "value": "node0",
    },
    {
      "start": 1122,
      "value": "Not found",
    },
    {
      "start": 1122,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!WhileElseBreak: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 1135,
      "value": "node0",
    },
    {
      "start": 1167,
      "value": "node1",
    },
    {
      "start": 1168,
      "value": "node0",
    },
    {
      "start": 1169,
      "value": "node2",
    },
    {
      "start": 1178,
      "value": "node0",
    },
    {
      "start": 1178,
      "value": "node2",
    },
    {
      "start": 1181,
      "value": "node2",
    },
    {
      "start": 1182,
      "value": "node2",
    },
    {
      "start": 1183,
      "value": "node3",
    },
    {
      "start": 1196,
      "value": "node3",
    },
    {
      "start": 1201,
      "value": "node3",
    },
    {
      "start": 1201,
      "value": "node3",
    },
    {
      "start": 1201,
      "value": "node2",
    },
    {
      "start": 1201,
      "value": "node6",
    },
    {
      "start": 1210,
      "value": "node6",
    },
    {
      "start": 1214,
      "value": "node2",
    },
    {
      "start": 1214,
      "value": "node0",
    },
    {
      "start": 1233,
      "value": "node7",
    },
    {
      "start": 1237,
      "value": "node7",
    },
    {
      "start": 1237,
      "value": "node0",
    },
    {
      "start": 1237,
      "value": "Not found",
    },
    {
      "start": 1237,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!Match: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1250,
      "value": "node1",
    },
    {
      "start": 1267,
      "value": "node1",
    },
    {
      "start": 1273,
      "value": "node1",
    },
    {
      "start": 1274,
      "value": "node1",
    },
    {
      "start": 1284,
      "value": "node4",
    },
    {
      "start": 1289,
      "value": "node4",
    },
    {
      "start": 1290,
      "value": "node4",
    },
    {
      "start": 1291,
      "value": "node3",
    },
    {
      "start": 1304,
      "value": "node3",
    },
    {
      "start": 1308,
      "value": "node3",
    },
    {
      "start": 1308,
      "value": "node4",
    },
    {
      "start": 1308,
      "value": "node1",
    },
    {
      "start": 1317,
      "value": "node6",
    },
    {
      "start": 1322,
      "value": "node6",
    },
    {
      "start": 1323,
      "value": "node6",
    },
    {
      "start": 1324,
      "value": "node5",
    },
    {
      "start": 1337,
      "value": "node5",
    },
    {
      "start": 1341,
      "value": "node5",
    },
    {
      "start": 1341,
      "value": "node6",
    },
    {
      "start": 1341,
      "value": "node1",
    },
    {
      "start": 1341,
      "value": "node1",
    },
    {
      "start": 1341,
      "value": "node1",
    },
    {
      "start": 1341,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: sample.py!MatchMultiPattern: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1354,
      "value": "node1",
    },
    {
      "start": 1383,
      "value": "node1",
    },
    {
      "start": 1389,
      "value": "node1",
    },
    {
      "start": 1390,
      "value": "node1",
    },
    {
      "start": 1400,
      "value": "node4",
    },
    {
      "start": 1405,
      "value": "node4",
    },
    {
      "start": 1406,
      "value": "node4",
    },
    {
      "start": 1407,
      "value": "node4",
    },
    {
      "start": 1408,
      "value": "node4",
    },
    {
      "start": 1409,
      "value": "node4",
    },
    {
      "start": 1410,
      "value": "node4",
    },
    {
      "start": 1411,
      "value": "node3",
    },
    {
      "start": 1424,
      "value": "node3",
    },
    {
      "start": 1430,
      "value": "node3",
    },
    {
      "start": 1430,
      "value": "node4",
    },
    {
      "start": 1430,
      "value": "node1",
    },
    {
      "start": 1439,
      "value": "node6",
    },
    {
      "start": 1444,
      "value": "node6",
    },
    {
      "start": 1445,
      "value": "node6",
    },
    {
      "start": 1446,
      "value": "node6",
    },
    {
      "start": 1447,
      "value": "node6",
    },
    {
      "start": 1448,
      "value": "node5",
    },
    {
      "start": 1461,
      "value": "node5",
    },
    {
      "start": 1467,
      "value": "node5",
    },
    {
      "start": 1467,
      "value": "node6",
    },
    {
      "start": 1467,
      "value": "node1",
    },
    {
      "start": 1467,
      "value": "node1",
    },
    {
      "start": 1467,
      "value": "node1",
    },
    {
      "start": 1467,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: sample.py!Return: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1480,
      "value": "node1",
    },
    {
      "start": 1498,
      "value": "node1",
    },
    {
      "start": 1501,
      "value": "node1",
    },
    {
      "start": 1502,
      "value": "node1",
    },
    {
      "start": 1503,
      "value": "node2",
    },
    {
      "start": 1512,
      "value": "node2",
    },
    {
      "start": 1520,
      "value": "node2",
    },
    {
      "start": 1520,
      "value": "node2",
    },
    {
      "start": 1520,
      "value": "node1",
    },
    {
      "start": 1520,
      "value": "node5",
    },
    {
      "start": 1525,
      "value": "node1",
    },
    {
      "start": 1525,
      "value": "node5",
    },
    {
      "start": 1533,
      "value": "node1",
    },
    {
      "start": 1533,
      "value": "node5",
    },
    {
      "start": 1533,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: sample.py!WithCluster: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 1563,
      "value": "node2",
    },
    {
      "start": 1586,
      "value": "node2",
    },
    {
      "start": 1590,
      "value": "node2",
    },
    {
      "start": 1590,
      "value": "Not found",
    },
    {
      "start": 1595,
      "value": "node2",
    },
    {
      "start": 1600,
      "value": "node2",
    },
    {
      "start": 1601,
      "value": "node2",
    },
    {
      "start": 1602,
      "value": "node3",
    },
    {
      "start": 1611,
      "value": "node2",
    },
    {
      "start": 1611,
      "value": "node3",
    },
    {
      "start": 1614,
      "value": "node3",
    },
    {
      "start": 1617,
      "value": "node3",
    },
    {
      "start": 1618,
      "value": "node4",
    },
    {
      "start": 1631,
      "value": "node4",
    },
    {
      "start": 1634,
      "value": "node4",
    },
    {
      "start": 1634,
      "value": "node4",
    },
    {
      "start": 1634,
      "value": "node3",
    },
    {
      "start": 1634,
      "value": "node7",
    },
    {
      "start": 1643,
      "value": "node7",
    },
    {
      "start": 1646,
      "value": "node3",
    },
    {
      "start": 1646,
      "value": "Not found",
    },
    {
      "start": 1651,
      "value": "node2",
    },
    {
      "start": 1656,
      "value": "node8",
    },
    {
      "start": 1657,
      "value": "node2",
    },
    {
      "start": 1658,
      "value": "node9",
    },
    {
      "start": 1667,
      "value": "node9",
    },
    {
      "start": 1671,
      "value": "node9",
    },
    {
      "start": 1671,
      "value": "node2",
    },
    {
      "start": 1671,
      "value": "node11",
    },
    {
      "start": 1676,
      "value": "node11",
    },
    {
      "start": 1680,
      "value": "node2",
    },
    {
      "start": 1680,
      "value": "node11",
    },
    {
      "start": 1680,
      "value": "node2",
    },
  ],
}
`;

exports[`Python: sample.py!WithNestedCluster: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1710,
      "value": "node1",
    },
    {
      "start": 1744,
      "value": "node1",
    },
    {
      "start": 1745,
      "value": "node1",
    },
    {
      "start": 1746,
      "value": "node2",
    },
    {
      "start": 1755,
      "value": "node1",
    },
    {
      "start": 1755,
      "value": "node2",
    },
    {
      "start": 1758,
      "value": "node2",
    },
    {
      "start": 1761,
      "value": "node2",
    },
    {
      "start": 1762,
      "value": "node3",
    },
    {
      "start": 1775,
      "value": "node3",
    },
    {
      "start": 1778,
      "value": "node3",
    },
    {
      "start": 1778,
      "value": "node3",
    },
    {
      "start": 1778,
      "value": "node2",
    },
    {
      "start": 1778,
      "value": "node6",
    },
    {
      "start": 1787,
      "value": "node6",
    },
    {
      "start": 1790,
      "value": "node2",
    },
    {
      "start": 1790,
      "value": "Not found",
    },
    {
      "start": 1795,
      "value": "node1",
    },
    {
      "start": 1800,
      "value": "node7",
    },
    {
      "start": 1801,
      "value": "node1",
    },
    {
      "start": 1802,
      "value": "node8",
    },
    {
      "start": 1811,
      "value": "node1",
    },
    {
      "start": 1811,
      "value": "node8",
    },
    {
      "start": 1814,
      "value": "node8",
    },
    {
      "start": 1815,
      "value": "node8",
    },
    {
      "start": 1816,
      "value": "node9",
    },
    {
      "start": 1829,
      "value": "node8",
    },
    {
      "start": 1829,
      "value": "node9",
    },
    {
      "start": 1834,
      "value": "node9",
    },
    {
      "start": 1835,
      "value": "node9",
    },
    {
      "start": 1836,
      "value": "node10",
    },
    {
      "start": 1853,
      "value": "node9",
    },
    {
      "start": 1853,
      "value": "node10",
    },
    {
      "start": 1859,
      "value": "node10",
    },
    {
      "start": 1860,
      "value": "node10",
    },
    {
      "start": 1882,
      "value": "node13",
    },
    {
      "start": 1887,
      "value": "node13",
    },
    {
      "start": 1888,
      "value": "node13",
    },
    {
      "start": 1889,
      "value": "node12",
    },
    {
      "start": 1889,
      "value": "node12",
    },
    {
      "start": 1893,
      "value": "node12",
    },
    {
      "start": 1893,
      "value": "node13",
    },
    {
      "start": 1893,
      "value": "node10",
    },
    {
      "start": 1914,
      "value": "node15",
    },
    {
      "start": 1919,
      "value": "node15",
    },
    {
      "start": 1920,
      "value": "node15",
    },
    {
      "start": 1921,
      "value": "node14",
    },
    {
      "start": 1921,
      "value": "node14",
    },
    {
      "start": 1925,
      "value": "node14",
    },
    {
      "start": 1925,
      "value": "node15",
    },
    {
      "start": 1925,
      "value": "node10",
    },
    {
      "start": 1925,
      "value": "node10",
    },
    {
      "start": 1925,
      "value": "node9",
    },
    {
      "start": 1925,
      "value": "node9",
    },
    {
      "start": 1925,
      "value": "node16",
    },
    {
      "start": 1934,
      "value": "node8",
    },
    {
      "start": 1934,
      "value": "node16",
    },
    {
      "start": 1939,
      "value": "node16",
    },
    {
      "start": 1952,
      "value": "node16",
    },
    {
      "start": 1958,
      "value": "node16",
    },
    {
      "start": 1958,
      "value": "node16",
    },
    {
      "start": 1958,
      "value": "node8",
    },
    {
      "start": 1958,
      "value": "node8",
    },
    {
      "start": 1958,
      "value": "node1",
    },
    {
      "start": 1958,
      "value": "Not found",
    },
    {
      "start": 1958,
      "value": "node1",
    },
  ],
}
`;

exports[`Python: sample.py!raise_exception: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2000,
      "value": "node0",
    },
    {
      "start": 2027,
      "value": "node1",
    },
    {
      "start": 2032,
      "value": "node0",
    },
    {
      "start": 2032,
      "value": "node1",
    },
    {
      "start": 2032,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!raise_again: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2073,
      "value": "node0",
    },
    {
      "start": 2096,
      "value": "node2",
    },
    {
      "start": 2109,
      "value": "node2",
    },
    {
      "start": 2116,
      "value": "node2",
    },
    {
      "start": 2116,
      "value": "node2",
    },
    {
      "start": 2121,
      "value": "node3",
    },
    {
      "start": 2138,
      "value": "node3",
    },
    {
      "start": 2141,
      "value": "node3",
    },
    {
      "start": 2142,
      "value": "node3",
    },
    {
      "start": 2143,
      "value": "node4",
    },
    {
      "start": 2156,
      "value": "node4",
    },
    {
      "start": 2160,
      "value": "node4",
    },
    {
      "start": 2160,
      "value": "node4",
    },
    {
      "start": 2160,
      "value": "node3",
    },
    {
      "start": 2160,
      "value": "node3",
    },
    {
      "start": 2160,
      "value": "node3",
    },
    {
      "start": 2160,
      "value": "node2",
    },
    {
      "start": 2165,
      "value": "node9",
    },
    {
      "start": 2180,
      "value": "node9",
    },
    {
      "start": 2183,
      "value": "node7",
    },
    {
      "start": 2184,
      "value": "node9",
    },
    {
      "start": 2185,
      "value": "node8",
    },
    {
      "start": 2198,
      "value": "node8",
    },
    {
      "start": 2202,
      "value": "node8",
    },
    {
      "start": 2202,
      "value": "node8",
    },
    {
      "start": 2202,
      "value": "node9",
    },
    {
      "start": 2202,
      "value": "node9",
    },
    {
      "start": 2202,
      "value": "node9",
    },
    {
      "start": 2202,
      "value": "node2",
    },
    {
      "start": 2202,
      "value": "node0",
    },
    {
      "start": 2202,
      "value": "node2",
    },
    {
      "start": 2202,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!yield_value: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2243,
      "value": "node0",
    },
    {
      "start": 2266,
      "value": "node2",
    },
    {
      "start": 2277,
      "value": "node1",
    },
    {
      "start": 2286,
      "value": "node1",
    },
    {
      "start": 2293,
      "value": "node1",
    },
    {
      "start": 2293,
      "value": "node2",
    },
    {
      "start": 2293,
      "value": "node0",
    },
    {
      "start": 2293,
      "value": "node2",
    },
    {
      "start": 2293,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!try_except: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2339,
      "value": "node0",
    },
    {
      "start": 2361,
      "value": "node2",
    },
    {
      "start": 2374,
      "value": "node2",
    },
    {
      "start": 2377,
      "value": "node2",
    },
    {
      "start": 2377,
      "value": "node2",
    },
    {
      "start": 2382,
      "value": "node3",
    },
    {
      "start": 2398,
      "value": "node3",
    },
    {
      "start": 2401,
      "value": "node3",
    },
    {
      "start": 2401,
      "value": "node3",
    },
    {
      "start": 2401,
      "value": "node2",
    },
    {
      "start": 2401,
      "value": "node4",
    },
    {
      "start": 2406,
      "value": "node0",
    },
    {
      "start": 2406,
      "value": "node4",
    },
    {
      "start": 2412,
      "value": "node0",
    },
    {
      "start": 2412,
      "value": "node4",
    },
    {
      "start": 2412,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!try_except_finally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2453,
      "value": "node0",
    },
    {
      "start": 2483,
      "value": "node2",
    },
    {
      "start": 2496,
      "value": "node2",
    },
    {
      "start": 2499,
      "value": "node2",
    },
    {
      "start": 2499,
      "value": "node2",
    },
    {
      "start": 2504,
      "value": "node3",
    },
    {
      "start": 2520,
      "value": "node3",
    },
    {
      "start": 2523,
      "value": "node3",
    },
    {
      "start": 2523,
      "value": "node3",
    },
    {
      "start": 2523,
      "value": "node2",
    },
    {
      "start": 2528,
      "value": "node4",
    },
    {
      "start": 2545,
      "value": "node4",
    },
    {
      "start": 2548,
      "value": "node4",
    },
    {
      "start": 2548,
      "value": "node4",
    },
    {
      "start": 2548,
      "value": "node2",
    },
    {
      "start": 2548,
      "value": "node5",
    },
    {
      "start": 2553,
      "value": "node0",
    },
    {
      "start": 2553,
      "value": "node5",
    },
    {
      "start": 2559,
      "value": "node0",
    },
    {
      "start": 2559,
      "value": "node5",
    },
    {
      "start": 2559,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!try_many_except_finally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2600,
      "value": "node0",
    },
    {
      "start": 2635,
      "value": "node2",
    },
    {
      "start": 2648,
      "value": "node2",
    },
    {
      "start": 2651,
      "value": "node2",
    },
    {
      "start": 2651,
      "value": "node2",
    },
    {
      "start": 2656,
      "value": "node3",
    },
    {
      "start": 2674,
      "value": "node3",
    },
    {
      "start": 2677,
      "value": "node3",
    },
    {
      "start": 2677,
      "value": "node3",
    },
    {
      "start": 2677,
      "value": "node2",
    },
    {
      "start": 2682,
      "value": "node4",
    },
    {
      "start": 2700,
      "value": "node4",
    },
    {
      "start": 2704,
      "value": "node4",
    },
    {
      "start": 2704,
      "value": "node4",
    },
    {
      "start": 2704,
      "value": "node2",
    },
    {
      "start": 2709,
      "value": "node7",
    },
    {
      "start": 2717,
      "value": "node7",
    },
    {
      "start": 2723,
      "value": "node7",
    },
    {
      "start": 2723,
      "value": "node7",
    },
    {
      "start": 2723,
      "value": "node2",
    },
    {
      "start": 2728,
      "value": "node8",
    },
    {
      "start": 2745,
      "value": "node8",
    },
    {
      "start": 2748,
      "value": "node8",
    },
    {
      "start": 2748,
      "value": "node8",
    },
    {
      "start": 2748,
      "value": "node8",
    },
    {
      "start": 2748,
      "value": "node8",
    },
    {
      "start": 2748,
      "value": "node2",
    },
    {
      "start": 2748,
      "value": "node9",
    },
    {
      "start": 2753,
      "value": "node0",
    },
    {
      "start": 2753,
      "value": "node9",
    },
    {
      "start": 2759,
      "value": "node0",
    },
    {
      "start": 2759,
      "value": "node9",
    },
    {
      "start": 2759,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!try_except_else_finally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2801,
      "value": "node0",
    },
    {
      "start": 2836,
      "value": "node2",
    },
    {
      "start": 2841,
      "value": "node2",
    },
    {
      "start": 2845,
      "value": "node2",
    },
    {
      "start": 2845,
      "value": "node2",
    },
    {
      "start": 2850,
      "value": "node3",
    },
    {
      "start": 2858,
      "value": "node3",
    },
    {
      "start": 2862,
      "value": "node3",
    },
    {
      "start": 2862,
      "value": "node3",
    },
    {
      "start": 2862,
      "value": "node2",
    },
    {
      "start": 2867,
      "value": "node4",
    },
    {
      "start": 2873,
      "value": "node4",
    },
    {
      "start": 2877,
      "value": "node4",
    },
    {
      "start": 2877,
      "value": "node4",
    },
    {
      "start": 2877,
      "value": "node2",
    },
    {
      "start": 2882,
      "value": "node5",
    },
    {
      "start": 2891,
      "value": "node5",
    },
    {
      "start": 2895,
      "value": "node5",
    },
    {
      "start": 2895,
      "value": "node5",
    },
    {
      "start": 2895,
      "value": "node2",
    },
    {
      "start": 2895,
      "value": "node0",
    },
    {
      "start": 2895,
      "value": "node2",
    },
    {
      "start": 2895,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!massive_try_except_else_finally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 2912,
      "value": "node0",
    },
    {
      "start": 2955,
      "value": "node3",
    },
    {
      "start": 2969,
      "value": "node3",
    },
    {
      "start": 2974,
      "value": "node3",
    },
    {
      "start": 2978,
      "value": "node3",
    },
    {
      "start": 2978,
      "value": "node3",
    },
    {
      "start": 2987,
      "value": "node4",
    },
    {
      "start": 2995,
      "value": "node4",
    },
    {
      "start": 2999,
      "value": "node4",
    },
    {
      "start": 2999,
      "value": "node4",
    },
    {
      "start": 2999,
      "value": "node3",
    },
    {
      "start": 3008,
      "value": "node5",
    },
    {
      "start": 3014,
      "value": "node5",
    },
    {
      "start": 3018,
      "value": "node5",
    },
    {
      "start": 3018,
      "value": "node5",
    },
    {
      "start": 3018,
      "value": "node3",
    },
    {
      "start": 3027,
      "value": "node6",
    },
    {
      "start": 3036,
      "value": "node6",
    },
    {
      "start": 3040,
      "value": "node6",
    },
    {
      "start": 3040,
      "value": "node6",
    },
    {
      "start": 3040,
      "value": "node3",
    },
    {
      "start": 3040,
      "value": "node3",
    },
    {
      "start": 3040,
      "value": "node3",
    },
    {
      "start": 3045,
      "value": "node8",
    },
    {
      "start": 3061,
      "value": "node8",
    },
    {
      "start": 3066,
      "value": "node8",
    },
    {
      "start": 3070,
      "value": "node8",
    },
    {
      "start": 3070,
      "value": "node8",
    },
    {
      "start": 3079,
      "value": "node9",
    },
    {
      "start": 3087,
      "value": "node9",
    },
    {
      "start": 3091,
      "value": "node9",
    },
    {
      "start": 3091,
      "value": "node9",
    },
    {
      "start": 3091,
      "value": "node8",
    },
    {
      "start": 3100,
      "value": "node10",
    },
    {
      "start": 3106,
      "value": "node10",
    },
    {
      "start": 3110,
      "value": "node10",
    },
    {
      "start": 3110,
      "value": "node10",
    },
    {
      "start": 3110,
      "value": "node8",
    },
    {
      "start": 3119,
      "value": "node11",
    },
    {
      "start": 3128,
      "value": "node11",
    },
    {
      "start": 3132,
      "value": "node11",
    },
    {
      "start": 3132,
      "value": "node11",
    },
    {
      "start": 3132,
      "value": "node8",
    },
    {
      "start": 3132,
      "value": "node8",
    },
    {
      "start": 3132,
      "value": "node8",
    },
    {
      "start": 3132,
      "value": "node3",
    },
    {
      "start": 3137,
      "value": "node12",
    },
    {
      "start": 3152,
      "value": "node12",
    },
    {
      "start": 3155,
      "value": "node12",
    },
    {
      "start": 3156,
      "value": "node12",
    },
    {
      "start": 3157,
      "value": "node13",
    },
    {
      "start": 3170,
      "value": "node13",
    },
    {
      "start": 3174,
      "value": "node13",
    },
    {
      "start": 3174,
      "value": "node13",
    },
    {
      "start": 3174,
      "value": "node12",
    },
    {
      "start": 3174,
      "value": "node14",
    },
    {
      "start": 3183,
      "value": "node12",
    },
    {
      "start": 3183,
      "value": "node14",
    },
    {
      "start": 3188,
      "value": "node14",
    },
    {
      "start": 3201,
      "value": "node14",
    },
    {
      "start": 3205,
      "value": "node14",
    },
    {
      "start": 3205,
      "value": "node14",
    },
    {
      "start": 3205,
      "value": "node12",
    },
    {
      "start": 3205,
      "value": "node18",
    },
    {
      "start": 3214,
      "value": "node12",
    },
    {
      "start": 3214,
      "value": "node18",
    },
    {
      "start": 3231,
      "value": "node18",
    },
    {
      "start": 3235,
      "value": "node18",
    },
    {
      "start": 3235,
      "value": "node18",
    },
    {
      "start": 3244,
      "value": "node19",
    },
    {
      "start": 3253,
      "value": "node19",
    },
    {
      "start": 3257,
      "value": "node19",
    },
    {
      "start": 3257,
      "value": "node19",
    },
    {
      "start": 3257,
      "value": "node18",
    },
    {
      "start": 3257,
      "value": "node12",
    },
    {
      "start": 3257,
      "value": "node12",
    },
    {
      "start": 3257,
      "value": "node3",
    },
    {
      "start": 3262,
      "value": "node20",
    },
    {
      "start": 3280,
      "value": "node20",
    },
    {
      "start": 3285,
      "value": "node20",
    },
    {
      "start": 3286,
      "value": "node20",
    },
    {
      "start": 3287,
      "value": "node22",
    },
    {
      "start": 3300,
      "value": "node20",
    },
    {
      "start": 3300,
      "value": "node22",
    },
    {
      "start": 3311,
      "value": "node21",
    },
    {
      "start": 3328,
      "value": "node21",
    },
    {
      "start": 3332,
      "value": "node21",
    },
    {
      "start": 3332,
      "value": "node22",
    },
    {
      "start": 3332,
      "value": "node22",
    },
    {
      "start": 3332,
      "value": "node20",
    },
    {
      "start": 3332,
      "value": "node20",
    },
    {
      "start": 3332,
      "value": "node3",
    },
    {
      "start": 3332,
      "value": "node0",
    },
    {
      "start": 3332,
      "value": "node3",
    },
    {
      "start": 3332,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!try_finally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 3373,
      "value": "node0",
    },
    {
      "start": 3396,
      "value": "node2",
    },
    {
      "start": 3409,
      "value": "node2",
    },
    {
      "start": 3412,
      "value": "node2",
    },
    {
      "start": 3413,
      "value": "node2",
    },
    {
      "start": 3414,
      "value": "node8",
    },
    {
      "start": 3427,
      "value": "node8",
    },
    {
      "start": 3433,
      "value": "node8",
    },
    {
      "start": 3433,
      "value": "node8",
    },
    {
      "start": 3433,
      "value": "node2",
    },
    {
      "start": 3433,
      "value": "node6",
    },
    {
      "start": 3442,
      "value": "node6",
    },
    {
      "start": 3446,
      "value": "node2",
    },
    {
      "start": 3446,
      "value": "node2",
    },
    {
      "start": 3451,
      "value": "node9",
    },
    {
      "start": 3468,
      "value": "node9",
    },
    {
      "start": 3472,
      "value": "node9",
    },
    {
      "start": 3472,
      "value": "node9",
    },
    {
      "start": 3472,
      "value": "node9",
    },
    {
      "start": 3472,
      "value": "node9",
    },
    {
      "start": 3472,
      "value": "node2",
    },
    {
      "start": 3472,
      "value": "node0",
    },
    {
      "start": 3472,
      "value": "node2",
    },
    {
      "start": 3472,
      "value": "node0",
    },
  ],
}
`;

exports[`Python: sample.py!try_with_finally: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 3513,
      "value": "node0",
    },
    {
      "start": 3541,
      "value": "node2",
    },
    {
      "start": 3554,
      "value": "node2",
    },
    {
      "start": 3559,
      "value": "node2",
    },
    {
      "start": 3560,
      "value": "node2",
    },
    {
      "start": 3561,
      "value": "node6",
    },
    {
      "start": 3574,
      "value": "node6",
    },
    {
      "start": 3580,
      "value": "node6",
    },
    {
      "start": 3580,
      "value": "node2",
    },
    {
      "start": 3580,
      "value": "node4",
    },
    {
      "start": 3589,
      "value": "node4",
    },
    {
      "start": 3593,
      "value": "node2",
    },
    {
      "start": 3593,
      "value": "node2",
    },
    {
      "start": 3598,
      "value": "node7",
    },
    {
      "start": 3615,
      "value": "node7",
    },
    {
      "start": 3619,
      "value": "node7",
    },
    {
      "start": 3619,
      "value": "node7",
    },
    {
      "start": 3619,
      "value": "node7",
    },
    {
      "start": 3619,
      "value": "node7",
    },
    {
      "start": 3619,
      "value": "node2",
    },
    {
      "start": 3619,
      "value": "node0",
    },
    {
      "start": 3619,
      "value": "node2",
    },
    {
      "start": 3619,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!IfStatement: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 26,
      "value": "node1",
    },
    {
      "start": 53,
      "value": "node1",
    },
    {
      "start": 56,
      "value": "node1",
    },
    {
      "start": 59,
      "value": "node2",
    },
    {
      "start": 60,
      "value": "node1",
    },
    {
      "start": 60,
      "value": "node2",
    },
    {
      "start": 65,
      "value": "node1",
    },
    {
      "start": 65,
      "value": "node3",
    },
    {
      "start": 71,
      "value": "node1",
    },
    {
      "start": 71,
      "value": "node3",
    },
    {
      "start": 74,
      "value": "node3",
    },
    {
      "start": 77,
      "value": "node4",
    },
    {
      "start": 78,
      "value": "node3",
    },
    {
      "start": 78,
      "value": "node4",
    },
    {
      "start": 83,
      "value": "node5",
    },
    {
      "start": 84,
      "value": "node3",
    },
    {
      "start": 84,
      "value": "node5",
    },
    {
      "start": 89,
      "value": "node5",
    },
    {
      "start": 94,
      "value": "node5",
    },
    {
      "start": 94,
      "value": "node3",
    },
    {
      "start": 94,
      "value": "node1",
    },
    {
      "start": 94,
      "value": "node1",
    },
    {
      "start": 96,
      "value": "node1",
    },
    {
      "start": 96,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ForOfLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 113,
      "value": "node0",
    },
    {
      "start": 138,
      "value": "node2",
    },
    {
      "start": 157,
      "value": "node1",
    },
    {
      "start": 158,
      "value": "node2",
    },
    {
      "start": 158,
      "value": "node1",
    },
    {
      "start": 163,
      "value": "node2",
    },
    {
      "start": 163,
      "value": "node2",
    },
    {
      "start": 165,
      "value": "node0",
    },
    {
      "start": 165,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ForOfLoopBreak: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 183,
      "value": "node2",
    },
    {
      "start": 213,
      "value": "node2",
    },
    {
      "start": 232,
      "value": "node1",
    },
    {
      "start": 233,
      "value": "node2",
    },
    {
      "start": 233,
      "value": "node1",
    },
    {
      "start": 239,
      "value": "node1",
    },
    {
      "start": 245,
      "value": "node1",
    },
    {
      "start": 249,
      "value": "node2",
    },
    {
      "start": 249,
      "value": "node2",
    },
    {
      "start": 251,
      "value": "node2",
    },
    {
      "start": 251,
      "value": "node2",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ForOfLoopReturn: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 269,
      "value": "node2",
    },
    {
      "start": 300,
      "value": "node2",
    },
    {
      "start": 319,
      "value": "node1",
    },
    {
      "start": 320,
      "value": "node2",
    },
    {
      "start": 320,
      "value": "node1",
    },
    {
      "start": 326,
      "value": "node1",
    },
    {
      "start": 333,
      "value": "node1",
    },
    {
      "start": 337,
      "value": "node2",
    },
    {
      "start": 337,
      "value": "node2",
    },
    {
      "start": 339,
      "value": "node2",
    },
    {
      "start": 339,
      "value": "node2",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ForInLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 357,
      "value": "node0",
    },
    {
      "start": 382,
      "value": "node2",
    },
    {
      "start": 401,
      "value": "node1",
    },
    {
      "start": 402,
      "value": "node2",
    },
    {
      "start": 402,
      "value": "node1",
    },
    {
      "start": 407,
      "value": "node2",
    },
    {
      "start": 407,
      "value": "node2",
    },
    {
      "start": 409,
      "value": "node0",
    },
    {
      "start": 409,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ForLoops: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node7",
    },
    {
      "start": 427,
      "value": "node7",
    },
    {
      "start": 451,
      "value": "node7",
    },
    {
      "start": 459,
      "value": "node1",
    },
    {
      "start": 460,
      "value": "node1",
    },
    {
      "start": 461,
      "value": "node1",
    },
    {
      "start": 461,
      "value": "node7",
    },
    {
      "start": 462,
      "value": "node2",
    },
    {
      "start": 463,
      "value": "node2",
    },
    {
      "start": 464,
      "value": "node3",
    },
    {
      "start": 465,
      "value": "node7",
    },
    {
      "start": 465,
      "value": "node3",
    },
    {
      "start": 467,
      "value": "node3",
    },
    {
      "start": 470,
      "value": "node3",
    },
    {
      "start": 473,
      "value": "node4",
    },
    {
      "start": 474,
      "value": "node3",
    },
    {
      "start": 474,
      "value": "node4",
    },
    {
      "start": 480,
      "value": "node3",
    },
    {
      "start": 480,
      "value": "node3",
    },
    {
      "start": 481,
      "value": "node7",
    },
    {
      "start": 481,
      "value": "node15",
    },
    {
      "start": 484,
      "value": "node7",
    },
    {
      "start": 484,
      "value": "node15",
    },
    {
      "start": 492,
      "value": "node10",
    },
    {
      "start": 493,
      "value": "node15",
    },
    {
      "start": 493,
      "value": "node10",
    },
    {
      "start": 494,
      "value": "node10",
    },
    {
      "start": 494,
      "value": "node10",
    },
    {
      "start": 497,
      "value": "node11",
    },
    {
      "start": 498,
      "value": "node15",
    },
    {
      "start": 498,
      "value": "node11",
    },
    {
      "start": 500,
      "value": "node11",
    },
    {
      "start": 503,
      "value": "node11",
    },
    {
      "start": 506,
      "value": "node12",
    },
    {
      "start": 507,
      "value": "node11",
    },
    {
      "start": 507,
      "value": "node12",
    },
    {
      "start": 513,
      "value": "node11",
    },
    {
      "start": 513,
      "value": "node11",
    },
    {
      "start": 514,
      "value": "node15",
    },
    {
      "start": 514,
      "value": "node23",
    },
    {
      "start": 517,
      "value": "node7",
    },
    {
      "start": 517,
      "value": "node23",
    },
    {
      "start": 528,
      "value": "node18",
    },
    {
      "start": 529,
      "value": "node18",
    },
    {
      "start": 530,
      "value": "node19",
    },
    {
      "start": 531,
      "value": "node23",
    },
    {
      "start": 531,
      "value": "node19",
    },
    {
      "start": 533,
      "value": "node19",
    },
    {
      "start": 536,
      "value": "node19",
    },
    {
      "start": 539,
      "value": "node30",
    },
    {
      "start": 540,
      "value": "node19",
    },
    {
      "start": 540,
      "value": "node30",
    },
    {
      "start": 546,
      "value": "node19",
    },
    {
      "start": 546,
      "value": "node19",
    },
    {
      "start": 547,
      "value": "node23",
    },
    {
      "start": 547,
      "value": "node30",
    },
    {
      "start": 550,
      "value": "node7",
    },
    {
      "start": 550,
      "value": "node30",
    },
    {
      "start": 563,
      "value": "node26",
    },
    {
      "start": 564,
      "value": "node30",
    },
    {
      "start": 564,
      "value": "node26",
    },
    {
      "start": 566,
      "value": "node26",
    },
    {
      "start": 569,
      "value": "node26",
    },
    {
      "start": 572,
      "value": "node33",
    },
    {
      "start": 573,
      "value": "node26",
    },
    {
      "start": 573,
      "value": "node33",
    },
    {
      "start": 579,
      "value": "node26",
    },
    {
      "start": 579,
      "value": "node26",
    },
    {
      "start": 580,
      "value": "node30",
    },
    {
      "start": 580,
      "value": "node33",
    },
    {
      "start": 583,
      "value": "node7",
    },
    {
      "start": 583,
      "value": "node33",
    },
    {
      "start": 589,
      "value": "node33",
    },
    {
      "start": 590,
      "value": "node33",
    },
    {
      "start": 590,
      "value": "node33",
    },
    {
      "start": 591,
      "value": "node34",
    },
    {
      "start": 592,
      "value": "node34",
    },
    {
      "start": 593,
      "value": "node34",
    },
    {
      "start": 593,
      "value": "node33",
    },
    {
      "start": 594,
      "value": "node35",
    },
    {
      "start": 595,
      "value": "node35",
    },
    {
      "start": 596,
      "value": "node36",
    },
    {
      "start": 597,
      "value": "node33",
    },
    {
      "start": 597,
      "value": "node36",
    },
    {
      "start": 599,
      "value": "node36",
    },
    {
      "start": 602,
      "value": "node36",
    },
    {
      "start": 605,
      "value": "node37",
    },
    {
      "start": 606,
      "value": "node36",
    },
    {
      "start": 606,
      "value": "node37",
    },
    {
      "start": 612,
      "value": "node36",
    },
    {
      "start": 612,
      "value": "node36",
    },
    {
      "start": 613,
      "value": "node33",
    },
    {
      "start": 613,
      "value": "node43",
    },
    {
      "start": 616,
      "value": "node7",
    },
    {
      "start": 616,
      "value": "node43",
    },
    {
      "start": 622,
      "value": "node43",
    },
    {
      "start": 623,
      "value": "node43",
    },
    {
      "start": 623,
      "value": "node43",
    },
    {
      "start": 624,
      "value": "node44",
    },
    {
      "start": 625,
      "value": "node43",
    },
    {
      "start": 625,
      "value": "node44",
    },
    {
      "start": 626,
      "value": "node44",
    },
    {
      "start": 626,
      "value": "node44",
    },
    {
      "start": 629,
      "value": "node45",
    },
    {
      "start": 630,
      "value": "node43",
    },
    {
      "start": 630,
      "value": "node45",
    },
    {
      "start": 632,
      "value": "node45",
    },
    {
      "start": 635,
      "value": "node45",
    },
    {
      "start": 638,
      "value": "node46",
    },
    {
      "start": 639,
      "value": "node45",
    },
    {
      "start": 639,
      "value": "node46",
    },
    {
      "start": 645,
      "value": "node45",
    },
    {
      "start": 645,
      "value": "node45",
    },
    {
      "start": 646,
      "value": "node43",
    },
    {
      "start": 646,
      "value": "node52",
    },
    {
      "start": 649,
      "value": "node7",
    },
    {
      "start": 649,
      "value": "node52",
    },
    {
      "start": 655,
      "value": "node52",
    },
    {
      "start": 656,
      "value": "node52",
    },
    {
      "start": 656,
      "value": "node52",
    },
    {
      "start": 656,
      "value": "node52",
    },
    {
      "start": 659,
      "value": "node52",
    },
    {
      "start": 660,
      "value": "node53",
    },
    {
      "start": 661,
      "value": "node53",
    },
    {
      "start": 662,
      "value": "node54",
    },
    {
      "start": 663,
      "value": "node52",
    },
    {
      "start": 663,
      "value": "node54",
    },
    {
      "start": 665,
      "value": "node54",
    },
    {
      "start": 668,
      "value": "node54",
    },
    {
      "start": 671,
      "value": "node61",
    },
    {
      "start": 672,
      "value": "node54",
    },
    {
      "start": 672,
      "value": "node61",
    },
    {
      "start": 678,
      "value": "node54",
    },
    {
      "start": 678,
      "value": "node54",
    },
    {
      "start": 679,
      "value": "node52",
    },
    {
      "start": 679,
      "value": "node61",
    },
    {
      "start": 682,
      "value": "node7",
    },
    {
      "start": 682,
      "value": "node61",
    },
    {
      "start": 688,
      "value": "node61",
    },
    {
      "start": 689,
      "value": "node61",
    },
    {
      "start": 689,
      "value": "node61",
    },
    {
      "start": 689,
      "value": "node61",
    },
    {
      "start": 692,
      "value": "node61",
    },
    {
      "start": 695,
      "value": "node62",
    },
    {
      "start": 696,
      "value": "node61",
    },
    {
      "start": 696,
      "value": "node62",
    },
    {
      "start": 698,
      "value": "node62",
    },
    {
      "start": 701,
      "value": "node62",
    },
    {
      "start": 704,
      "value": "node69",
    },
    {
      "start": 705,
      "value": "node62",
    },
    {
      "start": 705,
      "value": "node69",
    },
    {
      "start": 711,
      "value": "node62",
    },
    {
      "start": 711,
      "value": "node62",
    },
    {
      "start": 712,
      "value": "node61",
    },
    {
      "start": 712,
      "value": "node61",
    },
    {
      "start": 714,
      "value": "node7",
    },
    {
      "start": 714,
      "value": "node7",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ForLoopConditionalBreak: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 732,
      "value": "node0",
    },
    {
      "start": 771,
      "value": "node5",
    },
    {
      "start": 789,
      "value": "node1",
    },
    {
      "start": 790,
      "value": "node5",
    },
    {
      "start": 790,
      "value": "node1",
    },
    {
      "start": 796,
      "value": "node1",
    },
    {
      "start": 799,
      "value": "node1",
    },
    {
      "start": 808,
      "value": "node2",
    },
    {
      "start": 809,
      "value": "node1",
    },
    {
      "start": 809,
      "value": "node2",
    },
    {
      "start": 817,
      "value": "node2",
    },
    {
      "start": 823,
      "value": "node2",
    },
    {
      "start": 829,
      "value": "node1",
    },
    {
      "start": 829,
      "value": "node1",
    },
    {
      "start": 833,
      "value": "node5",
    },
    {
      "start": 833,
      "value": "node5",
    },
    {
      "start": 835,
      "value": "node0",
    },
    {
      "start": 835,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ForLoopConditionalContinue: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 853,
      "value": "node0",
    },
    {
      "start": 895,
      "value": "node9",
    },
    {
      "start": 913,
      "value": "node1",
    },
    {
      "start": 914,
      "value": "node9",
    },
    {
      "start": 914,
      "value": "node1",
    },
    {
      "start": 920,
      "value": "node1",
    },
    {
      "start": 923,
      "value": "node1",
    },
    {
      "start": 932,
      "value": "node2",
    },
    {
      "start": 933,
      "value": "node1",
    },
    {
      "start": 933,
      "value": "node2",
    },
    {
      "start": 941,
      "value": "node2",
    },
    {
      "start": 950,
      "value": "node2",
    },
    {
      "start": 956,
      "value": "node1",
    },
    {
      "start": 956,
      "value": "node5",
    },
    {
      "start": 961,
      "value": "node1",
    },
    {
      "start": 961,
      "value": "node5",
    },
    {
      "start": 964,
      "value": "node5",
    },
    {
      "start": 967,
      "value": "node6",
    },
    {
      "start": 968,
      "value": "node5",
    },
    {
      "start": 968,
      "value": "node6",
    },
    {
      "start": 975,
      "value": "node5",
    },
    {
      "start": 975,
      "value": "node1",
    },
    {
      "start": 979,
      "value": "node9",
    },
    {
      "start": 979,
      "value": "node9",
    },
    {
      "start": 981,
      "value": "node0",
    },
    {
      "start": 981,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!MoreSwitch: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 998,
      "value": "node1",
    },
    {
      "start": 1100,
      "value": "node1",
    },
    {
      "start": 1112,
      "value": "node1",
    },
    {
      "start": 1117,
      "value": "node1",
    },
    {
      "start": 1117,
      "value": "node1",
    },
    {
      "start": 1124,
      "value": "node2",
    },
    {
      "start": 1131,
      "value": "node2",
    },
    {
      "start": 1137,
      "value": "node1",
    },
    {
      "start": 1137,
      "value": "node3",
    },
    {
      "start": 1142,
      "value": "node1",
    },
    {
      "start": 1142,
      "value": "node3",
    },
    {
      "start": 1149,
      "value": "node4",
    },
    {
      "start": 1156,
      "value": "node4",
    },
    {
      "start": 1162,
      "value": "node3",
    },
    {
      "start": 1162,
      "value": "node5",
    },
    {
      "start": 1167,
      "value": "node1",
    },
    {
      "start": 1167,
      "value": "node5",
    },
    {
      "start": 1174,
      "value": "node6",
    },
    {
      "start": 1181,
      "value": "node6",
    },
    {
      "start": 1185,
      "value": "node5",
    },
    {
      "start": 1185,
      "value": "node7",
    },
    {
      "start": 1190,
      "value": "node1",
    },
    {
      "start": 1190,
      "value": "node7",
    },
    {
      "start": 1197,
      "value": "node8",
    },
    {
      "start": 1204,
      "value": "node8",
    },
    {
      "start": 1210,
      "value": "node7",
    },
    {
      "start": 1210,
      "value": "node10",
    },
    {
      "start": 1215,
      "value": "node1",
    },
    {
      "start": 1215,
      "value": "node10",
    },
    {
      "start": 1223,
      "value": "node10",
    },
    {
      "start": 1230,
      "value": "node10",
    },
    {
      "start": 1234,
      "value": "node10",
    },
    {
      "start": 1234,
      "value": "node10",
    },
    {
      "start": 1238,
      "value": "node1",
    },
    {
      "start": 1238,
      "value": "node1",
    },
    {
      "start": 1240,
      "value": "node1",
    },
    {
      "start": 1240,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!trivial: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node2",
    },
    {
      "start": 1257,
      "value": "node2",
    },
    {
      "start": 1278,
      "value": "node2",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!simpleIf: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1295,
      "value": "node1",
    },
    {
      "start": 1319,
      "value": "node1",
    },
    {
      "start": 1322,
      "value": "node1",
    },
    {
      "start": 1325,
      "value": "node2",
    },
    {
      "start": 1326,
      "value": "node1",
    },
    {
      "start": 1326,
      "value": "node2",
    },
    {
      "start": 1331,
      "value": "node1",
    },
    {
      "start": 1331,
      "value": "node1",
    },
    {
      "start": 1333,
      "value": "node1",
    },
    {
      "start": 1333,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ifElse: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1360,
      "value": "node1",
    },
    {
      "start": 1382,
      "value": "node1",
    },
    {
      "start": 1385,
      "value": "node1",
    },
    {
      "start": 1388,
      "value": "node2",
    },
    {
      "start": 1389,
      "value": "node1",
    },
    {
      "start": 1389,
      "value": "node2",
    },
    {
      "start": 1394,
      "value": "node1",
    },
    {
      "start": 1394,
      "value": "node3",
    },
    {
      "start": 1400,
      "value": "node1",
    },
    {
      "start": 1400,
      "value": "node3",
    },
    {
      "start": 1403,
      "value": "node3",
    },
    {
      "start": 1406,
      "value": "node4",
    },
    {
      "start": 1407,
      "value": "node3",
    },
    {
      "start": 1407,
      "value": "node4",
    },
    {
      "start": 1412,
      "value": "node5",
    },
    {
      "start": 1413,
      "value": "node3",
    },
    {
      "start": 1413,
      "value": "node5",
    },
    {
      "start": 1418,
      "value": "node5",
    },
    {
      "start": 1423,
      "value": "node5",
    },
    {
      "start": 1423,
      "value": "node3",
    },
    {
      "start": 1423,
      "value": "node1",
    },
    {
      "start": 1423,
      "value": "node1",
    },
    {
      "start": 1425,
      "value": "node1",
    },
    {
      "start": 1425,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!forever: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1452,
      "value": "node1",
    },
    {
      "start": 1475,
      "value": "node1",
    },
    {
      "start": 1480,
      "value": "node1",
    },
    {
      "start": 1481,
      "value": "node1",
    },
    {
      "start": 1481,
      "value": "node1",
    },
    {
      "start": 1482,
      "value": "node1",
    },
    {
      "start": 1483,
      "value": "node5",
    },
    {
      "start": 1484,
      "value": "node1",
    },
    {
      "start": 1484,
      "value": "node5",
    },
    {
      "start": 1486,
      "value": "node1",
    },
    {
      "start": 1486,
      "value": "node1",
    },
    {
      "start": 1488,
      "value": "node1",
    },
    {
      "start": 1488,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!forever2: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1515,
      "value": "node1",
    },
    {
      "start": 1539,
      "value": "node1",
    },
    {
      "start": 1544,
      "value": "node1",
    },
    {
      "start": 1554,
      "value": "node1",
    },
    {
      "start": 1554,
      "value": "node1",
    },
    {
      "start": 1556,
      "value": "node1",
    },
    {
      "start": 1557,
      "value": "node2",
    },
    {
      "start": 1560,
      "value": "node2",
    },
    {
      "start": 1561,
      "value": "node2",
    },
    {
      "start": 1562,
      "value": "node1",
    },
    {
      "start": 1562,
      "value": "node2",
    },
    {
      "start": 1564,
      "value": "node1",
    },
    {
      "start": 1564,
      "value": "node1",
    },
    {
      "start": 1566,
      "value": "node1",
    },
    {
      "start": 1566,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!forLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1625,
      "value": "node1",
    },
    {
      "start": 1648,
      "value": "node1",
    },
    {
      "start": 1653,
      "value": "node1",
    },
    {
      "start": 1663,
      "value": "node1",
    },
    {
      "start": 1663,
      "value": "node1",
    },
    {
      "start": 1664,
      "value": "node2",
    },
    {
      "start": 1670,
      "value": "node2",
    },
    {
      "start": 1671,
      "value": "node2",
    },
    {
      "start": 1671,
      "value": "node1",
    },
    {
      "start": 1672,
      "value": "node3",
    },
    {
      "start": 1675,
      "value": "node3",
    },
    {
      "start": 1676,
      "value": "node3",
    },
    {
      "start": 1677,
      "value": "node1",
    },
    {
      "start": 1677,
      "value": "node3",
    },
    {
      "start": 1710,
      "value": "node1",
    },
    {
      "start": 1710,
      "value": "node1",
    },
    {
      "start": 1712,
      "value": "node1",
    },
    {
      "start": 1712,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!whileLoop: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 1739,
      "value": "node0",
    },
    {
      "start": 1764,
      "value": "node1",
    },
    {
      "start": 1770,
      "value": "node1",
    },
    {
      "start": 1775,
      "value": "node1",
    },
    {
      "start": 1775,
      "value": "node1",
    },
    {
      "start": 1776,
      "value": "node2",
    },
    {
      "start": 1778,
      "value": "node2",
    },
    {
      "start": 1778,
      "value": "node1",
    },
    {
      "start": 1778,
      "value": "node1",
    },
    {
      "start": 1780,
      "value": "node0",
    },
    {
      "start": 1780,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!doWhile: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node0",
    },
    {
      "start": 1807,
      "value": "node0",
    },
    {
      "start": 1830,
      "value": "node1",
    },
    {
      "start": 1833,
      "value": "node1",
    },
    {
      "start": 1835,
      "value": "node1",
    },
    {
      "start": 1835,
      "value": "node1",
    },
    {
      "start": 1842,
      "value": "node1",
    },
    {
      "start": 1847,
      "value": "node1",
    },
    {
      "start": 1847,
      "value": "node1",
    },
    {
      "start": 1848,
      "value": "node1",
    },
    {
      "start": 1850,
      "value": "node0",
    },
    {
      "start": 1850,
      "value": "node0",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!switch_1: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 1899,
      "value": "node1",
    },
    {
      "start": 1923,
      "value": "node1",
    },
    {
      "start": 1935,
      "value": "node1",
    },
    {
      "start": 1940,
      "value": "node1",
    },
    {
      "start": 1940,
      "value": "node1",
    },
    {
      "start": 1947,
      "value": "Not found",
    },
    {
      "start": 1954,
      "value": "node1",
    },
    {
      "start": 1970,
      "value": "node2",
    },
    {
      "start": 1986,
      "value": "node1",
    },
    {
      "start": 1986,
      "value": "node3",
    },
    {
      "start": 1991,
      "value": "node1",
    },
    {
      "start": 1991,
      "value": "node3",
    },
    {
      "start": 1998,
      "value": "node5",
    },
    {
      "start": 2003,
      "value": "node1",
    },
    {
      "start": 2003,
      "value": "node5",
    },
    {
      "start": 2010,
      "value": "Not found",
    },
    {
      "start": 2017,
      "value": "node5",
    },
    {
      "start": 2033,
      "value": "node6",
    },
    {
      "start": 2049,
      "value": "node5",
    },
    {
      "start": 2049,
      "value": "node5",
    },
    {
      "start": 2053,
      "value": "node1",
    },
    {
      "start": 2053,
      "value": "node1",
    },
    {
      "start": 2055,
      "value": "node1",
    },
    {
      "start": 2055,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!switch_2: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 2082,
      "value": "node1",
    },
    {
      "start": 2106,
      "value": "node1",
    },
    {
      "start": 2118,
      "value": "node1",
    },
    {
      "start": 2123,
      "value": "node1",
    },
    {
      "start": 2123,
      "value": "node1",
    },
    {
      "start": 2130,
      "value": "node2",
    },
    {
      "start": 2137,
      "value": "node2",
    },
    {
      "start": 2143,
      "value": "node1",
    },
    {
      "start": 2143,
      "value": "node3",
    },
    {
      "start": 2148,
      "value": "node1",
    },
    {
      "start": 2148,
      "value": "node3",
    },
    {
      "start": 2155,
      "value": "node5",
    },
    {
      "start": 2160,
      "value": "node1",
    },
    {
      "start": 2160,
      "value": "node5",
    },
    {
      "start": 2167,
      "value": "node5",
    },
    {
      "start": 2171,
      "value": "node1",
    },
    {
      "start": 2171,
      "value": "node1",
    },
    {
      "start": 2173,
      "value": "node1",
    },
    {
      "start": 2173,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!ManyIfs: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 2201,
      "value": "node1",
    },
    {
      "start": 2224,
      "value": "node1",
    },
    {
      "start": 2227,
      "value": "node1",
    },
    {
      "start": 2230,
      "value": "node2",
    },
    {
      "start": 2231,
      "value": "node1",
    },
    {
      "start": 2231,
      "value": "node2",
    },
    {
      "start": 2236,
      "value": "node1",
    },
    {
      "start": 2236,
      "value": "node5",
    },
    {
      "start": 2240,
      "value": "node1",
    },
    {
      "start": 2240,
      "value": "node5",
    },
    {
      "start": 2243,
      "value": "node5",
    },
    {
      "start": 2246,
      "value": "node6",
    },
    {
      "start": 2247,
      "value": "node5",
    },
    {
      "start": 2247,
      "value": "node6",
    },
    {
      "start": 2252,
      "value": "node7",
    },
    {
      "start": 2253,
      "value": "node5",
    },
    {
      "start": 2253,
      "value": "node7",
    },
    {
      "start": 2258,
      "value": "node7",
    },
    {
      "start": 2263,
      "value": "node7",
    },
    {
      "start": 2263,
      "value": "node5",
    },
    {
      "start": 2263,
      "value": "node10",
    },
    {
      "start": 2267,
      "value": "node1",
    },
    {
      "start": 2267,
      "value": "node10",
    },
    {
      "start": 2270,
      "value": "node10",
    },
    {
      "start": 2273,
      "value": "node11",
    },
    {
      "start": 2274,
      "value": "node10",
    },
    {
      "start": 2274,
      "value": "node11",
    },
    {
      "start": 2279,
      "value": "node10",
    },
    {
      "start": 2279,
      "value": "node12",
    },
    {
      "start": 2285,
      "value": "node10",
    },
    {
      "start": 2285,
      "value": "node12",
    },
    {
      "start": 2288,
      "value": "node12",
    },
    {
      "start": 2291,
      "value": "node13",
    },
    {
      "start": 2292,
      "value": "node12",
    },
    {
      "start": 2292,
      "value": "node13",
    },
    {
      "start": 2297,
      "value": "node12",
    },
    {
      "start": 2297,
      "value": "node10",
    },
    {
      "start": 2297,
      "value": "node16",
    },
    {
      "start": 2301,
      "value": "node1",
    },
    {
      "start": 2301,
      "value": "node16",
    },
    {
      "start": 2304,
      "value": "node16",
    },
    {
      "start": 2307,
      "value": "node17",
    },
    {
      "start": 2308,
      "value": "node16",
    },
    {
      "start": 2308,
      "value": "node17",
    },
    {
      "start": 2313,
      "value": "node16",
    },
    {
      "start": 2313,
      "value": "node18",
    },
    {
      "start": 2319,
      "value": "node16",
    },
    {
      "start": 2319,
      "value": "node18",
    },
    {
      "start": 2322,
      "value": "node18",
    },
    {
      "start": 2325,
      "value": "node19",
    },
    {
      "start": 2326,
      "value": "node18",
    },
    {
      "start": 2326,
      "value": "node19",
    },
    {
      "start": 2331,
      "value": "node20",
    },
    {
      "start": 2332,
      "value": "node18",
    },
    {
      "start": 2332,
      "value": "node20",
    },
    {
      "start": 2337,
      "value": "node20",
    },
    {
      "start": 2342,
      "value": "node20",
    },
    {
      "start": 2342,
      "value": "node18",
    },
    {
      "start": 2342,
      "value": "node16",
    },
    {
      "start": 2342,
      "value": "node16",
    },
    {
      "start": 2344,
      "value": "node1",
    },
    {
      "start": 2344,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!IfWithoutBraces: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 2361,
      "value": "node1",
    },
    {
      "start": 2529,
      "value": "node1",
    },
    {
      "start": 2534,
      "value": "node1",
    },
    {
      "start": 2535,
      "value": "node1",
    },
    {
      "start": 2535,
      "value": "node1",
    },
    {
      "start": 2536,
      "value": "node1",
    },
    {
      "start": 2537,
      "value": "node2",
    },
    {
      "start": 2538,
      "value": "node1",
    },
    {
      "start": 2538,
      "value": "node2",
    },
    {
      "start": 2544,
      "value": "node2",
    },
    {
      "start": 2547,
      "value": "node2",
    },
    {
      "start": 2550,
      "value": "node9",
    },
    {
      "start": 2551,
      "value": "node2",
    },
    {
      "start": 2551,
      "value": "node9",
    },
    {
      "start": 2557,
      "value": "node2",
    },
    {
      "start": 2557,
      "value": "node2",
    },
    {
      "start": 2561,
      "value": "node1",
    },
    {
      "start": 2561,
      "value": "node9",
    },
    {
      "start": 2565,
      "value": "node1",
    },
    {
      "start": 2565,
      "value": "node9",
    },
    {
      "start": 2570,
      "value": "node9",
    },
    {
      "start": 2571,
      "value": "node9",
    },
    {
      "start": 2571,
      "value": "node9",
    },
    {
      "start": 2572,
      "value": "node9",
    },
    {
      "start": 2573,
      "value": "node10",
    },
    {
      "start": 2574,
      "value": "node9",
    },
    {
      "start": 2574,
      "value": "node10",
    },
    {
      "start": 2580,
      "value": "node10",
    },
    {
      "start": 2583,
      "value": "node10",
    },
    {
      "start": 2586,
      "value": "node17",
    },
    {
      "start": 2587,
      "value": "node10",
    },
    {
      "start": 2587,
      "value": "node17",
    },
    {
      "start": 2595,
      "value": "node17",
    },
    {
      "start": 2601,
      "value": "node17",
    },
    {
      "start": 2607,
      "value": "node10",
    },
    {
      "start": 2607,
      "value": "node10",
    },
    {
      "start": 2611,
      "value": "node9",
    },
    {
      "start": 2611,
      "value": "node9",
    },
    {
      "start": 2613,
      "value": "node1",
    },
    {
      "start": 2613,
      "value": "node1",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!LabeledStatement: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node3",
    },
    {
      "start": 2632,
      "value": "node3",
    },
    {
      "start": 2664,
      "value": "node3",
    },
    {
      "start": 2677,
      "value": "node3",
    },
    {
      "start": 2681,
      "value": "node3",
    },
    {
      "start": 2681,
      "value": "node3",
    },
    {
      "start": 2688,
      "value": "node3",
    },
    {
      "start": 2693,
      "value": "node3",
    },
    {
      "start": 2703,
      "value": "node3",
    },
    {
      "start": 2703,
      "value": "node3",
    },
    {
      "start": 2704,
      "value": "node4",
    },
    {
      "start": 2709,
      "value": "node4",
    },
    {
      "start": 2710,
      "value": "node4",
    },
    {
      "start": 2710,
      "value": "node3",
    },
    {
      "start": 2711,
      "value": "node5",
    },
    {
      "start": 2714,
      "value": "node5",
    },
    {
      "start": 2715,
      "value": "node6",
    },
    {
      "start": 2716,
      "value": "node3",
    },
    {
      "start": 2716,
      "value": "node6",
    },
    {
      "start": 2722,
      "value": "node6",
    },
    {
      "start": 2725,
      "value": "node6",
    },
    {
      "start": 2734,
      "value": "node7",
    },
    {
      "start": 2735,
      "value": "node6",
    },
    {
      "start": 2735,
      "value": "node7",
    },
    {
      "start": 2743,
      "value": "node7",
    },
    {
      "start": 2758,
      "value": "node7",
    },
    {
      "start": 2764,
      "value": "node6",
    },
    {
      "start": 2764,
      "value": "node10",
    },
    {
      "start": 2769,
      "value": "node6",
    },
    {
      "start": 2769,
      "value": "node10",
    },
    {
      "start": 2783,
      "value": "node6",
    },
    {
      "start": 2787,
      "value": "node3",
    },
    {
      "start": 2787,
      "value": "node3",
    },
    {
      "start": 2787,
      "value": "node3",
    },
    {
      "start": 2790,
      "value": "node3",
    },
    {
      "start": 2790,
      "value": "node3",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!LabelledStatementFlow: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node8",
    },
    {
      "start": 2830,
      "value": "node8",
    },
    {
      "start": 2867,
      "value": "node8",
    },
    {
      "start": 2874,
      "value": "node8",
    },
    {
      "start": 2893,
      "value": "node3",
    },
    {
      "start": 2894,
      "value": "node8",
    },
    {
      "start": 2894,
      "value": "node3",
    },
    {
      "start": 2900,
      "value": "node3",
    },
    {
      "start": 2905,
      "value": "node3",
    },
    {
      "start": 2906,
      "value": "node3",
    },
    {
      "start": 2906,
      "value": "node3",
    },
    {
      "start": 2907,
      "value": "node3",
    },
    {
      "start": 2908,
      "value": "node3",
    },
    {
      "start": 2909,
      "value": "node3",
    },
    {
      "start": 2909,
      "value": "node3",
    },
    {
      "start": 2938,
      "value": "node3",
    },
    {
      "start": 2949,
      "value": "node3",
    },
    {
      "start": 2955,
      "value": "node3",
    },
    {
      "start": 2955,
      "value": "node7",
    },
    {
      "start": 2980,
      "value": "node3",
    },
    {
      "start": 2980,
      "value": "node7",
    },
    {
      "start": 3009,
      "value": "node3",
    },
    {
      "start": 3013,
      "value": "node8",
    },
    {
      "start": 3013,
      "value": "node8",
    },
    {
      "start": 3013,
      "value": "node8",
    },
    {
      "start": 3015,
      "value": "node8",
    },
    {
      "start": 3015,
      "value": "node8",
    },
  ],
}
`;

exports[`TypeScript: sample.ts!TrivialUnreach: Segmentation 1`] = `
Lookup {
  "ranges": [
    {
      "start": 0,
      "value": "node1",
    },
    {
      "start": 3046,
      "value": "node1",
    },
    {
      "start": 3087,
      "value": "node1",
    },
    {
      "start": 3090,
      "value": "node1",
    },
    {
      "start": 3093,
      "value": "node2",
    },
    {
      "start": 3094,
      "value": "node1",
    },
    {
      "start": 3094,
      "value": "node2",
    },
    {
      "start": 3113,
      "value": "node2",
    },
    {
      "start": 3131,
      "value": "node2",
    },
    {
      "start": 3135,
      "value": "node1",
    },
    {
      "start": 3135,
      "value": "node1",
    },
    {
      "start": 3137,
      "value": "node1",
    },
    {
      "start": 3137,
      "value": "node1",
    },
  ],
}
`;
